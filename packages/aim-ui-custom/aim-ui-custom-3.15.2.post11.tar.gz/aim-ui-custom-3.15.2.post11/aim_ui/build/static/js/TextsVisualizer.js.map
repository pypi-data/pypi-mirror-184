{"version":3,"sources":["../node_modules/react-iframe/dist/es/iframe.js","../../src/fscreen.js","../../src/index.tsx","pages/RunDetail/TextsVisualizer/TextsVisualizer.tsx","pages/RunDetail/TextsVisualizer/index.ts"],"names":["Iframe","url","allowFullScreen","position","display","height","width","overflow","styles","onLoad","onMouseOver","onMouseOut","scrolling","id","frameBorder","ariaHidden","sandbox","allow","className","title","ariaLabel","ariaLabelledby","name","target","loading","importance","referrerpolicy","allowpaymentrequest","src","key","defaultProps","objectAssign","style","join","props","Object","create","keys","prop","i","hasOwnProperty","pop","currentAllow","replace","trim","border","React","createElement","assign","fullscreenEnabled","fullscreenElement","requestFullscreen","exitFullscreen","fullscreenchange","fullscreenerror","fullscreen","webkit","moz","ms","document","window","vendor","element","requestFullscreenFunction","bind","addEventListener","type","handler","options","removeEventListener","Boolean","val","toLowerCase","FullScreen","handle","onChange","children","classNames","push","active","useEffect","ref","node","undefined","fullScreenBtnCSS","MyFullScreen","useState","setActive","useRef","handleChange","fscreen","current","enter","useCallback","then","exit","Promise","resolve","useMemo","useFullScreenHandle","onClick","dataurlToBlobUrl","parts","split","mime","substr","blob","b64toBlob","URL","createObjectURL","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","length","slice","byteNumbers","Array","charCodeAt","byteArray","Uint8Array","Blob","is_all_custom_data","rs","text","startsWith","is_table_data","content","is_moleculer_data","molecular_types","Set","add","has","is_html_data","html_escape","html","rules","expression","replacement","result","toString","rule","replaceAll","render_raw_moleculer_iframe","trajectory_url","dtype","host","location","protocol","trajectory_path","substring","JSON","parse","path","indexOf","render_table_data","data","e","columns","j","plain","render_html_data","showFullScreenBtn","backgroudColor","padding","TextsVisualizer","tableRef","tableColumns","dataKey","flexGrow","cellRenderer","cellData","ErrorBoundary","processedValues","reverse","map","object","step","DataList","tableData","isLoading","searchableKeys","displayName","memo"],"mappings":"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","file":"static/js/TextsVisualizer.js?version=625b4dc8faa8d4ee872d","sourcesContent":["import React from \"react\";\nimport objectAssign from \"object-assign\";\nconst Iframe = ({ url, allowFullScreen, position, display, height, width, overflow, styles, onLoad, onMouseOver, onMouseOut, scrolling, id, frameBorder, ariaHidden, sandbox, allow, className, title, ariaLabel, ariaLabelledby, name, target, loading, importance, referrerpolicy, allowpaymentrequest, src, key }) => {\n    const defaultProps = objectAssign({\n        src: src || url,\n        target: target || null,\n        style: {\n            position: position || null,\n            display: display || \"initial\",\n            overflow: overflow || null\n        },\n        scrolling: scrolling || null,\n        allowpaymentrequest: allowpaymentrequest || null,\n        importance: importance || null,\n        sandbox: (sandbox && [...sandbox].join(\" \")) || null,\n        loading: loading || null,\n        styles: styles || null,\n        name: name || null,\n        className: className || null,\n        allowFullScreen: \"allowFullScreen\" || null,\n        referrerpolicy: referrerpolicy || null,\n        title: title || null,\n        allow: allow || null,\n        id: id || null,\n        \"aria-labelledby\": ariaLabelledby || null,\n        \"aria-hidden\": ariaHidden || null,\n        \"aria-label\": ariaLabel || null,\n        width: width || null,\n        height: height || null,\n        onLoad: onLoad || null,\n        onMouseOver: onMouseOver || null,\n        onMouseOut: onMouseOut || null,\n        key: key || \"iframe\"\n    });\n    let props = Object.create(null);\n    for (let prop of Object.keys(defaultProps)) {\n        if (defaultProps[prop] != null) {\n            props[prop] = defaultProps[prop];\n        }\n    }\n    for (let i of Object.keys(props.style)) {\n        if (props.style[i] == null) {\n            delete props.style[i];\n        }\n    }\n    if (props.styles) {\n        for (let key of Object.keys(props.styles)) {\n            if (props.styles.hasOwnProperty(key)) {\n                props.style[key] = props.styles[key];\n            }\n            if (Object.keys(props.styles).pop() == key) {\n                delete props.styles;\n            }\n        }\n    }\n    if (allowFullScreen) {\n        if (\"allow\" in props) {\n            const currentAllow = props.allow.replace(\"fullscreen\", \"\");\n            props.allow = `fullscreen ${currentAllow.trim()}`.trim();\n        }\n        else {\n            props.allow = \"fullscreen\";\n        }\n    }\n    if (frameBorder >= 0) {\n        if (!props.style.hasOwnProperty(\"border\")) {\n            props.style.border = frameBorder;\n        }\n    }\n    return React.createElement(\"iframe\", Object.assign({}, props));\n};\nexport default Iframe;\n","const key = {\n  fullscreenEnabled: 0,\n  fullscreenElement: 1,\n  requestFullscreen: 2,\n  exitFullscreen: 3,\n  fullscreenchange: 4,\n  fullscreenerror: 5,\n  fullscreen: 6\n};\n\nconst webkit = [\n  'webkitFullscreenEnabled',\n  'webkitFullscreenElement',\n  'webkitRequestFullscreen',\n  'webkitExitFullscreen',\n  'webkitfullscreenchange',\n  'webkitfullscreenerror',\n  '-webkit-full-screen',\n];\n\nconst moz = [\n  'mozFullScreenEnabled',\n  'mozFullScreenElement',\n  'mozRequestFullScreen',\n  'mozCancelFullScreen',\n  'mozfullscreenchange',\n  'mozfullscreenerror',\n  '-moz-full-screen',\n];\n\nconst ms = [\n  'msFullscreenEnabled',\n  'msFullscreenElement',\n  'msRequestFullscreen',\n  'msExitFullscreen',\n  'MSFullscreenChange',\n  'MSFullscreenError',\n  '-ms-fullscreen',\n];\n\n// so it doesn't throw if no window or document\nconst document = typeof window !== 'undefined' && typeof window.document !== 'undefined' ? window.document : {};\n\nconst vendor = (\n  ('fullscreenEnabled' in document && Object.keys(key)) ||\n  (webkit[0] in document && webkit) ||\n  (moz[0] in document && moz) ||\n  (ms[0] in document && ms) ||\n  []\n);\n\nexport default {\n  requestFullscreen: element => element[vendor[key.requestFullscreen]](),\n  requestFullscreenFunction: element => element[vendor[key.requestFullscreen]],\n  get exitFullscreen() { return document[vendor[key.exitFullscreen]].bind(document); },\n  get fullscreenPseudoClass() { return `:${vendor[key.fullscreen]}`; },\n  addEventListener: (type, handler, options) => document.addEventListener(vendor[key[type]], handler, options),\n  removeEventListener: (type, handler, options) => document.removeEventListener(vendor[key[type]], handler, options),\n  get fullscreenEnabled() { return Boolean(document[vendor[key.fullscreenEnabled]]); },\n  set fullscreenEnabled(val) {},\n  get fullscreenElement() { return document[vendor[key.fullscreenElement]]; },\n  set fullscreenElement(val) {},\n  get onfullscreenchange() { return document[`on${vendor[key.fullscreenchange]}`.toLowerCase()]; },\n  set onfullscreenchange(handler) { return document[`on${vendor[key.fullscreenchange]}`.toLowerCase()] = handler; },\n  get onfullscreenerror() { return document[`on${vendor[key.fullscreenerror]}`.toLowerCase()]; },\n  set onfullscreenerror(handler) { return document[`on${vendor[key.fullscreenerror]}`.toLowerCase()] = handler; },\n};\n","import React, {\n  useCallback,\n  useState,\n  useRef,\n  useEffect,\n  useMemo,\n} from 'react';\nimport fscreen from 'fscreen';\n\nexport interface FullScreenHandle {\n  active: boolean;\n  enter: () => Promise<void>;\n  exit: () => Promise<void>;\n  node: React.MutableRefObject<HTMLDivElement | null>;\n}\n\nexport interface FullScreenProps {\n  handle: FullScreenHandle;\n  children: any;\n  onChange?: (state: boolean, handle: FullScreenHandle) => void;\n  className?: string;\n}\n\nexport function useFullScreenHandle(): FullScreenHandle {\n  const [active, setActive] = useState<boolean>(false);\n  const node = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    const handleChange = () => {\n      setActive(fscreen.fullscreenElement === node.current);\n    };\n    fscreen.addEventListener('fullscreenchange', handleChange);\n    return () => fscreen.removeEventListener('fullscreenchange', handleChange);\n  }, []);\n\n  const enter = useCallback(() => {\n    if (fscreen.fullscreenElement) {\n      return fscreen.exitFullscreen().then(() => {\n        return fscreen.requestFullscreen(node.current);\n      });\n    } else if (node.current) {\n      return fscreen.requestFullscreen(node.current);\n    }\n  }, []);\n\n  const exit = useCallback(() => {\n    if (fscreen.fullscreenElement === node.current) {\n      return fscreen.exitFullscreen();\n    }\n    return Promise.resolve();\n  }, []);\n\n  return useMemo(\n    () => ({\n      active,\n      enter,\n      exit,\n      node,\n    }),\n    [active, enter, exit],\n  );\n}\n\nexport const FullScreen: React.FC<FullScreenProps> = ({\n  handle,\n  onChange,\n  children,\n  className,\n}) => {\n  const classNames = [];\n  if (className) {\n    classNames.push(className);\n  }\n\n  classNames.push('fullscreen');\n\n  if (handle.active) {\n    classNames.push('fullscreen-enabled');\n  }\n\n  useEffect(() => {\n    if (onChange) {\n      onChange(handle.active, handle);\n    }\n  }, [handle.active]);\n\n  return (\n    <div\n      className={classNames.join(' ')}\n      ref={handle.node}\n      style={handle.active ? { height: '100%', width: '100%' } : undefined}\n    >\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport Iframe from 'react-iframe';\nimport { FullScreen, useFullScreenHandle } from 'react-full-screen';\n\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\nimport DataList from 'components/kit/DataList';\n\nimport { ITableRef } from 'types/components/Table/Table';\n\nimport { ITextsVisualizerProps } from '../types';\n\nimport './TextsVisualizer.scss';\n\nconst fullScreenBtnCSS = `\n<style>\nbody {\n  background: white;\n}\n.fullscreen-button {\n  position: absolute;\n  z-index: 100;\n  top:  5px;\n  right:  5px;\n  background: rgba(0,0,0,0.05);\n  border:  0;\n  width:  40px;\n  height:  40px;\n  border-radius: 50%;\n  box-sizing: border-box;\n  transition:  transform .3s;\n  font-size: 0;\n  opacity: 1;\n  pointer-events: auto;\n  cursor:  pointer;\n}\n.fullscreen-button:hover {\n  transform: scale(1.125);\n}\n.fullscreen-button span {\n  background: white;\n  width:  4px;\n  height:  4px;\n  border-top:  2.5px solid #111; /* color */\n  border-left:  2.5px solid #111; /* color */\n  position: absolute;\n  outline: 1px solid transparent;\n  -webkit-backface-visibility: hidden;\n  transform: translateZ(0);\n  will-change: transform;\n  -webkit-perspective: 1000;\n  transition:  .3s;\n  transition-delay: .75s;\n}\n.fullscreen-button span:nth-child(1) {\n  top: 11px;\n  left: 11px;\n}\n.fullscreen-button span:nth-child(2) {\n  top: 11px;\n  left: 22px;\n  transform: rotate(90deg);\n}\n.fullscreen-button span:nth-child(3) {\n  top: 22px;\n  left: 11px;\n  transform: rotate(-90deg);\n}\n.fullscreen-button span:nth-child(4) {\n  top: 22px;\n  left: 22px;\n  transform: rotate(-180deg);\n}\n\n/* Fullscreen True\n------------------------------*/\n[fullscreen] .fullscreen-button span:nth-child(1) {\n  top: 22px;\n  left: 22px;\n}\n[fullscreen] .fullscreen-button span:nth-child(2) {\n  top: 22px;\n  left: 11px;\n}\n[fullscreen] .fullscreen-button span:nth-child(3) {\n  top: 11px;\n  left: 22px;\n}\n[fullscreen] .fullscreen-button span:nth-child(4) {\n  top: 11px;\n  left: 11px;\n}\n\n/* Dark Style\n------------------------------*/\n[light-mode=dark] {\n  background: #111;\n  color:  #fff;\n}\n[light-mode=dark] .fullscreen-button {\n  background: rgba(255,255,255,.05);\n}\n\n[light-mode=dark] .fullscreen-button span {\n  border-top:  2.5px solid #fff;\n  border-left:  2.5px solid #fff;\n}\n</style>\n`;\nconst MyFullScreen = (props: any) => {\n  const handler = useFullScreenHandle();\n  return (\n    <>\n      <button className='fullscreen-button' onClick={handler.enter}>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n      </button>\n      <FullScreen className='myfullscreen' handle={handler}>\n        {props.children}\n      </FullScreen>\n    </>\n  );\n};\n\nfunction dataurlToBlobUrl(url: any) {\n  var parts = url.split(',', 2);\n  var mime = parts[0].substr(5).split(';')[0];\n  var blob = b64toBlob(parts[1], mime);\n  return URL.createObjectURL(blob);\n}\n\nconst b64toBlob = (b64Data: any, contentType = '', sliceSize = 512) => {\n  const byteCharacters = atob(b64Data);\n  const byteArrays = [];\n\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n    const slice = byteCharacters.slice(offset, offset + sliceSize);\n\n    const byteNumbers = new Array(slice.length);\n    for (let i = 0; i < slice.length; i++) {\n      byteNumbers[i] = slice.charCodeAt(i);\n    }\n\n    const byteArray = new Uint8Array(byteNumbers);\n    byteArrays.push(byteArray);\n  }\n\n  const blob = new Blob(byteArrays, { type: contentType });\n  return blob;\n};\n\nfunction is_all_custom_data(rs: any): Boolean {\n  if (!rs) {\n    return false;\n  }\n  for (var i = 0; i < rs.length; i++) {\n    if (!rs[i].text.startsWith('data:text/')) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction is_table_data(content: string): Boolean {\n  return content.startsWith('data:text/table,');\n}\n\nfunction is_moleculer_data(content: string): Boolean {\n  let molecular_types = new Set<string>();\n  molecular_types.add('data:text/pdb');\n  molecular_types.add('data:text/sdf');\n  molecular_types.add('data:text/pdbqt');\n  molecular_types.add('data:text/mol2');\n  molecular_types.add('data:text/molecule-file-url');\n  molecular_types.add('data:text/molecule-file');\n  return molecular_types.has(content.split(',', 1)[0]);\n}\n\nfunction is_html_data(content: string): Boolean {\n  return content.startsWith('data:text/html,');\n}\n\nfunction html_escape(html: string) {\n  var rules = [\n    { expression: /&/g, replacement: '&amp;' }, // keep this rule at first position\n    { expression: /</g, replacement: '&lt;' },\n    { expression: />/g, replacement: '&gt;' },\n    { expression: /\"/g, replacement: '&quot;' },\n    { expression: /'/g, replacement: '&#039;' }, // or  &#39;  or  &#0039;\n    // &apos;  is not supported by IE8\n    // &apos;  is not defined in HTML 4\n  ];\n  var result = html.toString();\n  for (var i = 0; i < rules.length; ++i) {\n    var rule = rules[i];\n    result = result.replaceAll(rule.expression, rule.replacement);\n  }\n  return result;\n}\n\nfunction render_raw_moleculer_iframe(content: any) {\n  var url: any;\n  var trajectory_url: any;\n  var dtype: any;\n  const host = window.location.protocol + '//' + window.location.host;\n\n  if (typeof content === 'object') {\n    // Table Moleculer Element\n    const element = content;\n    url = host + '/artifacts/' + element['path'];\n    dtype = url.split('.').pop();\n    if (element.trajectory_path) {\n      trajectory_url = host + '/artifacts/' + element.trajectory_path;\n    }\n  } else if (content.startsWith('data:text/molecule-file,')) {\n    // Moleculer File\n    content = content.substring('data:text/molecule-file,'.length);\n    const element = JSON.parse(content);\n    url = host + '/artifacts/' + element.path;\n    dtype = url.split('.').pop();\n    if (element.trajectory_path) {\n      trajectory_url = host + '/artifacts/' + element.trajectory_path;\n    }\n  } else if (content.startsWith('data:text/molecule-file-url,')) {\n    // Old Style Moleculer File\n    const path = content.substring('data:text/molecule-file-url,'.length);\n    url = host + '/artifacts/' + path;\n    dtype = url.split('.').pop();\n  } else {\n    // Old Style(embeded) Molecule Element\n    dtype = content.substring(0, content.indexOf(',')).split('/')[1];\n    content = content.substring(content.indexOf(',') + 1);\n    const blob = new Blob([content], {\n      type: 'text/plain',\n    });\n    url = URL.createObjectURL(blob);\n  }\n  const html: string = `<!DOCTYPE html>\n  <html lang=\"en\">\n    <head>\n      <meta charset=\"utf-8\">\n      <meta name=\"viewport\" content=\"width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\">\n      ${fullScreenBtnCSS}\n      <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.0/jquery-ui.css\">\n    </head>\n    <body>\n      <script src=\"http://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js\"></script> \n      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.0/jquery-ui.js\"></script>\n      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/ngl/2.0.2/ngl.js\"></script>\n      <script>\n        var stage;\n\n        function toggleFullscreen() {\n          stage.toggleFullscreen();\n        }\n\n        document.addEventListener(\"DOMContentLoaded\", function () {\n\n          stage = new NGL.Stage(\"viewport\", { backgroundColor: \"white\" } );\n          var url = \"${url}\";\n          var dtype = \"${dtype}\";\n\n          stage.loadFile(url, {defaultRepresentation: true, ext: dtype}).then(function (o) {\n            o.addRepresentation('cartoon');\n            o.autoView();\n            var trajectory_url = \"${trajectory_url}\";\n            if (trajectory_url !== \"undefined\") {\n              NGL.autoLoad(trajectory_url).then(function (frames) {\n                var traj = o.addTrajectory(frames).trajectory;\n                var component = stage.compList[0];\n                component.addRepresentation(\"cartoon\", {'sele': 'protein'});\n                component.addRepresentation(\"licorice\", {'sele': 'not hydrogen and not protein'});\n                \n                var container = stage.viewer.container;\n                var $container = $(container);\n                var frame = 0;\n                var timeout = 1000;\n                var playerInterval;\n                var count = traj.numframes || traj._frameCount;\n        \n                var pause = function(){\n                    $playerButton.text( \"play\" );\n                    if( playerInterval !== undefined ){\n                        clearInterval( playerInterval );\n                    }\n                }\n                \n                var play = function(){\n                    $playerButton.text( \"pause\" );\n                    playerInterval = setInterval(function(){\n                        frame = frame + 1;\n                            \n                        if (frame > count - 1){\n                            frame = 0;\n                        }\n                            \n                        $playerSlider.slider(\"option\", \"value\", frame);\n                        traj.setFrame(frame);\n                    }, timeout)\n                };\n                \n                var $playerButton = $(\"<button>play</button>\")\n                    .css( \"float\", \"left\" )\n                    .css( \"width\", \"55px\" )\n                    .css( \"opacity\", \"0.7\" )\n                    .click( function( event ){\n                        if($playerButton.text() === \"play\" ){\n                            play();\n                        }else if($playerButton.text() === \"pause\" ){\n                            pause();\n                        }\n                    });\n                \n                var $playerSlider = $( \"<div></div>\" )\n                    .css( \"margin-left\", \"70px\" )\n                    .css( \"position\", \"relative\" )\n                    .css( \"bottom\", \"-4px\" )\n                    .slider({\n                        value: 0,\n                        min: 0,\n                        max: count-1,\n                        slide: function(event, ui){\n                            pause();\n                            traj.setFrame(ui.value);\n                            frame = ui.value;\n                        },\n                    })\n                \n                var $player = $( \"<div></div>\" )\n                    .css( \"position\", \"relative\" )\n                    .css( \"bottom\", \"10%\" )\n                    .css( \"width\", \"94%\" )\n                    .css( \"margin-left\", \"3%\" )\n                    .css( \"opacity\", \"0.7\" )\n                    .append( $playerButton )\n                    .append( $playerSlider )\n                    .appendTo( $container );\n              });\n            } else {\n              stage.setSpin(true);\n            }\n          });\n        });\n      </script>\n      <button class=\"fullscreen-button\" onclick=\"toggleFullscreen()\">\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n      </button>\n      <div style=\"width:100%; height:300px;\">\n        <div id=\"viewport\" style=\"width:100%; height:100%;\"></div>\n      </div>\n    </body>\n  </html>`;\n  return html;\n}\n\nfunction render_table_data(content: any) {\n  content = content.substring('data:text/table,'.length);\n  var data: any;\n  try {\n    data = JSON.parse(content);\n  } catch (e) {\n    return null;\n  }\n  var html: string = `data:text/html,<html>\n  <head>\n    <script src=\"https://code.jquery.com/jquery-3.5.1.js\"></script>\n    <script src=\"https://cdn.datatables.net/1.13.1/js/jquery.dataTables.min.js\"></script>\n    <script src=\"https://cdn.datatables.net/1.13.1/js/dataTables.bootstrap5.min.js\"></script>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.2.0/css/bootstrap.min.css\">\n    <link rel=\"stylesheet\" href=\"https://cdn.datatables.net/1.13.1/css/dataTables.bootstrap5.min.css\">\n    ${fullScreenBtnCSS}\n  </head>\n  <body>\n    <script>\n      function go_fullscreen(elem){\n        elem.nextSibling.requestFullscreen();\n        return false;\n      }\n    </script>\n    <table class=\"table table-striped\" style=\"width:100%\">\n      <thead>\n        <tr>`;\n  for (var i = 0; i < data.columns.length; i++) {\n    html += '<th>' + html_escape(data.columns[i]) + '</th>';\n  }\n  html += `</tr>\n      </thead>\n      <tbody>`;\n  for (var i = 0; i < data.data.length; i++) {\n    html += '<tr>';\n    for (var j = 0; j < data.data[i].length; j++) {\n      const content = data.data[i][j] ? data.data[i][j].toString() : '';\n      var element: any = undefined;\n      const host = window.location.protocol + '//' + window.location.host;\n\n      if (typeof data.data[i][j] === 'object') {\n        element = data.data[i][j];\n      }\n      if (\n        (element && element['_type'] === 'image-file') ||\n        content.startsWith('data:image/') // Old Style(embeded) Image Element\n      ) {\n        const url =\n          element && element['_type'] === 'image-file'\n            ? host + '/artifacts/' + element['path']\n            : dataurlToBlobUrl(data.data[i][j]);\n        html += `\n          <td>\n            <div style=\"position: relative;\">\n              <button class=\"fullscreen-button\" onclick=\"go_fullscreen(this)\">\n                <span></span>\n                <span></span>\n                <span></span>\n                <span></span>\n              </button>\n              <img src=\"${url}\" loading=\"lazy\" height=\"200px\">\n            </div>\n          </td>`;\n      } else if (\n        (element && element['_type'] === 'molecule-file') ||\n        content.startsWith('data:text/') // Old Style(embeded) Molecule Element\n      ) {\n        var blob = new Blob(\n          [render_raw_moleculer_iframe(element ? element : content)],\n          {\n            type: 'text/html',\n          },\n        );\n        const url = URL.createObjectURL(blob);\n        html += `<td><iframe src=\"${url}\" loading=\"lazy\" allow=\"fullscreen\" width=\"200px\" height=\"200px\" style=\"border: 0; color: white;\"></iframe></td>`;\n      } else {\n        const plain = data.data[i][j]\n          ? html_escape(data.data[i][j].toString())\n          : '';\n        html += `<td>${plain}</td>`;\n      }\n    }\n    html += '</tr>';\n  }\n  html += `\n      </tbody>\n    <table>\n    <script>\n    $(document).ready(function () {\n        $('table').DataTable();\n    });\n    </script>\n  </body>\n  </html>`;\n  return render_html_data(html, true);\n}\n\nfunction render_moleculer_data(content: string) {\n  const html = render_raw_moleculer_iframe(content);\n  return render_html_data(html, false);\n}\n\nfunction render_html_data(content: string, showFullScreenBtn: Boolean) {\n  content = content.substring('data:text/html,'.length);\n  const blob = new Blob([content], {\n    type: 'text/html',\n  });\n  const url = URL.createObjectURL(blob);\n  const element = (\n    <Iframe\n      url={url}\n      width='100%'\n      height='100%'\n      loading='lazy'\n      className=''\n      display='block'\n      position='relative'\n      allowFullScreen={true}\n      styles={{\n        border: '1px solid rgb(233 232 231)',\n        backgroudColor: '#fff',\n        padding: '20px',\n      }}\n    />\n  );\n  return (\n    <div style={{ height: '350px', position: 'relative' }}>\n      {showFullScreenBtn ? <MyFullScreen>{element}</MyFullScreen> : element}\n    </div>\n  );\n}\n\nfunction TextsVisualizer(\n  props: ITextsVisualizerProps | any,\n): React.FunctionComponentElement<React.ReactNode> {\n  const tableRef = React.useRef<ITableRef>(null);\n\n  const tableColumns = [\n    {\n      dataKey: 'step',\n      key: 'step',\n      title: 'Step',\n      width: 100,\n    },\n    {\n      dataKey: 'index',\n      key: 'index',\n      title: 'Index',\n      width: 100,\n    },\n    {\n      dataKey: 'text',\n      key: 'text',\n      title: 'Text',\n      width: 0,\n      flexGrow: 1,\n      // TODO: replace with a wrapper component for all types of texts visualization\n      // eslint-disable-next-line react/display-name\n      cellRenderer: ({ cellData }: any) => (\n        <div className='ScrollBar__hidden' style={{ overflow: 'auto' }}>\n          <pre>{cellData}</pre>\n        </div>\n      ),\n    },\n  ];\n  return (\n    <ErrorBoundary>\n      <div\n        className='TextsVisualizer'\n        style={{ height: '100%', overflow: 'auto' }}\n      >\n        {is_all_custom_data(props?.data?.processedValues) ? (\n          (props?.data?.processedValues || []).reverse().map((object: any) => (\n            <div key={'custom-resource-' + object.step}>\n              <section>\n                <p>Step {object.step}</p>\n                {is_moleculer_data(object.text)\n                  ? render_moleculer_data(object.text)\n                  : null}\n                {is_table_data(object.text)\n                  ? render_table_data(object.text)\n                  : null}\n                {is_html_data(object.text)\n                  ? render_html_data(object.text, true)\n                  : null}\n              </section>\n            </div>\n          ))\n        ) : (\n          <DataList\n            tableRef={tableRef}\n            tableData={props?.data?.processedValues}\n            tableColumns={tableColumns}\n            isLoading={props?.isLoading}\n            searchableKeys={['text']}\n          />\n        )}\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nTextsVisualizer.displayName = 'TextsVisualizer';\n\nexport default React.memo<ITextsVisualizerProps>(TextsVisualizer);\n","import TextsVisualizer from './TextsVisualizer';\n\nexport default TextsVisualizer;\n"],"sourceRoot":""}