Metadata-Version: 2.1
Name: intelliprove
Version: 0.1.1
Summary: 
Author: Seppe De Langhe
Author-email: seppe.delanghe@intelliprove.com
Requires-Python: >=3.9,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Dist: opencv-python (>=4.7.0.68,<5.0.0.0)
Requires-Dist: requests (>=2.28.1,<3.0.0)
Description-Content-Type: text/markdown

<h1 align="center"> IntelliProve Python SDK</h1>

<div align="center">
    <img src="https://img.shields.io/pypi/dm/intelliprove" />
    <img src="https://img.shields.io/pypi/pyversions/intelliprove" />
    <img src="https://img.shields.io/badge/version-0.1.0-blue" />
</div>

## Requirements

- Python ^3.9
- Poetry ^1.3

## Installation
```pip install intelliprove```

## Example usage

```python
import os
from pathlib import Path

from intelliprove.api import IntelliproveApi, IntelliproveApiSettings, Biomarkers, Quality

# define api key and settings
apikey = os.environ.get('apikey', 'test-api-key-1234567')
settings = IntelliproveApiSettings(
    base_url='https://engine-dev.intelliprove.be'
)

# init api
api = IntelliproveApi(apikey, settings)

# define the path of the video you want to upload
video_path = Path('./mydir/example.mp4')
image_path = Path('./mydir/example.png')

# manually check quality of a video of image
quality: Quality = api.check_conditions(video_path)
quality: Quality = api.check_conditions(image_path)

# Optional: define the performer and patient
performer: str = 'performer-a'
patient: str = 'patient-1'

# upload video to IntelliProve
# performer and patient are optional
uuid: str = api.upload(video_path)
# or
uuid: str = api.upload(video_path, performer=performer, patient=patient)

# get the results of the uploaded video
results: Biomarkers = api.get_results(uuid)
```

### Dataclasses
- Biomarkers
  - contains the results of an uploaded video
- Quality
  - contains the quality parameters of a video or image

### Exceptions
- ImageQualityException
- MediaException
- InvalidUuidException
- ApiException
  - ApiNotFoundException
  - ApiForbiddenException
  - ApiErrorException
  - ApiResultNotAvailable

<br>
<hr>

## Development
### Setup
```
git clone git@github.com:IntelliProve/intelliprove-sdk-python.git
cd intelliprove-sdk-python
poetry install
```

### Install dev package
```
poetry build
python3 -m pip install dist/intelliprove-*.whl
```

### Publish new version
__Note: This will push a new version to PyPi__ <br>
__Before release: update version in pyproject.toml__
```
poetry config pypi-token.pypi <TOKEN>
poetry publish --build
```

### Running tests
```
poetry run python -m unittest tests/api/*.py
```




