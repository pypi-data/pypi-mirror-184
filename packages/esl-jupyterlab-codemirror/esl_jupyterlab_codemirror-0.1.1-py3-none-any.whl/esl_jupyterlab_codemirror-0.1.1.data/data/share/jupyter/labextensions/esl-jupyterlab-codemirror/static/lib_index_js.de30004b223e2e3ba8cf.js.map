{"version":3,"file":"lib_index_js.de30004b223e2e3ba8cf.js","mappings":";;;;;;;;;;;;;;;;AAAqD;AACzB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+DAAW;AAC1B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iEAAe,SAAS,EAAC;;;;;;;;;;;;;;;;;;;AChLzB;AACsH;AAC7B;AACzF,8BAA8B,mFAA2B,CAAC,wGAAqC;AAC/F;AACA,qMAAqM,eAAe,GAAG,SAAS,oFAAoF,KAAK,KAAK,UAAU,oLAAoL,eAAe,GAAG,qBAAqB;AACniB;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;;;ACPvC;AACsH;AAC7B;AACW;AACpG,8BAA8B,mFAA2B,CAAC,wGAAqC;AAC/F,0BAA0B,qFAAiC;AAC3D;AACA,mDAAmD,kEAAkE;AACrH;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;ACTkD;AACzF,YAAuF;;AAEvF;;AAEA;AACA;;AAEA,aAAa,0GAAG,CAAC,sFAAO;;;;AAIxB,iEAAe,6FAAc,MAAM","sources":["webpack://esl-jupyterlab-codemirror/./lib/index.js","webpack://esl-jupyterlab-codemirror/./style/base.css","webpack://esl-jupyterlab-codemirror/./style/index.css","webpack://esl-jupyterlab-codemirror/./style/index.css?0140"],"sourcesContent":["import { ICodeMirror } from '@jupyterlab/codemirror';\nimport '../style/index.css';\nconst ESL_MIME_TYPE = 'text/x-esl';\nconst ESL_EXTENSION = '.esl';\nconst ESL_NAME = 'ESL';\n// Token regexes\nconst keyword_control_define = /(?<!-)\\b(define)\\b(?!-)/m;\nconst define_class = /(?<!-)[\\t ]+[\\w-]+/m;\nconst define_nametag = /(?<!-)[\\t ]+[\\w-]+/m;\nconst continue_newline = /(\\.\\.\\.)/m;\nconst asterisk = /(\\*)/m;\nconst placeholder_value = /(?<!-)\\b(t\\.b\\.d\\.)\\b(?!-)/m;\nconst support_function_isan = /(?<!-)\\b(is[ \\t]+an?)\\b(?!-)/m;\nconst support_function_be = /(?<!-)\\b(is|be)\\b(?!-)/m;\nconst support_function_of = /(?<!-)\\b(of)\\b(?!-)/m;\nconst support_function_auxiliary_verb = /(?<!-)\\b(shall|must|should|could|will)\\b(?!-)/m;\nconst keyword_control_environments = /(?<!-)\\b(world|types?|verbs?|components?|variables?|parameters?|comments?|needs?|relations?|arguments?|subclauses?|(goal|transformation|design|behavior)-(requirements?|constraints?)|variable-groups?)\\b(?!-)/m;\nconst entity_name_tag_label = /(?<!-)\\b[\\w-]+:/m;\nconst support_function_logical = /(?<!-)\\b((at[ \\t]+most)|(at[ \\t]+least)|(smaller[ \\t]+than)|(greater[ \\t]+than)|(equal[ \\t]+to)|not|or|case|and|when|then|maximized|minimized|approximately)\\b(?!-)/m;\nconst constant_language_types = /(?<!-)\\b(real|string|bool|integer|enumeration)\\b(?!-)/m;\nconst support_function_relation = /(?<!-)\\b((relating|requiring|returning)[ \\t]+(parameters?|arguments?))\\b(?!-)/m;\nconst keyword_control_with = /(?<!-)\\bwith[\\t ]+(subclauses?|arguments?|units?)\\b(?!-)/m;\nconst any_token = /(?<!-)\\b[\\w-]+\\b(?!-)/m;\nconst property = /(?<!-)\\b(property)\\b(?!-)/m;\nconst bundle_of = /(?<!-)\\b(bundle[ \\t]+of)\\b(?!-)/m;\nconst group_of = /(?<!-)\\b(group[ \\t]+of)\\b(?!-)/m;\nconst empty = /(?<!-)\\b(empty)\\b(?!-)/m;\nconst support_function_fallback_case = /(?<!-)\\b(no[ \\t]+other[ \\t]+case[ \\t]+applies)\\b(?!-)/m;\nconst support_function_one_or_more = /(?<!-)\\b(one[ \\t]+or[ \\t]+more)\\b(?!-)/m;\n// Default state\nfunction default_state() {\n    return {\n        define: 0\n    };\n}\n// ESL mode definition\nfunction esl_mode() {\n    return {\n        startState: default_state,\n        token: function (stream, state) {\n            // As soon as we find a comment sign, rest of the line is a comment.\n            if (stream.peek() === '#') {\n                stream.skipToEnd();\n                return 'comment';\n            }\n            // Define block \"define\"\n            if (state.define === 0) {\n                if (stream.match(keyword_control_define)) {\n                    if (!stream.eol() || continue_newline.test(stream)) {\n                        state.define = 1;\n                    }\n                    else {\n                        state.define = 0;\n                    }\n                    return 'keyword';\n                }\n            }\n            // Define block \"class\" (component, variable, etc.)\n            else if (state.define === 1) {\n                if (stream.match(define_class)) {\n                    if (!stream.eol() || continue_newline.test(stream)) {\n                        state.define = 2;\n                    }\n                    else {\n                        state.define = 0;\n                    }\n                    return 'meta';\n                }\n                else {\n                    state.define = 0;\n                }\n            }\n            // Define block component nametag\n            else if (state.define === 2) {\n                state.define = 0;\n                if (stream.match(define_nametag)) {\n                    return 'tag';\n                }\n            }\n            // Simple regexes\n            if (stream.match(continue_newline)) {\n                return 'keyword';\n            }\n            else if (stream.match(keyword_control_environments)) {\n                return 'keyword';\n            }\n            else if (stream.match(asterisk)) {\n                return 'keyword';\n            }\n            else if (stream.match(support_function_relation)) {\n                return 'keyword';\n            }\n            else if (stream.match(keyword_control_with)) {\n                return 'keyword';\n            }\n            else if (stream.match(bundle_of)) {\n                return 'keyword';\n            }\n            else if (stream.match(group_of)) {\n                return 'keyword';\n            }\n            else if (stream.match(empty)) {\n                return 'atom';\n            }\n            else if (stream.match(support_function_fallback_case)) {\n                return 'atom';\n            }\n            else if (stream.match(constant_language_types)) {\n                return 'atom';\n            }\n            else if (stream.match(placeholder_value)) {\n                return 'atom';\n            }\n            else if (stream.match(support_function_isan)) {\n                return 'operator';\n            }\n            else if (stream.match(support_function_be)) {\n                return 'operator';\n            }\n            else if (stream.match(support_function_of)) {\n                return 'operator';\n            }\n            else if (stream.match(property)) {\n                return 'meta';\n            }\n            else if (stream.match(support_function_auxiliary_verb)) {\n                return 'attribute';\n            }\n            else if (stream.match(support_function_logical)) {\n                return 'attribute';\n            }\n            else if (stream.match(support_function_one_or_more)) {\n                return 'attribute';\n            }\n            else if (stream.match(entity_name_tag_label)) {\n                return 'tag';\n            }\n            // Match any word, but don't style it.\n            else if (stream.match(any_token)) {\n                state = default_state();\n                return null;\n            }\n            // Nothing matched, reset state and eat a char for breakfast.\n            state = default_state();\n            stream.next();\n            return null;\n        }\n    };\n}\nconst extension = {\n    id: 'esl-jupyterlab-codemirror:plugin',\n    autoStart: true,\n    requires: [ICodeMirror],\n    activate: (app, cm) => {\n        console.log('JupyterLab extension esl-jupyterlab-codemirror is being activated...');\n        cm.CodeMirror.defineMode(ESL_NAME.toLowerCase(), esl_mode);\n        cm.CodeMirror.defineMIME(ESL_MIME_TYPE, {\n            name: ESL_NAME.toLowerCase()\n        });\n        cm.CodeMirror.modeInfo.push({\n            ext: [ESL_EXTENSION.substring(1)],\n            mime: ESL_MIME_TYPE,\n            mode: ESL_NAME.toLowerCase(),\n            name: ESL_NAME\n        });\n        console.log('Associating .esl format with newly added mode...');\n        app.docRegistry.addFileType({\n            name: ESL_NAME,\n            displayName: 'Elephant Specification language File',\n            extensions: [ESL_EXTENSION],\n            mimeTypes: [ESL_MIME_TYPE],\n            iconClass: 'jp-MaterialIcon jp-PasteIcon'\n        });\n        console.log('Done!');\n    }\n};\nexport default extension;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*\\n    See the JupyterLab Developer Guide for useful CSS Patterns:\\n\\n    https://jupyterlab.readthedocs.io/en/stable/developer/css.html\\n*/\\n.esl-style {\\n  color: red;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./style/base.css\"],\"names\":[],\"mappings\":\"AAAA;;;;CAIC;AACD;EACE,UAAU;AACZ\",\"sourcesContent\":[\"/*\\n    See the JupyterLab Developer Guide for useful CSS Patterns:\\n\\n    https://jupyterlab.readthedocs.io/en/stable/developer/css.html\\n*/\\n.esl-style {\\n  color: red;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../node_modules/css-loader/dist/cjs.js!./base.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":[],"sourceRoot":""}