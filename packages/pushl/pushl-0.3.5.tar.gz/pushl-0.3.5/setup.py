# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['pushl']

package_data = \
{'': ['*']}

install_requires = \
['aiohttp>=3.8.1,<4.0.0',
 'async-lru>=1.0.3,<2.0.0',
 'awesome-slugify>=1.6.5,<2.0.0',
 'beautifulsoup4>=4.11.1,<5.0.0',
 'feedparser>=6.0.10,<7.0.0',
 'lxml>=4.9.1,<5.0.0',
 'mf2py>=1.1.2,<2.0.0']

entry_points = \
{'console_scripts': ['pushl = pushl.__main__:main']}

setup_kwargs = {
    'name': 'pushl',
    'version': '0.3.5',
    'description': 'A conduit for pushing changes in a feed to the rest of the IndieWeb',
    'long_description': '# Pushl\n\nA simple tool that parses content feeds and sends out appropriate push notifications (WebSub, webmention, etc.) when they change.\n\nSee http://publ.beesbuzz.biz/blog/113-Some-thoughts-on-WebMention for the motivation.\n\n## Features\n\n* Supports any feed supported by [feedparser](https://github.com/kurtmckee/feedparser)\n    and [mf2py](https://github.com/microformats/mf2py) (RSS, Atom, HTML pages containing\n    `h-entry`, etc.)\n* Will send WebSub notifications for feeds which declare a WebSub hub\n* Will send WebMention notifications for entries discovered on those feeds or specified directly\n* Can perform autodiscovery of additional feeds on entry pages\n* Can do a full backfill on Atom feeds configured with [RFC 5005](https://tools.ietf.org/html/rfc5005)\n* When configured to use a cache directory, can detect entry deletions and updates to implement the webmention update and delete protocols (as well as saving some time and bandwidth)\n\n\n## Site setup\n\nIf you want to support WebSub, have your feed implement [the WebSub protocol](https://indieweb.org/WebSub). The short version is that you should have a `<link rel="hub" href="http://path/to/hub" />` in your feed\'s top-level element.\n\nThere are a number of WebSub hubs available; I use [Superfeedr](http://pubsubhubbub.superfeedr.com).\n\nFor [WebMentions](https://indieweb.org/Webmention), configure your site templates with the various microformats; by default, Pushl will use the following tags as the top-level entry container, in descending order of priority:\n\n* Anything with a `class` of `h-entry`\n* An `<article>` tag\n* Anything with a `class` of `entry`\n\nFor more information on how to configure your site templates, see the [microformats h-entry specification](http://microformats.org/wiki/h-entry).\n\n### mf2 feed notes\n\nIf you\'re using an mf2 feed (i.e. an HTML-formatted page with `h-entry` declarations), only entries with a `u-url` property will be used for sending webmentions; further, Pushl will retrieve the page from that URL to ensure it has the full content. (This is to work around certain setups where the `h-feed` only shows summary text.)\n\nAlso, there is technically no requirement for an HTML page to declare an `h-feed`; all entities marked up with `h-entry` will be consumed.\n\n## Installation\n\nYou can install it using `pip` with e.g.:\n\n```bash\npip3 install pushl\n```\n\nHowever, I recommend installing it in a virtual environment with e.g.:\n\n```bash\nvirtualenv3 $HOME/pushl\n$HOME/pushl/bin/pip3 install pushl\n```\n\nand then putting a symlink to `$HOME/pushl/bin/pushl` to a directory in your $PATH, e.g.\n\n```bash\nln -s $HOME/pushl/bin/pushl $HOME/bin/pushl\n```\n\n## Usage\n\n### Basic\n\n```bash\npushl -c $HOME/var/pushl-cache http://example.com/feed.xml\n```\n\nWhile you can run it without the `-c` argument, its use is highly recommended so that subsequent runs are both less spammy and so that it can detect changes and deletions.\n\n### Sending pings from individual entries\n\nIf you just want to send webmentions from an entry page without processing an entire feed, the `-e/--entry` flag indicates that the following URLs are pages or entries, rather than feeds; e.g.\n\n```bash\npushl -e http://example.com/some/page\n```\n\nwill simply send the webmentions for that page.\n\n### Additional feed discovery\n\nThe `-r/--recurse` flag will discover any additional feeds that are declared on entries and process them as well. This is useful if you have per-category feeds that you would also like to send WebSub notifications on. For example, [my site](http://beesbuzz.biz) has per-category feeds which are discoverable from individual entries, so `pushl -r http://beesbuzz.biz/feed` will send WebSub notifications for all of the categories which have recent changes.\n\nNote that `-r` and `-e` in conjunction will also cause the feed declared on the entry page to be processed further. While it is tempting to use this in a feed autodiscovery context e.g.\n\n```bash\npushl -re http://example.com/blog/\n```\n\nthis will also send webmentions from the blog page itself which is probably *not* what you want to have happen.\n\n### Backfilling old content\n\nIf your feed implements [RFC 5005](https://tools.ietf.org/html/rfc5005), the `-a` flag will scan past entries for WebMention as well. It is recommended to only use this flag when doing an initial backfill, as it can end up taking a long time on larger sites (and possibly make endpoint operators very grumpy at you). To send updates of much older entries it\'s better to just use `-e` to do it on a case-by-case basis.\n\n### Dual-protocol/multi-domain websites\n\nIf you have a website which has multiple URLs that can access it (for example, http+https, or multiple domain names), you generally only want WebMentions to be sent from the canonical URL. The best solution is to use `<link rel="canonical">` to declare which one is the real one, and Pushl will use that in sending the mentions; so, for example:\n\n\n```bash\npushl -r https://example.com/feed http://example.com/feed http://alt-domain.example.com/feed\n```\n\nAs long as both `http://example.com` and `http://alt-domain.example.com` declare the `https://example.com` version as canonical, only the webmentions from `https://example.com` will be sent.\n\nIf, for some reason, you can\'t use `rel="canonical"` you can use the `-s/--websub-only` flag on Pushl to have it only send WebSub notifications for that feed; for example:\n\n```bash\npushl -r https://example.com/feed -s https://other.example.com/feed\n```\n\nwill send both Webmention and WebSub for `https://example.com` but only WebSub for `https://other.example.com`.\n\n## Automated updates\n\n`pushl` can be run from a cron job, although it\'s a good idea to use `flock -n` to prevent multiple instances from stomping on each other. An example cron job for updating a site might look like:\n\n```crontab\n*/5 * * * * flock -n $HOME/.pushl-lock pushl -rc $HOME/.pushl-cache http://example.com/feed\n```\n\n### My setup\n\nIn my setup, I have `pushl` installed in my website\'s pipenv:\n\n```bash\ncd $HOME/beesbuzz.biz\npipenv install pushl\n```\n\nand created this script as `$HOME/beesbuzz.biz/pushl.sh`:\n\n```bash\n#!/bin/bash\n\ncd $(dirname "$0")\nLOG=logs/pushl-$(date +%Y%m%d.log)\n\n# redirect log output\nif [ "$1" == "quiet" ] ; then\n    exec >> $LOG 2>&1\nelse\n    exec 2>&1 | tee -a $LOG\nfi\n\n# add timestamp\ndate\n\n# run pushl\nflock -n $HOME/var/pushl/run.lock $HOME/.local/bin/pipenv run pushl -rvvkc $HOME/var/pushl \\\n    https://beesbuzz.biz/feed\\?push=1 \\\n    http://publ.beesbuzz.biz/feed\\?push=1 \\\n    https://tumblr.beesbuzz.biz/rss \\\n    https://novembeat.com/feed\\?push=1 \\\n    http://beesbuzz.biz/feed\\?push=1 \\\n    -s http://beesbuzz.biz/feed-summary https://beesbuzz.biz/feed-summary\n\n# while we\'re at it, clean out the log and pushl cache directory\nfind logs $HOME/var/pushl -type f -mtime +30 -print -delete\n```\n\nThen I have a cron job:\n\n```crontab\n*/15 * * * * $HOME/beesbuzz.biz/pushl.sh quiet\n```\n\nwhich runs it every 15 minutes.\n\nI also have a [git deployment hook](http://publ.beesbuzz.biz/441) for my website, and its final step (after restarting `gunicorn`) is to run `pushl.sh`, in case a maximum latency of 15 minutes just isn\'t fast enough.\n',
    'author': 'fluffy',
    'author_email': 'fluffy@beesbuzz.biz',
    'maintainer': 'None',
    'maintainer_email': 'None',
    'url': 'https://plaidweb.site/',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.7.2,<4.0.0',
}


setup(**setup_kwargs)
