# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['beetsplug']

package_data = \
{'': ['*']}

install_requires = \
['beets>=1.6.0,<2.0.0', 'mediafile==0.10.0']

setup_kwargs = {
    'name': 'beets-filetote',
    'version': '0.3.3',
    'description': 'A beets plugin to copy/moves non-music extra files, attachments, and artifacts during the import process.',
    'long_description': '# _Filetote_ plugin for beets\n\n[![MIT license][license image]][license link]\n[![CI][ci image]][ci link]\n[![GitHub release][github image]][github link]\n[![PyPI][pypi_version]][pypi_link]\n[![PyPI - Python Version][pypi_python_versions]][pypi_link]\n\nA plugin that moves non-music extra files, attachments, and artifacts during\nthe import process for [beets](http://beets.radbox.org/), a music library\nmanager (and much more!).\n\n## Installing\n\n### Stable\n\nThe stable version of the plugin is available from PyPI and can be installed\nusing `pip3`:\n\n```sh\npip3 install beets-filetote\n```\n\nIf you get permission errors, try running it with `sudo`.\n\n### Development\n\nThe development version can be installed from GitHub by using these commands:\n\n```sh\ngit clone https://github.com/gtronset/beets-filetote.git\ncd beets-filetote\npython setup.py install\n```\n\nIf you get permission errors, try running it with `sudo`.\n\nUpdate the `config.yaml` to utilize the local plugin with:\n\n```yaml\npluginpath:\n  - /path/to.../beets-filetote/beetsplug\n```\n\n## Configuration\n\nYou will need to enable the plugin in beets\' `config.yaml`:\n\n```yaml\nplugins: filetote\n```\n\nIt can copy files by file extension:\n\n```yaml\nfiletote:\n  extensions: .cue .log\n```\n\nOr copy files by filename:\n\n```yaml\nfiletote:\n  filenames: song.log\n```\n\nOr copy all non-music files (it does this by default):\n\n```yaml\nfiletote:\n  extensions: .*\n```\n\nIt can look for and target "pairs" (files having the same name as a matching or\n"paired" media item/track):\n\n```yaml\nfiletote:\n  pairing: True\n```\n\nAnd target/include only paired files:\n\n```yaml\nfiletote:\n  pairing: True\n  pairing_only: True\n```\n\nIt can also exclude files by name:\n\n```yaml\nfiletote:\n  exclude: song_lyrics.nfo\n```\n\nAnd print what got left:\n\n```yaml\nfiletote:\n  print_ignored: yes\n```\n\n`exclude`-d files take precedence over other matching, meaning exclude will\ntrump other matches by either `extensions` or `filenames`.\n\n### Import Operations\n\nThis plugin supports the same operations as beets:\n\n- `copy`\n- `move`\n- `link` (symlink)\n- `harklink`\n- `reflink`\n\nThese options are mutually exclusive, and there are nuances to how beets (and\nthus this plugin) behave when there multiple set. See the [beets documentation]\nand [#36](https://github.com/gtronset/beets-filetote/pull/36) for more details.\n\n[beets documentation]: https://beets.readthedocs.io/en/stable/reference/config.html#importer-options\n\n### Renaming files\n\nRenaming works in much the same way as beets [Path Formats](http://beets.readthedocs.org/en/stable/reference/pathformat.html).\nThis plugin supports the below new path queries (from least to most specific).\nEach takes a single corresponding value.\n\n- `ext:`\n- `paired_ext:`\n- `filename:`\n\nRenaming has the following considerations:\n\n- The fields available are `$artist`, `$albumartist`, `$album`, `$albumpath`,\n  `$old_filename` (filename of the extra/artifcat file before its renamed),\n  `$medianame_old` (filename of the item/track triggering it, _before_\n  its renamed), and `$medianame_new` (filename of the item/track triggering it, _after_\n  its renamed).\n- The full set of\n  [built in functions](http://beets.readthedocs.org/en/stable/reference/pathformat.html#functions)\n  are also supported, with the exception of `%aunique` - which will\n  return an empty string.\n- `filename:` path query will take precedence over `paired_ext:` and `ext:` if\n  a given file qualifies for them. `paired_ext:` takes precedence over `ext:`,\n  but is not required.\n\nEach template string uses a query syntax for each of the file\nextensions. For example the following template string will be applied to\n`.log` files by using the `ext:` query:\n\n```yaml\npaths:\n  ext:.log: $albumpath/$artist - $album\n```\n\nThis will rename a log file to:\n`~/Music/Artist/2014 - Album/Artist - Album.log`\n\nOr by using the `filename:` query:\n\n```yaml\npaths:\n  filename:track.log: $albumpath/$artist - $album\n```\n\nThis will rename the specific `track.log` log file to:\n`~/Music/Artist/2014 - Album/Artist - Album.log`\n\n> **Note:** if the rename is set and there are multiple files that qualify,\n> only the first will be added to the library (new folder); other files that\n> subsequently match will not be saved/renamed. To work around this,\n> `$old_filename` can be used to help with adding uniqueness to the name.\n\n### Example `config.yaml`\n\n```yaml\nplugins: filetote\n\npaths:\n  default: $albumartist/$year - $album/$track - $title\n  singleton: Singletons/$artist - $title\n  ext:.log: $albumpath/$artist - $album\n  ext:.cue: $albumpath/$artist - $album\n  paired_ext:.lrc: $albumpath/$medianame_old\n  filename:cover.jpg: $albumpath/cover\n\nfiletote:\n  extensions: .cue .log .jpg .lrc\n  filename: "cover.jpg"\n  pairing: True\n  print_ignored: yes\n```\n\n## Thanks\n\nThis plugin originally was a fork from [copyartifacts3 (Adrian Sampson)] (no\nlonger actively maintained) to expand functionality. `beets-copyartifacts3`\nitself a fork of the archived [copyartifacts (Sami Barakat)].\n\nFiletote was built on top of the excellent work done by Sami Barakat, Adrian\nSampson, and the larger community on [beets](http://beets.radbox.org/).\n\nPlease report any issues you may have and feel free to contribute.\n\n[copyartifacts3 (adrian sampson)]: https://github.com/adammillerio/beets-copyartifacts\n[copyartifacts (sami barakat)]: https://github.com/sbarakat/beets-copyartifacts\n\n## License\n\nCopyright (c) 2022 Gavin Tronset\nCopyright (c) 2020 Adam Miller\nCopyright (c) 2015-2017 Sami Barakat\n\nLicensed under the [MIT license][license link].\n\n[license image]: https://img.shields.io/badge/License-MIT-blue.svg\n[license link]: https://github.com/gtronset/beets-filetote/blob/main/LICENSE\n[ci image]: https://github.com/gtronset/beets-filetote/actions/workflows/tox.yml/badge.svg\n[ci link]: https://github.com/gtronset/beets-filetote/actions/workflows/tox.yml\n[github image]: https://img.shields.io/github/release/gtronset/beets-filetote.svg\n[github link]: https://github.com/gtronset/beets-filetote/releases\n[pypi_version]: https://img.shields.io/pypi/v/beets-filetote\n[pypi_link]: https://pypi.org/project/beets-filetote/\n[pypi_python_versions]: https://img.shields.io/pypi/pyversions/beets-filetote\n',
    'author': 'Gavin Tronset',
    'author_email': 'gtronset@gmail.com',
    'maintainer': 'None',
    'maintainer_email': 'None',
    'url': 'https://github.com/gtronset/beets-filetote',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.6,<4.0',
}


setup(**setup_kwargs)
