// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/job/local_parallel.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fjob_2flocal_5fparallel_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fjob_2flocal_5fparallel_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_oneflow_2fcore_2fjob_2flocal_5fparallel_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_oneflow_2fcore_2fjob_2flocal_5fparallel_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_oneflow_2fcore_2fjob_2flocal_5fparallel_2eproto;
namespace oneflow {
class LocalParallel;
class LocalParallelDefaultTypeInternal;
extern LocalParallelDefaultTypeInternal _LocalParallel_default_instance_;
class LocalSignature;
class LocalSignatureDefaultTypeInternal;
extern LocalSignatureDefaultTypeInternal _LocalSignature_default_instance_;
class LocalSignature_BnInOp2optLocalParallelEntry_DoNotUse;
class LocalSignature_BnInOp2optLocalParallelEntry_DoNotUseDefaultTypeInternal;
extern LocalSignature_BnInOp2optLocalParallelEntry_DoNotUseDefaultTypeInternal _LocalSignature_BnInOp2optLocalParallelEntry_DoNotUse_default_instance_;
class OptLocalParallel;
class OptLocalParallelDefaultTypeInternal;
extern OptLocalParallelDefaultTypeInternal _OptLocalParallel_default_instance_;
}  // namespace oneflow
PROTOBUF_NAMESPACE_OPEN
template<> ::oneflow::LocalParallel* Arena::CreateMaybeMessage<::oneflow::LocalParallel>(Arena*);
template<> ::oneflow::LocalSignature* Arena::CreateMaybeMessage<::oneflow::LocalSignature>(Arena*);
template<> ::oneflow::LocalSignature_BnInOp2optLocalParallelEntry_DoNotUse* Arena::CreateMaybeMessage<::oneflow::LocalSignature_BnInOp2optLocalParallelEntry_DoNotUse>(Arena*);
template<> ::oneflow::OptLocalParallel* Arena::CreateMaybeMessage<::oneflow::OptLocalParallel>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace oneflow {

// ===================================================================

class LocalParallel :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.LocalParallel) */ {
 public:
  LocalParallel();
  virtual ~LocalParallel();

  LocalParallel(const LocalParallel& from);
  LocalParallel(LocalParallel&& from) noexcept
    : LocalParallel() {
    *this = ::std::move(from);
  }

  inline LocalParallel& operator=(const LocalParallel& from) {
    CopyFrom(from);
    return *this;
  }
  inline LocalParallel& operator=(LocalParallel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LocalParallel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocalParallel* internal_default_instance() {
    return reinterpret_cast<const LocalParallel*>(
               &_LocalParallel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(LocalParallel& a, LocalParallel& b) {
    a.Swap(&b);
  }
  inline void Swap(LocalParallel* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LocalParallel* New() const final {
    return CreateMaybeMessage<LocalParallel>(nullptr);
  }

  LocalParallel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LocalParallel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LocalParallel& from);
  void MergeFrom(const LocalParallel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LocalParallel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.LocalParallel";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2flocal_5fparallel_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2flocal_5fparallel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:oneflow.LocalParallel)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2flocal_5fparallel_2eproto;
};
// -------------------------------------------------------------------

class OptLocalParallel :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.OptLocalParallel) */ {
 public:
  OptLocalParallel();
  virtual ~OptLocalParallel();

  OptLocalParallel(const OptLocalParallel& from);
  OptLocalParallel(OptLocalParallel&& from) noexcept
    : OptLocalParallel() {
    *this = ::std::move(from);
  }

  inline OptLocalParallel& operator=(const OptLocalParallel& from) {
    CopyFrom(from);
    return *this;
  }
  inline OptLocalParallel& operator=(OptLocalParallel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OptLocalParallel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OptLocalParallel* internal_default_instance() {
    return reinterpret_cast<const OptLocalParallel*>(
               &_OptLocalParallel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(OptLocalParallel& a, OptLocalParallel& b) {
    a.Swap(&b);
  }
  inline void Swap(OptLocalParallel* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OptLocalParallel* New() const final {
    return CreateMaybeMessage<OptLocalParallel>(nullptr);
  }

  OptLocalParallel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OptLocalParallel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const OptLocalParallel& from);
  void MergeFrom(const OptLocalParallel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OptLocalParallel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.OptLocalParallel";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2flocal_5fparallel_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2flocal_5fparallel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocalParallelFieldNumber = 1,
  };
  // optional .oneflow.LocalParallel local_parallel = 1;
  bool has_local_parallel() const;
  void clear_local_parallel();
  const ::oneflow::LocalParallel& local_parallel() const;
  ::oneflow::LocalParallel* release_local_parallel();
  ::oneflow::LocalParallel* mutable_local_parallel();
  void set_allocated_local_parallel(::oneflow::LocalParallel* local_parallel);

  // @@protoc_insertion_point(class_scope:oneflow.OptLocalParallel)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::oneflow::LocalParallel* local_parallel_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2flocal_5fparallel_2eproto;
};
// -------------------------------------------------------------------

class LocalSignature_BnInOp2optLocalParallelEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<LocalSignature_BnInOp2optLocalParallelEntry_DoNotUse, 
    std::string, ::oneflow::OptLocalParallel,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<LocalSignature_BnInOp2optLocalParallelEntry_DoNotUse, 
    std::string, ::oneflow::OptLocalParallel,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  LocalSignature_BnInOp2optLocalParallelEntry_DoNotUse();
  LocalSignature_BnInOp2optLocalParallelEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const LocalSignature_BnInOp2optLocalParallelEntry_DoNotUse& other);
  static const LocalSignature_BnInOp2optLocalParallelEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const LocalSignature_BnInOp2optLocalParallelEntry_DoNotUse*>(&_LocalSignature_BnInOp2optLocalParallelEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
#ifndef NDEBUG
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
       s->data(), s->size(), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "oneflow.LocalSignature.BnInOp2optLocalParallelEntry.key");
#endif
    return true;
 }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2flocal_5fparallel_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2flocal_5fparallel_2eproto.file_level_metadata[2];
  }

  public:
};

// -------------------------------------------------------------------

class LocalSignature :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.LocalSignature) */ {
 public:
  LocalSignature();
  virtual ~LocalSignature();

  LocalSignature(const LocalSignature& from);
  LocalSignature(LocalSignature&& from) noexcept
    : LocalSignature() {
    *this = ::std::move(from);
  }

  inline LocalSignature& operator=(const LocalSignature& from) {
    CopyFrom(from);
    return *this;
  }
  inline LocalSignature& operator=(LocalSignature&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LocalSignature& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocalSignature* internal_default_instance() {
    return reinterpret_cast<const LocalSignature*>(
               &_LocalSignature_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(LocalSignature& a, LocalSignature& b) {
    a.Swap(&b);
  }
  inline void Swap(LocalSignature* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LocalSignature* New() const final {
    return CreateMaybeMessage<LocalSignature>(nullptr);
  }

  LocalSignature* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LocalSignature>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LocalSignature& from);
  void MergeFrom(const LocalSignature& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LocalSignature* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.LocalSignature";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2flocal_5fparallel_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2flocal_5fparallel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kBnInOp2OptLocalParallelFieldNumber = 1,
  };
  // map<string, .oneflow.OptLocalParallel> bn_in_op2opt_local_parallel = 1;
  int bn_in_op2opt_local_parallel_size() const;
  void clear_bn_in_op2opt_local_parallel();
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::oneflow::OptLocalParallel >&
      bn_in_op2opt_local_parallel() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::oneflow::OptLocalParallel >*
      mutable_bn_in_op2opt_local_parallel();

  // @@protoc_insertion_point(class_scope:oneflow.LocalSignature)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      LocalSignature_BnInOp2optLocalParallelEntry_DoNotUse,
      std::string, ::oneflow::OptLocalParallel,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > bn_in_op2opt_local_parallel_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2flocal_5fparallel_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LocalParallel

// -------------------------------------------------------------------

// OptLocalParallel

// optional .oneflow.LocalParallel local_parallel = 1;
inline bool OptLocalParallel::has_local_parallel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OptLocalParallel::clear_local_parallel() {
  if (local_parallel_ != nullptr) local_parallel_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::oneflow::LocalParallel& OptLocalParallel::local_parallel() const {
  const ::oneflow::LocalParallel* p = local_parallel_;
  // @@protoc_insertion_point(field_get:oneflow.OptLocalParallel.local_parallel)
  return p != nullptr ? *p : *reinterpret_cast<const ::oneflow::LocalParallel*>(
      &::oneflow::_LocalParallel_default_instance_);
}
inline ::oneflow::LocalParallel* OptLocalParallel::release_local_parallel() {
  // @@protoc_insertion_point(field_release:oneflow.OptLocalParallel.local_parallel)
  _has_bits_[0] &= ~0x00000001u;
  ::oneflow::LocalParallel* temp = local_parallel_;
  local_parallel_ = nullptr;
  return temp;
}
inline ::oneflow::LocalParallel* OptLocalParallel::mutable_local_parallel() {
  _has_bits_[0] |= 0x00000001u;
  if (local_parallel_ == nullptr) {
    auto* p = CreateMaybeMessage<::oneflow::LocalParallel>(GetArenaNoVirtual());
    local_parallel_ = p;
  }
  // @@protoc_insertion_point(field_mutable:oneflow.OptLocalParallel.local_parallel)
  return local_parallel_;
}
inline void OptLocalParallel::set_allocated_local_parallel(::oneflow::LocalParallel* local_parallel) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete local_parallel_;
  }
  if (local_parallel) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      local_parallel = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, local_parallel, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  local_parallel_ = local_parallel;
  // @@protoc_insertion_point(field_set_allocated:oneflow.OptLocalParallel.local_parallel)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// LocalSignature

// map<string, .oneflow.OptLocalParallel> bn_in_op2opt_local_parallel = 1;
inline int LocalSignature::bn_in_op2opt_local_parallel_size() const {
  return bn_in_op2opt_local_parallel_.size();
}
inline void LocalSignature::clear_bn_in_op2opt_local_parallel() {
  bn_in_op2opt_local_parallel_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::oneflow::OptLocalParallel >&
LocalSignature::bn_in_op2opt_local_parallel() const {
  // @@protoc_insertion_point(field_map:oneflow.LocalSignature.bn_in_op2opt_local_parallel)
  return bn_in_op2opt_local_parallel_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::oneflow::OptLocalParallel >*
LocalSignature::mutable_bn_in_op2opt_local_parallel() {
  // @@protoc_insertion_point(field_mutable_map:oneflow.LocalSignature.bn_in_op2opt_local_parallel)
  return bn_in_op2opt_local_parallel_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace oneflow

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fjob_2flocal_5fparallel_2eproto
