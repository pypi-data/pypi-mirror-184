// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/framework/user_op_def.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fframework_2fuser_5fop_5fdef_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fframework_2fuser_5fop_5fdef_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "oneflow/core/framework/user_op_attr.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_oneflow_2fcore_2fframework_2fuser_5fop_5fdef_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_oneflow_2fcore_2fframework_2fuser_5fop_5fdef_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_oneflow_2fcore_2fframework_2fuser_5fop_5fdef_2eproto;
namespace oneflow {
class UserOpDef;
class UserOpDefDefaultTypeInternal;
extern UserOpDefDefaultTypeInternal _UserOpDef_default_instance_;
class UserOpDef_ArgDef;
class UserOpDef_ArgDefDefaultTypeInternal;
extern UserOpDef_ArgDefDefaultTypeInternal _UserOpDef_ArgDef_default_instance_;
class UserOpDef_AttrDef;
class UserOpDef_AttrDefDefaultTypeInternal;
extern UserOpDef_AttrDefDefaultTypeInternal _UserOpDef_AttrDef_default_instance_;
}  // namespace oneflow
PROTOBUF_NAMESPACE_OPEN
template<> ::oneflow::UserOpDef* Arena::CreateMaybeMessage<::oneflow::UserOpDef>(Arena*);
template<> ::oneflow::UserOpDef_ArgDef* Arena::CreateMaybeMessage<::oneflow::UserOpDef_ArgDef>(Arena*);
template<> ::oneflow::UserOpDef_AttrDef* Arena::CreateMaybeMessage<::oneflow::UserOpDef_AttrDef>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace oneflow {

// ===================================================================

class UserOpDef_ArgDef :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.UserOpDef.ArgDef) */ {
 public:
  UserOpDef_ArgDef();
  virtual ~UserOpDef_ArgDef();

  UserOpDef_ArgDef(const UserOpDef_ArgDef& from);
  UserOpDef_ArgDef(UserOpDef_ArgDef&& from) noexcept
    : UserOpDef_ArgDef() {
    *this = ::std::move(from);
  }

  inline UserOpDef_ArgDef& operator=(const UserOpDef_ArgDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserOpDef_ArgDef& operator=(UserOpDef_ArgDef&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UserOpDef_ArgDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserOpDef_ArgDef* internal_default_instance() {
    return reinterpret_cast<const UserOpDef_ArgDef*>(
               &_UserOpDef_ArgDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(UserOpDef_ArgDef& a, UserOpDef_ArgDef& b) {
    a.Swap(&b);
  }
  inline void Swap(UserOpDef_ArgDef* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UserOpDef_ArgDef* New() const final {
    return CreateMaybeMessage<UserOpDef_ArgDef>(nullptr);
  }

  UserOpDef_ArgDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UserOpDef_ArgDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UserOpDef_ArgDef& from);
  void MergeFrom(const UserOpDef_ArgDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserOpDef_ArgDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.UserOpDef.ArgDef";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fframework_2fuser_5fop_5fdef_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fframework_2fuser_5fop_5fdef_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kIsOptionalFieldNumber = 2,
  };
  // required string name = 1;
  bool has_name() const;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);

  // optional bool is_optional = 2 [default = false];
  bool has_is_optional() const;
  void clear_is_optional();
  bool is_optional() const;
  void set_is_optional(bool value);

  // @@protoc_insertion_point(class_scope:oneflow.UserOpDef.ArgDef)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  bool is_optional_;
  friend struct ::TableStruct_oneflow_2fcore_2fframework_2fuser_5fop_5fdef_2eproto;
};
// -------------------------------------------------------------------

class UserOpDef_AttrDef :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.UserOpDef.AttrDef) */ {
 public:
  UserOpDef_AttrDef();
  virtual ~UserOpDef_AttrDef();

  UserOpDef_AttrDef(const UserOpDef_AttrDef& from);
  UserOpDef_AttrDef(UserOpDef_AttrDef&& from) noexcept
    : UserOpDef_AttrDef() {
    *this = ::std::move(from);
  }

  inline UserOpDef_AttrDef& operator=(const UserOpDef_AttrDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserOpDef_AttrDef& operator=(UserOpDef_AttrDef&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UserOpDef_AttrDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserOpDef_AttrDef* internal_default_instance() {
    return reinterpret_cast<const UserOpDef_AttrDef*>(
               &_UserOpDef_AttrDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(UserOpDef_AttrDef& a, UserOpDef_AttrDef& b) {
    a.Swap(&b);
  }
  inline void Swap(UserOpDef_AttrDef* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UserOpDef_AttrDef* New() const final {
    return CreateMaybeMessage<UserOpDef_AttrDef>(nullptr);
  }

  UserOpDef_AttrDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UserOpDef_AttrDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UserOpDef_AttrDef& from);
  void MergeFrom(const UserOpDef_AttrDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserOpDef_AttrDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.UserOpDef.AttrDef";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fframework_2fuser_5fop_5fdef_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fframework_2fuser_5fop_5fdef_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kDefaultValFieldNumber = 3,
    kTypeFieldNumber = 2,
  };
  // required string name = 1;
  bool has_name() const;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);

  // optional .oneflow.AttrValue default_val = 3;
  bool has_default_val() const;
  void clear_default_val();
  const ::oneflow::AttrValue& default_val() const;
  ::oneflow::AttrValue* release_default_val();
  ::oneflow::AttrValue* mutable_default_val();
  void set_allocated_default_val(::oneflow::AttrValue* default_val);

  // required .oneflow.AttrType type = 2;
  bool has_type() const;
  void clear_type();
  ::oneflow::AttrType type() const;
  void set_type(::oneflow::AttrType value);

  // @@protoc_insertion_point(class_scope:oneflow.UserOpDef.AttrDef)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::oneflow::AttrValue* default_val_;
  int type_;
  friend struct ::TableStruct_oneflow_2fcore_2fframework_2fuser_5fop_5fdef_2eproto;
};
// -------------------------------------------------------------------

class UserOpDef :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.UserOpDef) */ {
 public:
  UserOpDef();
  virtual ~UserOpDef();

  UserOpDef(const UserOpDef& from);
  UserOpDef(UserOpDef&& from) noexcept
    : UserOpDef() {
    *this = ::std::move(from);
  }

  inline UserOpDef& operator=(const UserOpDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserOpDef& operator=(UserOpDef&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UserOpDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserOpDef* internal_default_instance() {
    return reinterpret_cast<const UserOpDef*>(
               &_UserOpDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(UserOpDef& a, UserOpDef& b) {
    a.Swap(&b);
  }
  inline void Swap(UserOpDef* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UserOpDef* New() const final {
    return CreateMaybeMessage<UserOpDef>(nullptr);
  }

  UserOpDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UserOpDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UserOpDef& from);
  void MergeFrom(const UserOpDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserOpDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.UserOpDef";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fframework_2fuser_5fop_5fdef_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fframework_2fuser_5fop_5fdef_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef UserOpDef_ArgDef ArgDef;
  typedef UserOpDef_AttrDef AttrDef;

  // accessors -------------------------------------------------------

  enum : int {
    kInputFieldNumber = 2,
    kOutputFieldNumber = 3,
    kAttrFieldNumber = 4,
    kNameFieldNumber = 1,
  };
  // repeated .oneflow.UserOpDef.ArgDef input = 2;
  int input_size() const;
  void clear_input();
  ::oneflow::UserOpDef_ArgDef* mutable_input(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::UserOpDef_ArgDef >*
      mutable_input();
  const ::oneflow::UserOpDef_ArgDef& input(int index) const;
  ::oneflow::UserOpDef_ArgDef* add_input();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::UserOpDef_ArgDef >&
      input() const;

  // repeated .oneflow.UserOpDef.ArgDef output = 3;
  int output_size() const;
  void clear_output();
  ::oneflow::UserOpDef_ArgDef* mutable_output(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::UserOpDef_ArgDef >*
      mutable_output();
  const ::oneflow::UserOpDef_ArgDef& output(int index) const;
  ::oneflow::UserOpDef_ArgDef* add_output();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::UserOpDef_ArgDef >&
      output() const;

  // repeated .oneflow.UserOpDef.AttrDef attr = 4;
  int attr_size() const;
  void clear_attr();
  ::oneflow::UserOpDef_AttrDef* mutable_attr(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::UserOpDef_AttrDef >*
      mutable_attr();
  const ::oneflow::UserOpDef_AttrDef& attr(int index) const;
  ::oneflow::UserOpDef_AttrDef* add_attr();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::UserOpDef_AttrDef >&
      attr() const;

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);

  // @@protoc_insertion_point(class_scope:oneflow.UserOpDef)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::UserOpDef_ArgDef > input_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::UserOpDef_ArgDef > output_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::UserOpDef_AttrDef > attr_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  friend struct ::TableStruct_oneflow_2fcore_2fframework_2fuser_5fop_5fdef_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UserOpDef_ArgDef

// required string name = 1;
inline bool UserOpDef_ArgDef::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserOpDef_ArgDef::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& UserOpDef_ArgDef::name() const {
  // @@protoc_insertion_point(field_get:oneflow.UserOpDef.ArgDef.name)
  return name_.GetNoArena();
}
inline void UserOpDef_ArgDef::set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oneflow.UserOpDef.ArgDef.name)
}
inline void UserOpDef_ArgDef::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oneflow.UserOpDef.ArgDef.name)
}
inline void UserOpDef_ArgDef::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oneflow.UserOpDef.ArgDef.name)
}
inline void UserOpDef_ArgDef::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oneflow.UserOpDef.ArgDef.name)
}
inline std::string* UserOpDef_ArgDef::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:oneflow.UserOpDef.ArgDef.name)
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* UserOpDef_ArgDef::release_name() {
  // @@protoc_insertion_point(field_release:oneflow.UserOpDef.ArgDef.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void UserOpDef_ArgDef::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:oneflow.UserOpDef.ArgDef.name)
}

// optional bool is_optional = 2 [default = false];
inline bool UserOpDef_ArgDef::has_is_optional() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserOpDef_ArgDef::clear_is_optional() {
  is_optional_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool UserOpDef_ArgDef::is_optional() const {
  // @@protoc_insertion_point(field_get:oneflow.UserOpDef.ArgDef.is_optional)
  return is_optional_;
}
inline void UserOpDef_ArgDef::set_is_optional(bool value) {
  _has_bits_[0] |= 0x00000002u;
  is_optional_ = value;
  // @@protoc_insertion_point(field_set:oneflow.UserOpDef.ArgDef.is_optional)
}

// -------------------------------------------------------------------

// UserOpDef_AttrDef

// required string name = 1;
inline bool UserOpDef_AttrDef::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserOpDef_AttrDef::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& UserOpDef_AttrDef::name() const {
  // @@protoc_insertion_point(field_get:oneflow.UserOpDef.AttrDef.name)
  return name_.GetNoArena();
}
inline void UserOpDef_AttrDef::set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oneflow.UserOpDef.AttrDef.name)
}
inline void UserOpDef_AttrDef::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oneflow.UserOpDef.AttrDef.name)
}
inline void UserOpDef_AttrDef::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oneflow.UserOpDef.AttrDef.name)
}
inline void UserOpDef_AttrDef::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oneflow.UserOpDef.AttrDef.name)
}
inline std::string* UserOpDef_AttrDef::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:oneflow.UserOpDef.AttrDef.name)
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* UserOpDef_AttrDef::release_name() {
  // @@protoc_insertion_point(field_release:oneflow.UserOpDef.AttrDef.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void UserOpDef_AttrDef::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:oneflow.UserOpDef.AttrDef.name)
}

// required .oneflow.AttrType type = 2;
inline bool UserOpDef_AttrDef::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserOpDef_AttrDef::clear_type() {
  type_ = 1;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::oneflow::AttrType UserOpDef_AttrDef::type() const {
  // @@protoc_insertion_point(field_get:oneflow.UserOpDef.AttrDef.type)
  return static_cast< ::oneflow::AttrType >(type_);
}
inline void UserOpDef_AttrDef::set_type(::oneflow::AttrType value) {
  assert(::oneflow::AttrType_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  type_ = value;
  // @@protoc_insertion_point(field_set:oneflow.UserOpDef.AttrDef.type)
}

// optional .oneflow.AttrValue default_val = 3;
inline bool UserOpDef_AttrDef::has_default_val() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::oneflow::AttrValue& UserOpDef_AttrDef::default_val() const {
  const ::oneflow::AttrValue* p = default_val_;
  // @@protoc_insertion_point(field_get:oneflow.UserOpDef.AttrDef.default_val)
  return p != nullptr ? *p : *reinterpret_cast<const ::oneflow::AttrValue*>(
      &::oneflow::_AttrValue_default_instance_);
}
inline ::oneflow::AttrValue* UserOpDef_AttrDef::release_default_val() {
  // @@protoc_insertion_point(field_release:oneflow.UserOpDef.AttrDef.default_val)
  _has_bits_[0] &= ~0x00000002u;
  ::oneflow::AttrValue* temp = default_val_;
  default_val_ = nullptr;
  return temp;
}
inline ::oneflow::AttrValue* UserOpDef_AttrDef::mutable_default_val() {
  _has_bits_[0] |= 0x00000002u;
  if (default_val_ == nullptr) {
    auto* p = CreateMaybeMessage<::oneflow::AttrValue>(GetArenaNoVirtual());
    default_val_ = p;
  }
  // @@protoc_insertion_point(field_mutable:oneflow.UserOpDef.AttrDef.default_val)
  return default_val_;
}
inline void UserOpDef_AttrDef::set_allocated_default_val(::oneflow::AttrValue* default_val) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(default_val_);
  }
  if (default_val) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      default_val = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, default_val, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  default_val_ = default_val;
  // @@protoc_insertion_point(field_set_allocated:oneflow.UserOpDef.AttrDef.default_val)
}

// -------------------------------------------------------------------

// UserOpDef

// required string name = 1;
inline bool UserOpDef::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserOpDef::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& UserOpDef::name() const {
  // @@protoc_insertion_point(field_get:oneflow.UserOpDef.name)
  return name_.GetNoArena();
}
inline void UserOpDef::set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oneflow.UserOpDef.name)
}
inline void UserOpDef::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oneflow.UserOpDef.name)
}
inline void UserOpDef::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oneflow.UserOpDef.name)
}
inline void UserOpDef::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oneflow.UserOpDef.name)
}
inline std::string* UserOpDef::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:oneflow.UserOpDef.name)
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* UserOpDef::release_name() {
  // @@protoc_insertion_point(field_release:oneflow.UserOpDef.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void UserOpDef::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:oneflow.UserOpDef.name)
}

// repeated .oneflow.UserOpDef.ArgDef input = 2;
inline int UserOpDef::input_size() const {
  return input_.size();
}
inline void UserOpDef::clear_input() {
  input_.Clear();
}
inline ::oneflow::UserOpDef_ArgDef* UserOpDef::mutable_input(int index) {
  // @@protoc_insertion_point(field_mutable:oneflow.UserOpDef.input)
  return input_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::UserOpDef_ArgDef >*
UserOpDef::mutable_input() {
  // @@protoc_insertion_point(field_mutable_list:oneflow.UserOpDef.input)
  return &input_;
}
inline const ::oneflow::UserOpDef_ArgDef& UserOpDef::input(int index) const {
  // @@protoc_insertion_point(field_get:oneflow.UserOpDef.input)
  return input_.Get(index);
}
inline ::oneflow::UserOpDef_ArgDef* UserOpDef::add_input() {
  // @@protoc_insertion_point(field_add:oneflow.UserOpDef.input)
  return input_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::UserOpDef_ArgDef >&
UserOpDef::input() const {
  // @@protoc_insertion_point(field_list:oneflow.UserOpDef.input)
  return input_;
}

// repeated .oneflow.UserOpDef.ArgDef output = 3;
inline int UserOpDef::output_size() const {
  return output_.size();
}
inline void UserOpDef::clear_output() {
  output_.Clear();
}
inline ::oneflow::UserOpDef_ArgDef* UserOpDef::mutable_output(int index) {
  // @@protoc_insertion_point(field_mutable:oneflow.UserOpDef.output)
  return output_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::UserOpDef_ArgDef >*
UserOpDef::mutable_output() {
  // @@protoc_insertion_point(field_mutable_list:oneflow.UserOpDef.output)
  return &output_;
}
inline const ::oneflow::UserOpDef_ArgDef& UserOpDef::output(int index) const {
  // @@protoc_insertion_point(field_get:oneflow.UserOpDef.output)
  return output_.Get(index);
}
inline ::oneflow::UserOpDef_ArgDef* UserOpDef::add_output() {
  // @@protoc_insertion_point(field_add:oneflow.UserOpDef.output)
  return output_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::UserOpDef_ArgDef >&
UserOpDef::output() const {
  // @@protoc_insertion_point(field_list:oneflow.UserOpDef.output)
  return output_;
}

// repeated .oneflow.UserOpDef.AttrDef attr = 4;
inline int UserOpDef::attr_size() const {
  return attr_.size();
}
inline void UserOpDef::clear_attr() {
  attr_.Clear();
}
inline ::oneflow::UserOpDef_AttrDef* UserOpDef::mutable_attr(int index) {
  // @@protoc_insertion_point(field_mutable:oneflow.UserOpDef.attr)
  return attr_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::UserOpDef_AttrDef >*
UserOpDef::mutable_attr() {
  // @@protoc_insertion_point(field_mutable_list:oneflow.UserOpDef.attr)
  return &attr_;
}
inline const ::oneflow::UserOpDef_AttrDef& UserOpDef::attr(int index) const {
  // @@protoc_insertion_point(field_get:oneflow.UserOpDef.attr)
  return attr_.Get(index);
}
inline ::oneflow::UserOpDef_AttrDef* UserOpDef::add_attr() {
  // @@protoc_insertion_point(field_add:oneflow.UserOpDef.attr)
  return attr_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::UserOpDef_AttrDef >&
UserOpDef::attr() const {
  // @@protoc_insertion_point(field_list:oneflow.UserOpDef.attr)
  return attr_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace oneflow

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fframework_2fuser_5fop_5fdef_2eproto
