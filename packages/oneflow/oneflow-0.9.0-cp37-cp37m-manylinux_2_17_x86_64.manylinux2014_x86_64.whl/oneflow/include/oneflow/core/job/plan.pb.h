// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/job/plan.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fjob_2fplan_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fjob_2fplan_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "oneflow/core/job/task.pb.h"
#include "oneflow/core/job/job_conf.pb.h"
#include "oneflow/core/memory/memory_block.pb.h"
#include "oneflow/core/graph/boxing/collective_boxing.pb.h"
#include "oneflow/core/operator/op_attribute.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_oneflow_2fcore_2fjob_2fplan_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_oneflow_2fcore_2fjob_2fplan_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[13]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_oneflow_2fcore_2fjob_2fplan_2eproto;
namespace oneflow {
class CollectiveBoxingPlan;
class CollectiveBoxingPlanDefaultTypeInternal;
extern CollectiveBoxingPlanDefaultTypeInternal _CollectiveBoxingPlan_default_instance_;
class CollectiveBoxingPlan_JobId2requestSetEntry_DoNotUse;
class CollectiveBoxingPlan_JobId2requestSetEntry_DoNotUseDefaultTypeInternal;
extern CollectiveBoxingPlan_JobId2requestSetEntry_DoNotUseDefaultTypeInternal _CollectiveBoxingPlan_JobId2requestSetEntry_DoNotUse_default_instance_;
class CtrlRegstDescInfo;
class CtrlRegstDescInfoDefaultTypeInternal;
extern CtrlRegstDescInfoDefaultTypeInternal _CtrlRegstDescInfo_default_instance_;
class CtrlRegstDescInfo_CtrlRegstDescId2producerTaskIdEntry_DoNotUse;
class CtrlRegstDescInfo_CtrlRegstDescId2producerTaskIdEntry_DoNotUseDefaultTypeInternal;
extern CtrlRegstDescInfo_CtrlRegstDescId2producerTaskIdEntry_DoNotUseDefaultTypeInternal _CtrlRegstDescInfo_CtrlRegstDescId2producerTaskIdEntry_DoNotUse_default_instance_;
class JobConfs;
class JobConfsDefaultTypeInternal;
extern JobConfsDefaultTypeInternal _JobConfs_default_instance_;
class JobConfs_JobId2jobConfEntry_DoNotUse;
class JobConfs_JobId2jobConfEntry_DoNotUseDefaultTypeInternal;
extern JobConfs_JobId2jobConfEntry_DoNotUseDefaultTypeInternal _JobConfs_JobId2jobConfEntry_DoNotUse_default_instance_;
class MachineIds;
class MachineIdsDefaultTypeInternal;
extern MachineIdsDefaultTypeInternal _MachineIds_default_instance_;
class OpAttributeInfo;
class OpAttributeInfoDefaultTypeInternal;
extern OpAttributeInfoDefaultTypeInternal _OpAttributeInfo_default_instance_;
class OpAttributeInfo_JobId2opAttributeRefTableEntry_DoNotUse;
class OpAttributeInfo_JobId2opAttributeRefTableEntry_DoNotUseDefaultTypeInternal;
extern OpAttributeInfo_JobId2opAttributeRefTableEntry_DoNotUseDefaultTypeInternal _OpAttributeInfo_JobId2opAttributeRefTableEntry_DoNotUse_default_instance_;
class OpAttributeRefTable;
class OpAttributeRefTableDefaultTypeInternal;
extern OpAttributeRefTableDefaultTypeInternal _OpAttributeRefTable_default_instance_;
class OpAttributeRefTable_OpName2opAttributeEntry_DoNotUse;
class OpAttributeRefTable_OpName2opAttributeEntry_DoNotUseDefaultTypeInternal;
extern OpAttributeRefTable_OpName2opAttributeEntry_DoNotUseDefaultTypeInternal _OpAttributeRefTable_OpName2opAttributeEntry_DoNotUse_default_instance_;
class Plan;
class PlanDefaultTypeInternal;
extern PlanDefaultTypeInternal _Plan_default_instance_;
class Plan_JobId2opAttributeRefTableEntry_DoNotUse;
class Plan_JobId2opAttributeRefTableEntry_DoNotUseDefaultTypeInternal;
extern Plan_JobId2opAttributeRefTableEntry_DoNotUseDefaultTypeInternal _Plan_JobId2opAttributeRefTableEntry_DoNotUse_default_instance_;
}  // namespace oneflow
PROTOBUF_NAMESPACE_OPEN
template<> ::oneflow::CollectiveBoxingPlan* Arena::CreateMaybeMessage<::oneflow::CollectiveBoxingPlan>(Arena*);
template<> ::oneflow::CollectiveBoxingPlan_JobId2requestSetEntry_DoNotUse* Arena::CreateMaybeMessage<::oneflow::CollectiveBoxingPlan_JobId2requestSetEntry_DoNotUse>(Arena*);
template<> ::oneflow::CtrlRegstDescInfo* Arena::CreateMaybeMessage<::oneflow::CtrlRegstDescInfo>(Arena*);
template<> ::oneflow::CtrlRegstDescInfo_CtrlRegstDescId2producerTaskIdEntry_DoNotUse* Arena::CreateMaybeMessage<::oneflow::CtrlRegstDescInfo_CtrlRegstDescId2producerTaskIdEntry_DoNotUse>(Arena*);
template<> ::oneflow::JobConfs* Arena::CreateMaybeMessage<::oneflow::JobConfs>(Arena*);
template<> ::oneflow::JobConfs_JobId2jobConfEntry_DoNotUse* Arena::CreateMaybeMessage<::oneflow::JobConfs_JobId2jobConfEntry_DoNotUse>(Arena*);
template<> ::oneflow::MachineIds* Arena::CreateMaybeMessage<::oneflow::MachineIds>(Arena*);
template<> ::oneflow::OpAttributeInfo* Arena::CreateMaybeMessage<::oneflow::OpAttributeInfo>(Arena*);
template<> ::oneflow::OpAttributeInfo_JobId2opAttributeRefTableEntry_DoNotUse* Arena::CreateMaybeMessage<::oneflow::OpAttributeInfo_JobId2opAttributeRefTableEntry_DoNotUse>(Arena*);
template<> ::oneflow::OpAttributeRefTable* Arena::CreateMaybeMessage<::oneflow::OpAttributeRefTable>(Arena*);
template<> ::oneflow::OpAttributeRefTable_OpName2opAttributeEntry_DoNotUse* Arena::CreateMaybeMessage<::oneflow::OpAttributeRefTable_OpName2opAttributeEntry_DoNotUse>(Arena*);
template<> ::oneflow::Plan* Arena::CreateMaybeMessage<::oneflow::Plan>(Arena*);
template<> ::oneflow::Plan_JobId2opAttributeRefTableEntry_DoNotUse* Arena::CreateMaybeMessage<::oneflow::Plan_JobId2opAttributeRefTableEntry_DoNotUse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace oneflow {

// ===================================================================

class MachineIds :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.MachineIds) */ {
 public:
  MachineIds();
  virtual ~MachineIds();

  MachineIds(const MachineIds& from);
  MachineIds(MachineIds&& from) noexcept
    : MachineIds() {
    *this = ::std::move(from);
  }

  inline MachineIds& operator=(const MachineIds& from) {
    CopyFrom(from);
    return *this;
  }
  inline MachineIds& operator=(MachineIds&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MachineIds& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MachineIds* internal_default_instance() {
    return reinterpret_cast<const MachineIds*>(
               &_MachineIds_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MachineIds& a, MachineIds& b) {
    a.Swap(&b);
  }
  inline void Swap(MachineIds* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MachineIds* New() const final {
    return CreateMaybeMessage<MachineIds>(nullptr);
  }

  MachineIds* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MachineIds>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MachineIds& from);
  void MergeFrom(const MachineIds& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MachineIds* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.MachineIds";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2fplan_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2fplan_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMachineIdFieldNumber = 1,
  };
  // repeated int64 machine_id = 1;
  int machine_id_size() const;
  void clear_machine_id();
  ::PROTOBUF_NAMESPACE_ID::int64 machine_id(int index) const;
  void set_machine_id(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_machine_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      machine_id() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_machine_id();

  // @@protoc_insertion_point(class_scope:oneflow.MachineIds)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > machine_id_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2fplan_2eproto;
};
// -------------------------------------------------------------------

class JobConfs_JobId2jobConfEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<JobConfs_JobId2jobConfEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::JobConfigProto,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<JobConfs_JobId2jobConfEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::JobConfigProto,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  JobConfs_JobId2jobConfEntry_DoNotUse();
  JobConfs_JobId2jobConfEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const JobConfs_JobId2jobConfEntry_DoNotUse& other);
  static const JobConfs_JobId2jobConfEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const JobConfs_JobId2jobConfEntry_DoNotUse*>(&_JobConfs_JobId2jobConfEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2fplan_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2fplan_2eproto.file_level_metadata[1];
  }

  public:
};

// -------------------------------------------------------------------

class JobConfs :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.JobConfs) */ {
 public:
  JobConfs();
  virtual ~JobConfs();

  JobConfs(const JobConfs& from);
  JobConfs(JobConfs&& from) noexcept
    : JobConfs() {
    *this = ::std::move(from);
  }

  inline JobConfs& operator=(const JobConfs& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobConfs& operator=(JobConfs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const JobConfs& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobConfs* internal_default_instance() {
    return reinterpret_cast<const JobConfs*>(
               &_JobConfs_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(JobConfs& a, JobConfs& b) {
    a.Swap(&b);
  }
  inline void Swap(JobConfs* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JobConfs* New() const final {
    return CreateMaybeMessage<JobConfs>(nullptr);
  }

  JobConfs* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JobConfs>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const JobConfs& from);
  void MergeFrom(const JobConfs& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JobConfs* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.JobConfs";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2fplan_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2fplan_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kJobId2JobConfFieldNumber = 1,
  };
  // map<int64, .oneflow.JobConfigProto> job_id2job_conf = 1;
  int job_id2job_conf_size() const;
  void clear_job_id2job_conf();
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::JobConfigProto >&
      job_id2job_conf() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::JobConfigProto >*
      mutable_job_id2job_conf();

  // @@protoc_insertion_point(class_scope:oneflow.JobConfs)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      JobConfs_JobId2jobConfEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::JobConfigProto,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > job_id2job_conf_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2fplan_2eproto;
};
// -------------------------------------------------------------------

class CollectiveBoxingPlan_JobId2requestSetEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<CollectiveBoxingPlan_JobId2requestSetEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::boxing::collective::RequestSet,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<CollectiveBoxingPlan_JobId2requestSetEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::boxing::collective::RequestSet,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  CollectiveBoxingPlan_JobId2requestSetEntry_DoNotUse();
  CollectiveBoxingPlan_JobId2requestSetEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const CollectiveBoxingPlan_JobId2requestSetEntry_DoNotUse& other);
  static const CollectiveBoxingPlan_JobId2requestSetEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const CollectiveBoxingPlan_JobId2requestSetEntry_DoNotUse*>(&_CollectiveBoxingPlan_JobId2requestSetEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2fplan_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2fplan_2eproto.file_level_metadata[3];
  }

  public:
};

// -------------------------------------------------------------------

class CollectiveBoxingPlan :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.CollectiveBoxingPlan) */ {
 public:
  CollectiveBoxingPlan();
  virtual ~CollectiveBoxingPlan();

  CollectiveBoxingPlan(const CollectiveBoxingPlan& from);
  CollectiveBoxingPlan(CollectiveBoxingPlan&& from) noexcept
    : CollectiveBoxingPlan() {
    *this = ::std::move(from);
  }

  inline CollectiveBoxingPlan& operator=(const CollectiveBoxingPlan& from) {
    CopyFrom(from);
    return *this;
  }
  inline CollectiveBoxingPlan& operator=(CollectiveBoxingPlan&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CollectiveBoxingPlan& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CollectiveBoxingPlan* internal_default_instance() {
    return reinterpret_cast<const CollectiveBoxingPlan*>(
               &_CollectiveBoxingPlan_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CollectiveBoxingPlan& a, CollectiveBoxingPlan& b) {
    a.Swap(&b);
  }
  inline void Swap(CollectiveBoxingPlan* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CollectiveBoxingPlan* New() const final {
    return CreateMaybeMessage<CollectiveBoxingPlan>(nullptr);
  }

  CollectiveBoxingPlan* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CollectiveBoxingPlan>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CollectiveBoxingPlan& from);
  void MergeFrom(const CollectiveBoxingPlan& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CollectiveBoxingPlan* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.CollectiveBoxingPlan";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2fplan_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2fplan_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kJobId2RequestSetFieldNumber = 1,
  };
  // map<int64, .oneflow.boxing.collective.RequestSet> job_id2request_set = 1;
  int job_id2request_set_size() const;
  void clear_job_id2request_set();
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::boxing::collective::RequestSet >&
      job_id2request_set() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::boxing::collective::RequestSet >*
      mutable_job_id2request_set();

  // @@protoc_insertion_point(class_scope:oneflow.CollectiveBoxingPlan)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      CollectiveBoxingPlan_JobId2requestSetEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::boxing::collective::RequestSet,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > job_id2request_set_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2fplan_2eproto;
};
// -------------------------------------------------------------------

class CtrlRegstDescInfo_CtrlRegstDescId2producerTaskIdEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<CtrlRegstDescInfo_CtrlRegstDescId2producerTaskIdEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::int64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<CtrlRegstDescInfo_CtrlRegstDescId2producerTaskIdEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::int64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    0 > SuperType;
  CtrlRegstDescInfo_CtrlRegstDescId2producerTaskIdEntry_DoNotUse();
  CtrlRegstDescInfo_CtrlRegstDescId2producerTaskIdEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const CtrlRegstDescInfo_CtrlRegstDescId2producerTaskIdEntry_DoNotUse& other);
  static const CtrlRegstDescInfo_CtrlRegstDescId2producerTaskIdEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const CtrlRegstDescInfo_CtrlRegstDescId2producerTaskIdEntry_DoNotUse*>(&_CtrlRegstDescInfo_CtrlRegstDescId2producerTaskIdEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2fplan_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2fplan_2eproto.file_level_metadata[5];
  }

  public:
};

// -------------------------------------------------------------------

class CtrlRegstDescInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.CtrlRegstDescInfo) */ {
 public:
  CtrlRegstDescInfo();
  virtual ~CtrlRegstDescInfo();

  CtrlRegstDescInfo(const CtrlRegstDescInfo& from);
  CtrlRegstDescInfo(CtrlRegstDescInfo&& from) noexcept
    : CtrlRegstDescInfo() {
    *this = ::std::move(from);
  }

  inline CtrlRegstDescInfo& operator=(const CtrlRegstDescInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CtrlRegstDescInfo& operator=(CtrlRegstDescInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CtrlRegstDescInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CtrlRegstDescInfo* internal_default_instance() {
    return reinterpret_cast<const CtrlRegstDescInfo*>(
               &_CtrlRegstDescInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CtrlRegstDescInfo& a, CtrlRegstDescInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CtrlRegstDescInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CtrlRegstDescInfo* New() const final {
    return CreateMaybeMessage<CtrlRegstDescInfo>(nullptr);
  }

  CtrlRegstDescInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CtrlRegstDescInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CtrlRegstDescInfo& from);
  void MergeFrom(const CtrlRegstDescInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CtrlRegstDescInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.CtrlRegstDescInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2fplan_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2fplan_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kCtrlRegstDescId2ProducerTaskIdFieldNumber = 6,
  };
  // map<int64, int64> ctrl_regst_desc_id2producer_task_id = 6;
  int ctrl_regst_desc_id2producer_task_id_size() const;
  void clear_ctrl_regst_desc_id2producer_task_id();
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::int64 >&
      ctrl_regst_desc_id2producer_task_id() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_ctrl_regst_desc_id2producer_task_id();

  // @@protoc_insertion_point(class_scope:oneflow.CtrlRegstDescInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      CtrlRegstDescInfo_CtrlRegstDescId2producerTaskIdEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::int64,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
      0 > ctrl_regst_desc_id2producer_task_id_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2fplan_2eproto;
};
// -------------------------------------------------------------------

class OpAttributeRefTable_OpName2opAttributeEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<OpAttributeRefTable_OpName2opAttributeEntry_DoNotUse, 
    std::string, ::oneflow::OpAttribute,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<OpAttributeRefTable_OpName2opAttributeEntry_DoNotUse, 
    std::string, ::oneflow::OpAttribute,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  OpAttributeRefTable_OpName2opAttributeEntry_DoNotUse();
  OpAttributeRefTable_OpName2opAttributeEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const OpAttributeRefTable_OpName2opAttributeEntry_DoNotUse& other);
  static const OpAttributeRefTable_OpName2opAttributeEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const OpAttributeRefTable_OpName2opAttributeEntry_DoNotUse*>(&_OpAttributeRefTable_OpName2opAttributeEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
#ifndef NDEBUG
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
       s->data(), s->size(), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "oneflow.OpAttributeRefTable.OpName2opAttributeEntry.key");
#endif
    return true;
 }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2fplan_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2fplan_2eproto.file_level_metadata[7];
  }

  public:
};

// -------------------------------------------------------------------

class OpAttributeRefTable :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.OpAttributeRefTable) */ {
 public:
  OpAttributeRefTable();
  virtual ~OpAttributeRefTable();

  OpAttributeRefTable(const OpAttributeRefTable& from);
  OpAttributeRefTable(OpAttributeRefTable&& from) noexcept
    : OpAttributeRefTable() {
    *this = ::std::move(from);
  }

  inline OpAttributeRefTable& operator=(const OpAttributeRefTable& from) {
    CopyFrom(from);
    return *this;
  }
  inline OpAttributeRefTable& operator=(OpAttributeRefTable&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OpAttributeRefTable& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpAttributeRefTable* internal_default_instance() {
    return reinterpret_cast<const OpAttributeRefTable*>(
               &_OpAttributeRefTable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(OpAttributeRefTable& a, OpAttributeRefTable& b) {
    a.Swap(&b);
  }
  inline void Swap(OpAttributeRefTable* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OpAttributeRefTable* New() const final {
    return CreateMaybeMessage<OpAttributeRefTable>(nullptr);
  }

  OpAttributeRefTable* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OpAttributeRefTable>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const OpAttributeRefTable& from);
  void MergeFrom(const OpAttributeRefTable& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OpAttributeRefTable* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.OpAttributeRefTable";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2fplan_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2fplan_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kOpName2OpAttributeFieldNumber = 1,
  };
  // map<string, .oneflow.OpAttribute> op_name2op_attribute = 1;
  int op_name2op_attribute_size() const;
  void clear_op_name2op_attribute();
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::oneflow::OpAttribute >&
      op_name2op_attribute() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::oneflow::OpAttribute >*
      mutable_op_name2op_attribute();

  // @@protoc_insertion_point(class_scope:oneflow.OpAttributeRefTable)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      OpAttributeRefTable_OpName2opAttributeEntry_DoNotUse,
      std::string, ::oneflow::OpAttribute,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > op_name2op_attribute_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2fplan_2eproto;
};
// -------------------------------------------------------------------

class OpAttributeInfo_JobId2opAttributeRefTableEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<OpAttributeInfo_JobId2opAttributeRefTableEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::OpAttributeRefTable,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<OpAttributeInfo_JobId2opAttributeRefTableEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::OpAttributeRefTable,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  OpAttributeInfo_JobId2opAttributeRefTableEntry_DoNotUse();
  OpAttributeInfo_JobId2opAttributeRefTableEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const OpAttributeInfo_JobId2opAttributeRefTableEntry_DoNotUse& other);
  static const OpAttributeInfo_JobId2opAttributeRefTableEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const OpAttributeInfo_JobId2opAttributeRefTableEntry_DoNotUse*>(&_OpAttributeInfo_JobId2opAttributeRefTableEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2fplan_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2fplan_2eproto.file_level_metadata[9];
  }

  public:
};

// -------------------------------------------------------------------

class OpAttributeInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.OpAttributeInfo) */ {
 public:
  OpAttributeInfo();
  virtual ~OpAttributeInfo();

  OpAttributeInfo(const OpAttributeInfo& from);
  OpAttributeInfo(OpAttributeInfo&& from) noexcept
    : OpAttributeInfo() {
    *this = ::std::move(from);
  }

  inline OpAttributeInfo& operator=(const OpAttributeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline OpAttributeInfo& operator=(OpAttributeInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OpAttributeInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpAttributeInfo* internal_default_instance() {
    return reinterpret_cast<const OpAttributeInfo*>(
               &_OpAttributeInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(OpAttributeInfo& a, OpAttributeInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(OpAttributeInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OpAttributeInfo* New() const final {
    return CreateMaybeMessage<OpAttributeInfo>(nullptr);
  }

  OpAttributeInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OpAttributeInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const OpAttributeInfo& from);
  void MergeFrom(const OpAttributeInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OpAttributeInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.OpAttributeInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2fplan_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2fplan_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kJobId2OpAttributeRefTableFieldNumber = 1,
  };
  // map<int64, .oneflow.OpAttributeRefTable> job_id2op_attribute_ref_table = 1;
  int job_id2op_attribute_ref_table_size() const;
  void clear_job_id2op_attribute_ref_table();
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::OpAttributeRefTable >&
      job_id2op_attribute_ref_table() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::OpAttributeRefTable >*
      mutable_job_id2op_attribute_ref_table();

  // @@protoc_insertion_point(class_scope:oneflow.OpAttributeInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      OpAttributeInfo_JobId2opAttributeRefTableEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::OpAttributeRefTable,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > job_id2op_attribute_ref_table_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2fplan_2eproto;
};
// -------------------------------------------------------------------

class Plan_JobId2opAttributeRefTableEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Plan_JobId2opAttributeRefTableEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::OpAttributeRefTable,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Plan_JobId2opAttributeRefTableEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::OpAttributeRefTable,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Plan_JobId2opAttributeRefTableEntry_DoNotUse();
  Plan_JobId2opAttributeRefTableEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Plan_JobId2opAttributeRefTableEntry_DoNotUse& other);
  static const Plan_JobId2opAttributeRefTableEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Plan_JobId2opAttributeRefTableEntry_DoNotUse*>(&_Plan_JobId2opAttributeRefTableEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2fplan_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2fplan_2eproto.file_level_metadata[11];
  }

  public:
};

// -------------------------------------------------------------------

class Plan :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.Plan) */ {
 public:
  Plan();
  virtual ~Plan();

  Plan(const Plan& from);
  Plan(Plan&& from) noexcept
    : Plan() {
    *this = ::std::move(from);
  }

  inline Plan& operator=(const Plan& from) {
    CopyFrom(from);
    return *this;
  }
  inline Plan& operator=(Plan&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Plan& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Plan* internal_default_instance() {
    return reinterpret_cast<const Plan*>(
               &_Plan_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(Plan& a, Plan& b) {
    a.Swap(&b);
  }
  inline void Swap(Plan* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Plan* New() const final {
    return CreateMaybeMessage<Plan>(nullptr);
  }

  Plan* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Plan>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Plan& from);
  void MergeFrom(const Plan& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Plan* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.Plan";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2fplan_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2fplan_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kTaskFieldNumber = 1,
    kJobId2OpAttributeRefTableFieldNumber = 7,
    kBlockChunkListFieldNumber = 2,
    kJobConfsFieldNumber = 4,
    kCollectiveBoxingPlanFieldNumber = 5,
    kCtrlRegstDescInfoFieldNumber = 6,
  };
  // repeated .oneflow.TaskProto task = 1;
  int task_size() const;
  void clear_task();
  ::oneflow::TaskProto* mutable_task(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::TaskProto >*
      mutable_task();
  const ::oneflow::TaskProto& task(int index) const;
  ::oneflow::TaskProto* add_task();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::TaskProto >&
      task() const;

  // map<int64, .oneflow.OpAttributeRefTable> job_id2op_attribute_ref_table = 7;
  int job_id2op_attribute_ref_table_size() const;
  void clear_job_id2op_attribute_ref_table();
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::OpAttributeRefTable >&
      job_id2op_attribute_ref_table() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::OpAttributeRefTable >*
      mutable_job_id2op_attribute_ref_table();

  // required .oneflow.MemBlockAndChunkList block_chunk_list = 2;
  bool has_block_chunk_list() const;
  void clear_block_chunk_list();
  const ::oneflow::MemBlockAndChunkList& block_chunk_list() const;
  ::oneflow::MemBlockAndChunkList* release_block_chunk_list();
  ::oneflow::MemBlockAndChunkList* mutable_block_chunk_list();
  void set_allocated_block_chunk_list(::oneflow::MemBlockAndChunkList* block_chunk_list);

  // required .oneflow.JobConfs job_confs = 4;
  bool has_job_confs() const;
  void clear_job_confs();
  const ::oneflow::JobConfs& job_confs() const;
  ::oneflow::JobConfs* release_job_confs();
  ::oneflow::JobConfs* mutable_job_confs();
  void set_allocated_job_confs(::oneflow::JobConfs* job_confs);

  // required .oneflow.CollectiveBoxingPlan collective_boxing_plan = 5;
  bool has_collective_boxing_plan() const;
  void clear_collective_boxing_plan();
  const ::oneflow::CollectiveBoxingPlan& collective_boxing_plan() const;
  ::oneflow::CollectiveBoxingPlan* release_collective_boxing_plan();
  ::oneflow::CollectiveBoxingPlan* mutable_collective_boxing_plan();
  void set_allocated_collective_boxing_plan(::oneflow::CollectiveBoxingPlan* collective_boxing_plan);

  // required .oneflow.CtrlRegstDescInfo ctrl_regst_desc_info = 6;
  bool has_ctrl_regst_desc_info() const;
  void clear_ctrl_regst_desc_info();
  const ::oneflow::CtrlRegstDescInfo& ctrl_regst_desc_info() const;
  ::oneflow::CtrlRegstDescInfo* release_ctrl_regst_desc_info();
  ::oneflow::CtrlRegstDescInfo* mutable_ctrl_regst_desc_info();
  void set_allocated_ctrl_regst_desc_info(::oneflow::CtrlRegstDescInfo* ctrl_regst_desc_info);

  // @@protoc_insertion_point(class_scope:oneflow.Plan)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::TaskProto > task_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Plan_JobId2opAttributeRefTableEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::OpAttributeRefTable,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > job_id2op_attribute_ref_table_;
  ::oneflow::MemBlockAndChunkList* block_chunk_list_;
  ::oneflow::JobConfs* job_confs_;
  ::oneflow::CollectiveBoxingPlan* collective_boxing_plan_;
  ::oneflow::CtrlRegstDescInfo* ctrl_regst_desc_info_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2fplan_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MachineIds

// repeated int64 machine_id = 1;
inline int MachineIds::machine_id_size() const {
  return machine_id_.size();
}
inline void MachineIds::clear_machine_id() {
  machine_id_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MachineIds::machine_id(int index) const {
  // @@protoc_insertion_point(field_get:oneflow.MachineIds.machine_id)
  return machine_id_.Get(index);
}
inline void MachineIds::set_machine_id(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  machine_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:oneflow.MachineIds.machine_id)
}
inline void MachineIds::add_machine_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  machine_id_.Add(value);
  // @@protoc_insertion_point(field_add:oneflow.MachineIds.machine_id)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
MachineIds::machine_id() const {
  // @@protoc_insertion_point(field_list:oneflow.MachineIds.machine_id)
  return machine_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
MachineIds::mutable_machine_id() {
  // @@protoc_insertion_point(field_mutable_list:oneflow.MachineIds.machine_id)
  return &machine_id_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// JobConfs

// map<int64, .oneflow.JobConfigProto> job_id2job_conf = 1;
inline int JobConfs::job_id2job_conf_size() const {
  return job_id2job_conf_.size();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::JobConfigProto >&
JobConfs::job_id2job_conf() const {
  // @@protoc_insertion_point(field_map:oneflow.JobConfs.job_id2job_conf)
  return job_id2job_conf_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::JobConfigProto >*
JobConfs::mutable_job_id2job_conf() {
  // @@protoc_insertion_point(field_mutable_map:oneflow.JobConfs.job_id2job_conf)
  return job_id2job_conf_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CollectiveBoxingPlan

// map<int64, .oneflow.boxing.collective.RequestSet> job_id2request_set = 1;
inline int CollectiveBoxingPlan::job_id2request_set_size() const {
  return job_id2request_set_.size();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::boxing::collective::RequestSet >&
CollectiveBoxingPlan::job_id2request_set() const {
  // @@protoc_insertion_point(field_map:oneflow.CollectiveBoxingPlan.job_id2request_set)
  return job_id2request_set_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::boxing::collective::RequestSet >*
CollectiveBoxingPlan::mutable_job_id2request_set() {
  // @@protoc_insertion_point(field_mutable_map:oneflow.CollectiveBoxingPlan.job_id2request_set)
  return job_id2request_set_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CtrlRegstDescInfo

// map<int64, int64> ctrl_regst_desc_id2producer_task_id = 6;
inline int CtrlRegstDescInfo::ctrl_regst_desc_id2producer_task_id_size() const {
  return ctrl_regst_desc_id2producer_task_id_.size();
}
inline void CtrlRegstDescInfo::clear_ctrl_regst_desc_id2producer_task_id() {
  ctrl_regst_desc_id2producer_task_id_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::int64 >&
CtrlRegstDescInfo::ctrl_regst_desc_id2producer_task_id() const {
  // @@protoc_insertion_point(field_map:oneflow.CtrlRegstDescInfo.ctrl_regst_desc_id2producer_task_id)
  return ctrl_regst_desc_id2producer_task_id_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::int64 >*
CtrlRegstDescInfo::mutable_ctrl_regst_desc_id2producer_task_id() {
  // @@protoc_insertion_point(field_mutable_map:oneflow.CtrlRegstDescInfo.ctrl_regst_desc_id2producer_task_id)
  return ctrl_regst_desc_id2producer_task_id_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// OpAttributeRefTable

// map<string, .oneflow.OpAttribute> op_name2op_attribute = 1;
inline int OpAttributeRefTable::op_name2op_attribute_size() const {
  return op_name2op_attribute_.size();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::oneflow::OpAttribute >&
OpAttributeRefTable::op_name2op_attribute() const {
  // @@protoc_insertion_point(field_map:oneflow.OpAttributeRefTable.op_name2op_attribute)
  return op_name2op_attribute_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::oneflow::OpAttribute >*
OpAttributeRefTable::mutable_op_name2op_attribute() {
  // @@protoc_insertion_point(field_mutable_map:oneflow.OpAttributeRefTable.op_name2op_attribute)
  return op_name2op_attribute_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// OpAttributeInfo

// map<int64, .oneflow.OpAttributeRefTable> job_id2op_attribute_ref_table = 1;
inline int OpAttributeInfo::job_id2op_attribute_ref_table_size() const {
  return job_id2op_attribute_ref_table_.size();
}
inline void OpAttributeInfo::clear_job_id2op_attribute_ref_table() {
  job_id2op_attribute_ref_table_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::OpAttributeRefTable >&
OpAttributeInfo::job_id2op_attribute_ref_table() const {
  // @@protoc_insertion_point(field_map:oneflow.OpAttributeInfo.job_id2op_attribute_ref_table)
  return job_id2op_attribute_ref_table_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::OpAttributeRefTable >*
OpAttributeInfo::mutable_job_id2op_attribute_ref_table() {
  // @@protoc_insertion_point(field_mutable_map:oneflow.OpAttributeInfo.job_id2op_attribute_ref_table)
  return job_id2op_attribute_ref_table_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Plan

// repeated .oneflow.TaskProto task = 1;
inline int Plan::task_size() const {
  return task_.size();
}
inline ::oneflow::TaskProto* Plan::mutable_task(int index) {
  // @@protoc_insertion_point(field_mutable:oneflow.Plan.task)
  return task_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::TaskProto >*
Plan::mutable_task() {
  // @@protoc_insertion_point(field_mutable_list:oneflow.Plan.task)
  return &task_;
}
inline const ::oneflow::TaskProto& Plan::task(int index) const {
  // @@protoc_insertion_point(field_get:oneflow.Plan.task)
  return task_.Get(index);
}
inline ::oneflow::TaskProto* Plan::add_task() {
  // @@protoc_insertion_point(field_add:oneflow.Plan.task)
  return task_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::TaskProto >&
Plan::task() const {
  // @@protoc_insertion_point(field_list:oneflow.Plan.task)
  return task_;
}

// required .oneflow.MemBlockAndChunkList block_chunk_list = 2;
inline bool Plan::has_block_chunk_list() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::oneflow::MemBlockAndChunkList& Plan::block_chunk_list() const {
  const ::oneflow::MemBlockAndChunkList* p = block_chunk_list_;
  // @@protoc_insertion_point(field_get:oneflow.Plan.block_chunk_list)
  return p != nullptr ? *p : *reinterpret_cast<const ::oneflow::MemBlockAndChunkList*>(
      &::oneflow::_MemBlockAndChunkList_default_instance_);
}
inline ::oneflow::MemBlockAndChunkList* Plan::release_block_chunk_list() {
  // @@protoc_insertion_point(field_release:oneflow.Plan.block_chunk_list)
  _has_bits_[0] &= ~0x00000001u;
  ::oneflow::MemBlockAndChunkList* temp = block_chunk_list_;
  block_chunk_list_ = nullptr;
  return temp;
}
inline ::oneflow::MemBlockAndChunkList* Plan::mutable_block_chunk_list() {
  _has_bits_[0] |= 0x00000001u;
  if (block_chunk_list_ == nullptr) {
    auto* p = CreateMaybeMessage<::oneflow::MemBlockAndChunkList>(GetArenaNoVirtual());
    block_chunk_list_ = p;
  }
  // @@protoc_insertion_point(field_mutable:oneflow.Plan.block_chunk_list)
  return block_chunk_list_;
}
inline void Plan::set_allocated_block_chunk_list(::oneflow::MemBlockAndChunkList* block_chunk_list) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(block_chunk_list_);
  }
  if (block_chunk_list) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      block_chunk_list = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, block_chunk_list, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  block_chunk_list_ = block_chunk_list;
  // @@protoc_insertion_point(field_set_allocated:oneflow.Plan.block_chunk_list)
}

// required .oneflow.JobConfs job_confs = 4;
inline bool Plan::has_job_confs() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Plan::clear_job_confs() {
  if (job_confs_ != nullptr) job_confs_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::oneflow::JobConfs& Plan::job_confs() const {
  const ::oneflow::JobConfs* p = job_confs_;
  // @@protoc_insertion_point(field_get:oneflow.Plan.job_confs)
  return p != nullptr ? *p : *reinterpret_cast<const ::oneflow::JobConfs*>(
      &::oneflow::_JobConfs_default_instance_);
}
inline ::oneflow::JobConfs* Plan::release_job_confs() {
  // @@protoc_insertion_point(field_release:oneflow.Plan.job_confs)
  _has_bits_[0] &= ~0x00000002u;
  ::oneflow::JobConfs* temp = job_confs_;
  job_confs_ = nullptr;
  return temp;
}
inline ::oneflow::JobConfs* Plan::mutable_job_confs() {
  _has_bits_[0] |= 0x00000002u;
  if (job_confs_ == nullptr) {
    auto* p = CreateMaybeMessage<::oneflow::JobConfs>(GetArenaNoVirtual());
    job_confs_ = p;
  }
  // @@protoc_insertion_point(field_mutable:oneflow.Plan.job_confs)
  return job_confs_;
}
inline void Plan::set_allocated_job_confs(::oneflow::JobConfs* job_confs) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete job_confs_;
  }
  if (job_confs) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      job_confs = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, job_confs, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  job_confs_ = job_confs;
  // @@protoc_insertion_point(field_set_allocated:oneflow.Plan.job_confs)
}

// required .oneflow.CollectiveBoxingPlan collective_boxing_plan = 5;
inline bool Plan::has_collective_boxing_plan() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Plan::clear_collective_boxing_plan() {
  if (collective_boxing_plan_ != nullptr) collective_boxing_plan_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::oneflow::CollectiveBoxingPlan& Plan::collective_boxing_plan() const {
  const ::oneflow::CollectiveBoxingPlan* p = collective_boxing_plan_;
  // @@protoc_insertion_point(field_get:oneflow.Plan.collective_boxing_plan)
  return p != nullptr ? *p : *reinterpret_cast<const ::oneflow::CollectiveBoxingPlan*>(
      &::oneflow::_CollectiveBoxingPlan_default_instance_);
}
inline ::oneflow::CollectiveBoxingPlan* Plan::release_collective_boxing_plan() {
  // @@protoc_insertion_point(field_release:oneflow.Plan.collective_boxing_plan)
  _has_bits_[0] &= ~0x00000004u;
  ::oneflow::CollectiveBoxingPlan* temp = collective_boxing_plan_;
  collective_boxing_plan_ = nullptr;
  return temp;
}
inline ::oneflow::CollectiveBoxingPlan* Plan::mutable_collective_boxing_plan() {
  _has_bits_[0] |= 0x00000004u;
  if (collective_boxing_plan_ == nullptr) {
    auto* p = CreateMaybeMessage<::oneflow::CollectiveBoxingPlan>(GetArenaNoVirtual());
    collective_boxing_plan_ = p;
  }
  // @@protoc_insertion_point(field_mutable:oneflow.Plan.collective_boxing_plan)
  return collective_boxing_plan_;
}
inline void Plan::set_allocated_collective_boxing_plan(::oneflow::CollectiveBoxingPlan* collective_boxing_plan) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete collective_boxing_plan_;
  }
  if (collective_boxing_plan) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      collective_boxing_plan = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, collective_boxing_plan, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  collective_boxing_plan_ = collective_boxing_plan;
  // @@protoc_insertion_point(field_set_allocated:oneflow.Plan.collective_boxing_plan)
}

// required .oneflow.CtrlRegstDescInfo ctrl_regst_desc_info = 6;
inline bool Plan::has_ctrl_regst_desc_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Plan::clear_ctrl_regst_desc_info() {
  if (ctrl_regst_desc_info_ != nullptr) ctrl_regst_desc_info_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::oneflow::CtrlRegstDescInfo& Plan::ctrl_regst_desc_info() const {
  const ::oneflow::CtrlRegstDescInfo* p = ctrl_regst_desc_info_;
  // @@protoc_insertion_point(field_get:oneflow.Plan.ctrl_regst_desc_info)
  return p != nullptr ? *p : *reinterpret_cast<const ::oneflow::CtrlRegstDescInfo*>(
      &::oneflow::_CtrlRegstDescInfo_default_instance_);
}
inline ::oneflow::CtrlRegstDescInfo* Plan::release_ctrl_regst_desc_info() {
  // @@protoc_insertion_point(field_release:oneflow.Plan.ctrl_regst_desc_info)
  _has_bits_[0] &= ~0x00000008u;
  ::oneflow::CtrlRegstDescInfo* temp = ctrl_regst_desc_info_;
  ctrl_regst_desc_info_ = nullptr;
  return temp;
}
inline ::oneflow::CtrlRegstDescInfo* Plan::mutable_ctrl_regst_desc_info() {
  _has_bits_[0] |= 0x00000008u;
  if (ctrl_regst_desc_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::oneflow::CtrlRegstDescInfo>(GetArenaNoVirtual());
    ctrl_regst_desc_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:oneflow.Plan.ctrl_regst_desc_info)
  return ctrl_regst_desc_info_;
}
inline void Plan::set_allocated_ctrl_regst_desc_info(::oneflow::CtrlRegstDescInfo* ctrl_regst_desc_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete ctrl_regst_desc_info_;
  }
  if (ctrl_regst_desc_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ctrl_regst_desc_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ctrl_regst_desc_info, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  ctrl_regst_desc_info_ = ctrl_regst_desc_info;
  // @@protoc_insertion_point(field_set_allocated:oneflow.Plan.ctrl_regst_desc_info)
}

// map<int64, .oneflow.OpAttributeRefTable> job_id2op_attribute_ref_table = 7;
inline int Plan::job_id2op_attribute_ref_table_size() const {
  return job_id2op_attribute_ref_table_.size();
}
inline void Plan::clear_job_id2op_attribute_ref_table() {
  job_id2op_attribute_ref_table_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::OpAttributeRefTable >&
Plan::job_id2op_attribute_ref_table() const {
  // @@protoc_insertion_point(field_map:oneflow.Plan.job_id2op_attribute_ref_table)
  return job_id2op_attribute_ref_table_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::OpAttributeRefTable >*
Plan::mutable_job_id2op_attribute_ref_table() {
  // @@protoc_insertion_point(field_mutable_map:oneflow.Plan.job_id2op_attribute_ref_table)
  return job_id2op_attribute_ref_table_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace oneflow

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fjob_2fplan_2eproto
