// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/job/sub_plan.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fjob_2fsub_5fplan_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fjob_2fsub_5fplan_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "oneflow/core/job/task.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_oneflow_2fcore_2fjob_2fsub_5fplan_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_oneflow_2fcore_2fjob_2fsub_5fplan_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_oneflow_2fcore_2fjob_2fsub_5fplan_2eproto;
namespace oneflow {
class ClusterThrdIds;
class ClusterThrdIdsDefaultTypeInternal;
extern ClusterThrdIdsDefaultTypeInternal _ClusterThrdIds_default_instance_;
class ClusterThrdIds_MachineId2thrdIdsEntry_DoNotUse;
class ClusterThrdIds_MachineId2thrdIdsEntry_DoNotUseDefaultTypeInternal;
extern ClusterThrdIds_MachineId2thrdIdsEntry_DoNotUseDefaultTypeInternal _ClusterThrdIds_MachineId2thrdIdsEntry_DoNotUse_default_instance_;
class SubPlan;
class SubPlanDefaultTypeInternal;
extern SubPlanDefaultTypeInternal _SubPlan_default_instance_;
class ThrdIds;
class ThrdIdsDefaultTypeInternal;
extern ThrdIdsDefaultTypeInternal _ThrdIds_default_instance_;
}  // namespace oneflow
PROTOBUF_NAMESPACE_OPEN
template<> ::oneflow::ClusterThrdIds* Arena::CreateMaybeMessage<::oneflow::ClusterThrdIds>(Arena*);
template<> ::oneflow::ClusterThrdIds_MachineId2thrdIdsEntry_DoNotUse* Arena::CreateMaybeMessage<::oneflow::ClusterThrdIds_MachineId2thrdIdsEntry_DoNotUse>(Arena*);
template<> ::oneflow::SubPlan* Arena::CreateMaybeMessage<::oneflow::SubPlan>(Arena*);
template<> ::oneflow::ThrdIds* Arena::CreateMaybeMessage<::oneflow::ThrdIds>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace oneflow {

// ===================================================================

class ThrdIds :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.ThrdIds) */ {
 public:
  ThrdIds();
  virtual ~ThrdIds();

  ThrdIds(const ThrdIds& from);
  ThrdIds(ThrdIds&& from) noexcept
    : ThrdIds() {
    *this = ::std::move(from);
  }

  inline ThrdIds& operator=(const ThrdIds& from) {
    CopyFrom(from);
    return *this;
  }
  inline ThrdIds& operator=(ThrdIds&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ThrdIds& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ThrdIds* internal_default_instance() {
    return reinterpret_cast<const ThrdIds*>(
               &_ThrdIds_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ThrdIds& a, ThrdIds& b) {
    a.Swap(&b);
  }
  inline void Swap(ThrdIds* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ThrdIds* New() const final {
    return CreateMaybeMessage<ThrdIds>(nullptr);
  }

  ThrdIds* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ThrdIds>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ThrdIds& from);
  void MergeFrom(const ThrdIds& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ThrdIds* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.ThrdIds";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2fsub_5fplan_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2fsub_5fplan_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThrdIdFieldNumber = 1,
  };
  // repeated int64 thrd_id = 1;
  int thrd_id_size() const;
  void clear_thrd_id();
  ::PROTOBUF_NAMESPACE_ID::int64 thrd_id(int index) const;
  void set_thrd_id(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_thrd_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      thrd_id() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_thrd_id();

  // @@protoc_insertion_point(class_scope:oneflow.ThrdIds)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > thrd_id_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2fsub_5fplan_2eproto;
};
// -------------------------------------------------------------------

class ClusterThrdIds_MachineId2thrdIdsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<ClusterThrdIds_MachineId2thrdIdsEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::ThrdIds,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<ClusterThrdIds_MachineId2thrdIdsEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::ThrdIds,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  ClusterThrdIds_MachineId2thrdIdsEntry_DoNotUse();
  ClusterThrdIds_MachineId2thrdIdsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const ClusterThrdIds_MachineId2thrdIdsEntry_DoNotUse& other);
  static const ClusterThrdIds_MachineId2thrdIdsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ClusterThrdIds_MachineId2thrdIdsEntry_DoNotUse*>(&_ClusterThrdIds_MachineId2thrdIdsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2fsub_5fplan_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2fsub_5fplan_2eproto.file_level_metadata[1];
  }

  public:
};

// -------------------------------------------------------------------

class ClusterThrdIds :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.ClusterThrdIds) */ {
 public:
  ClusterThrdIds();
  virtual ~ClusterThrdIds();

  ClusterThrdIds(const ClusterThrdIds& from);
  ClusterThrdIds(ClusterThrdIds&& from) noexcept
    : ClusterThrdIds() {
    *this = ::std::move(from);
  }

  inline ClusterThrdIds& operator=(const ClusterThrdIds& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClusterThrdIds& operator=(ClusterThrdIds&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ClusterThrdIds& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClusterThrdIds* internal_default_instance() {
    return reinterpret_cast<const ClusterThrdIds*>(
               &_ClusterThrdIds_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ClusterThrdIds& a, ClusterThrdIds& b) {
    a.Swap(&b);
  }
  inline void Swap(ClusterThrdIds* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ClusterThrdIds* New() const final {
    return CreateMaybeMessage<ClusterThrdIds>(nullptr);
  }

  ClusterThrdIds* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ClusterThrdIds>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ClusterThrdIds& from);
  void MergeFrom(const ClusterThrdIds& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClusterThrdIds* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.ClusterThrdIds";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2fsub_5fplan_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2fsub_5fplan_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kMachineId2ThrdIdsFieldNumber = 1,
  };
  // map<int64, .oneflow.ThrdIds> machine_id2thrd_ids = 1;
  int machine_id2thrd_ids_size() const;
  void clear_machine_id2thrd_ids();
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::ThrdIds >&
      machine_id2thrd_ids() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::ThrdIds >*
      mutable_machine_id2thrd_ids();

  // @@protoc_insertion_point(class_scope:oneflow.ClusterThrdIds)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      ClusterThrdIds_MachineId2thrdIdsEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::ThrdIds,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > machine_id2thrd_ids_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2fsub_5fplan_2eproto;
};
// -------------------------------------------------------------------

class SubPlan :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.SubPlan) */ {
 public:
  SubPlan();
  virtual ~SubPlan();

  SubPlan(const SubPlan& from);
  SubPlan(SubPlan&& from) noexcept
    : SubPlan() {
    *this = ::std::move(from);
  }

  inline SubPlan& operator=(const SubPlan& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubPlan& operator=(SubPlan&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SubPlan& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubPlan* internal_default_instance() {
    return reinterpret_cast<const SubPlan*>(
               &_SubPlan_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SubPlan& a, SubPlan& b) {
    a.Swap(&b);
  }
  inline void Swap(SubPlan* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SubPlan* New() const final {
    return CreateMaybeMessage<SubPlan>(nullptr);
  }

  SubPlan* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SubPlan>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SubPlan& from);
  void MergeFrom(const SubPlan& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubPlan* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.SubPlan";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2fsub_5fplan_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2fsub_5fplan_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTaskFieldNumber = 1,
  };
  // repeated .oneflow.TaskProto task = 1;
  int task_size() const;
  void clear_task();
  ::oneflow::TaskProto* mutable_task(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::TaskProto >*
      mutable_task();
  const ::oneflow::TaskProto& task(int index) const;
  ::oneflow::TaskProto* add_task();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::TaskProto >&
      task() const;

  // @@protoc_insertion_point(class_scope:oneflow.SubPlan)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::TaskProto > task_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2fsub_5fplan_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ThrdIds

// repeated int64 thrd_id = 1;
inline int ThrdIds::thrd_id_size() const {
  return thrd_id_.size();
}
inline void ThrdIds::clear_thrd_id() {
  thrd_id_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ThrdIds::thrd_id(int index) const {
  // @@protoc_insertion_point(field_get:oneflow.ThrdIds.thrd_id)
  return thrd_id_.Get(index);
}
inline void ThrdIds::set_thrd_id(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  thrd_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:oneflow.ThrdIds.thrd_id)
}
inline void ThrdIds::add_thrd_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  thrd_id_.Add(value);
  // @@protoc_insertion_point(field_add:oneflow.ThrdIds.thrd_id)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
ThrdIds::thrd_id() const {
  // @@protoc_insertion_point(field_list:oneflow.ThrdIds.thrd_id)
  return thrd_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
ThrdIds::mutable_thrd_id() {
  // @@protoc_insertion_point(field_mutable_list:oneflow.ThrdIds.thrd_id)
  return &thrd_id_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ClusterThrdIds

// map<int64, .oneflow.ThrdIds> machine_id2thrd_ids = 1;
inline int ClusterThrdIds::machine_id2thrd_ids_size() const {
  return machine_id2thrd_ids_.size();
}
inline void ClusterThrdIds::clear_machine_id2thrd_ids() {
  machine_id2thrd_ids_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::ThrdIds >&
ClusterThrdIds::machine_id2thrd_ids() const {
  // @@protoc_insertion_point(field_map:oneflow.ClusterThrdIds.machine_id2thrd_ids)
  return machine_id2thrd_ids_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::oneflow::ThrdIds >*
ClusterThrdIds::mutable_machine_id2thrd_ids() {
  // @@protoc_insertion_point(field_mutable_map:oneflow.ClusterThrdIds.machine_id2thrd_ids)
  return machine_id2thrd_ids_.MutableMap();
}

// -------------------------------------------------------------------

// SubPlan

// repeated .oneflow.TaskProto task = 1;
inline int SubPlan::task_size() const {
  return task_.size();
}
inline ::oneflow::TaskProto* SubPlan::mutable_task(int index) {
  // @@protoc_insertion_point(field_mutable:oneflow.SubPlan.task)
  return task_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::TaskProto >*
SubPlan::mutable_task() {
  // @@protoc_insertion_point(field_mutable_list:oneflow.SubPlan.task)
  return &task_;
}
inline const ::oneflow::TaskProto& SubPlan::task(int index) const {
  // @@protoc_insertion_point(field_get:oneflow.SubPlan.task)
  return task_.Get(index);
}
inline ::oneflow::TaskProto* SubPlan::add_task() {
  // @@protoc_insertion_point(field_add:oneflow.SubPlan.task)
  return task_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::TaskProto >&
SubPlan::task() const {
  // @@protoc_insertion_point(field_list:oneflow.SubPlan.task)
  return task_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace oneflow

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fjob_2fsub_5fplan_2eproto
