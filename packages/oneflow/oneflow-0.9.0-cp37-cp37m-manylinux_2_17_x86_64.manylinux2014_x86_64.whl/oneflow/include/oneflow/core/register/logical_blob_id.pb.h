// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/register/logical_blob_id.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fregister_2flogical_5fblob_5fid_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fregister_2flogical_5fblob_5fid_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_oneflow_2fcore_2fregister_2flogical_5fblob_5fid_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_oneflow_2fcore_2fregister_2flogical_5fblob_5fid_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[7]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_oneflow_2fcore_2fregister_2flogical_5fblob_5fid_2eproto;
namespace oneflow {
class ArgSignature;
class ArgSignatureDefaultTypeInternal;
extern ArgSignatureDefaultTypeInternal _ArgSignature_default_instance_;
class ArgSignature_BnInOp2lbiEntry_DoNotUse;
class ArgSignature_BnInOp2lbiEntry_DoNotUseDefaultTypeInternal;
extern ArgSignature_BnInOp2lbiEntry_DoNotUseDefaultTypeInternal _ArgSignature_BnInOp2lbiEntry_DoNotUse_default_instance_;
class LogicalBlobId;
class LogicalBlobIdDefaultTypeInternal;
extern LogicalBlobIdDefaultTypeInternal _LogicalBlobId_default_instance_;
class LogicalBlobIdGroups;
class LogicalBlobIdGroupsDefaultTypeInternal;
extern LogicalBlobIdGroupsDefaultTypeInternal _LogicalBlobIdGroups_default_instance_;
class LogicalBlobIdGroups_LogicalBlobIdGroup;
class LogicalBlobIdGroups_LogicalBlobIdGroupDefaultTypeInternal;
extern LogicalBlobIdGroups_LogicalBlobIdGroupDefaultTypeInternal _LogicalBlobIdGroups_LogicalBlobIdGroup_default_instance_;
class LogicalBlobIdPair;
class LogicalBlobIdPairDefaultTypeInternal;
extern LogicalBlobIdPairDefaultTypeInternal _LogicalBlobIdPair_default_instance_;
class LogicalBlobIdPairs;
class LogicalBlobIdPairsDefaultTypeInternal;
extern LogicalBlobIdPairsDefaultTypeInternal _LogicalBlobIdPairs_default_instance_;
}  // namespace oneflow
PROTOBUF_NAMESPACE_OPEN
template<> ::oneflow::ArgSignature* Arena::CreateMaybeMessage<::oneflow::ArgSignature>(Arena*);
template<> ::oneflow::ArgSignature_BnInOp2lbiEntry_DoNotUse* Arena::CreateMaybeMessage<::oneflow::ArgSignature_BnInOp2lbiEntry_DoNotUse>(Arena*);
template<> ::oneflow::LogicalBlobId* Arena::CreateMaybeMessage<::oneflow::LogicalBlobId>(Arena*);
template<> ::oneflow::LogicalBlobIdGroups* Arena::CreateMaybeMessage<::oneflow::LogicalBlobIdGroups>(Arena*);
template<> ::oneflow::LogicalBlobIdGroups_LogicalBlobIdGroup* Arena::CreateMaybeMessage<::oneflow::LogicalBlobIdGroups_LogicalBlobIdGroup>(Arena*);
template<> ::oneflow::LogicalBlobIdPair* Arena::CreateMaybeMessage<::oneflow::LogicalBlobIdPair>(Arena*);
template<> ::oneflow::LogicalBlobIdPairs* Arena::CreateMaybeMessage<::oneflow::LogicalBlobIdPairs>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace oneflow {

// ===================================================================

class LogicalBlobId :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.LogicalBlobId) */ {
 public:
  LogicalBlobId();
  virtual ~LogicalBlobId();

  LogicalBlobId(const LogicalBlobId& from);
  LogicalBlobId(LogicalBlobId&& from) noexcept
    : LogicalBlobId() {
    *this = ::std::move(from);
  }

  inline LogicalBlobId& operator=(const LogicalBlobId& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogicalBlobId& operator=(LogicalBlobId&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LogicalBlobId& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LogicalBlobId* internal_default_instance() {
    return reinterpret_cast<const LogicalBlobId*>(
               &_LogicalBlobId_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(LogicalBlobId& a, LogicalBlobId& b) {
    a.Swap(&b);
  }
  inline void Swap(LogicalBlobId* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LogicalBlobId* New() const final {
    return CreateMaybeMessage<LogicalBlobId>(nullptr);
  }

  LogicalBlobId* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LogicalBlobId>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LogicalBlobId& from);
  void MergeFrom(const LogicalBlobId& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LogicalBlobId* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.LogicalBlobId";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fregister_2flogical_5fblob_5fid_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fregister_2flogical_5fblob_5fid_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOpNameFieldNumber = 1,
    kBlobNameFieldNumber = 2,
  };
  // optional string op_name = 1;
  bool has_op_name() const;
  void clear_op_name();
  const std::string& op_name() const;
  void set_op_name(const std::string& value);
  void set_op_name(std::string&& value);
  void set_op_name(const char* value);
  void set_op_name(const char* value, size_t size);
  std::string* mutable_op_name();
  std::string* release_op_name();
  void set_allocated_op_name(std::string* op_name);

  // optional string blob_name = 2;
  bool has_blob_name() const;
  void clear_blob_name();
  const std::string& blob_name() const;
  void set_blob_name(const std::string& value);
  void set_blob_name(std::string&& value);
  void set_blob_name(const char* value);
  void set_blob_name(const char* value, size_t size);
  std::string* mutable_blob_name();
  std::string* release_blob_name();
  void set_allocated_blob_name(std::string* blob_name);

  // @@protoc_insertion_point(class_scope:oneflow.LogicalBlobId)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr op_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr blob_name_;
  friend struct ::TableStruct_oneflow_2fcore_2fregister_2flogical_5fblob_5fid_2eproto;
};
// -------------------------------------------------------------------

class LogicalBlobIdPair :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.LogicalBlobIdPair) */ {
 public:
  LogicalBlobIdPair();
  virtual ~LogicalBlobIdPair();

  LogicalBlobIdPair(const LogicalBlobIdPair& from);
  LogicalBlobIdPair(LogicalBlobIdPair&& from) noexcept
    : LogicalBlobIdPair() {
    *this = ::std::move(from);
  }

  inline LogicalBlobIdPair& operator=(const LogicalBlobIdPair& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogicalBlobIdPair& operator=(LogicalBlobIdPair&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LogicalBlobIdPair& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LogicalBlobIdPair* internal_default_instance() {
    return reinterpret_cast<const LogicalBlobIdPair*>(
               &_LogicalBlobIdPair_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(LogicalBlobIdPair& a, LogicalBlobIdPair& b) {
    a.Swap(&b);
  }
  inline void Swap(LogicalBlobIdPair* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LogicalBlobIdPair* New() const final {
    return CreateMaybeMessage<LogicalBlobIdPair>(nullptr);
  }

  LogicalBlobIdPair* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LogicalBlobIdPair>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LogicalBlobIdPair& from);
  void MergeFrom(const LogicalBlobIdPair& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LogicalBlobIdPair* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.LogicalBlobIdPair";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fregister_2flogical_5fblob_5fid_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fregister_2flogical_5fblob_5fid_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFirstFieldNumber = 1,
    kSecondFieldNumber = 2,
  };
  // required .oneflow.LogicalBlobId first = 1;
  bool has_first() const;
  void clear_first();
  const ::oneflow::LogicalBlobId& first() const;
  ::oneflow::LogicalBlobId* release_first();
  ::oneflow::LogicalBlobId* mutable_first();
  void set_allocated_first(::oneflow::LogicalBlobId* first);

  // required .oneflow.LogicalBlobId second = 2;
  bool has_second() const;
  void clear_second();
  const ::oneflow::LogicalBlobId& second() const;
  ::oneflow::LogicalBlobId* release_second();
  ::oneflow::LogicalBlobId* mutable_second();
  void set_allocated_second(::oneflow::LogicalBlobId* second);

  // @@protoc_insertion_point(class_scope:oneflow.LogicalBlobIdPair)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::oneflow::LogicalBlobId* first_;
  ::oneflow::LogicalBlobId* second_;
  friend struct ::TableStruct_oneflow_2fcore_2fregister_2flogical_5fblob_5fid_2eproto;
};
// -------------------------------------------------------------------

class LogicalBlobIdPairs :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.LogicalBlobIdPairs) */ {
 public:
  LogicalBlobIdPairs();
  virtual ~LogicalBlobIdPairs();

  LogicalBlobIdPairs(const LogicalBlobIdPairs& from);
  LogicalBlobIdPairs(LogicalBlobIdPairs&& from) noexcept
    : LogicalBlobIdPairs() {
    *this = ::std::move(from);
  }

  inline LogicalBlobIdPairs& operator=(const LogicalBlobIdPairs& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogicalBlobIdPairs& operator=(LogicalBlobIdPairs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LogicalBlobIdPairs& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LogicalBlobIdPairs* internal_default_instance() {
    return reinterpret_cast<const LogicalBlobIdPairs*>(
               &_LogicalBlobIdPairs_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(LogicalBlobIdPairs& a, LogicalBlobIdPairs& b) {
    a.Swap(&b);
  }
  inline void Swap(LogicalBlobIdPairs* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LogicalBlobIdPairs* New() const final {
    return CreateMaybeMessage<LogicalBlobIdPairs>(nullptr);
  }

  LogicalBlobIdPairs* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LogicalBlobIdPairs>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LogicalBlobIdPairs& from);
  void MergeFrom(const LogicalBlobIdPairs& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LogicalBlobIdPairs* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.LogicalBlobIdPairs";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fregister_2flogical_5fblob_5fid_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fregister_2flogical_5fblob_5fid_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPairFieldNumber = 1,
  };
  // repeated .oneflow.LogicalBlobIdPair pair = 1;
  int pair_size() const;
  void clear_pair();
  ::oneflow::LogicalBlobIdPair* mutable_pair(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::LogicalBlobIdPair >*
      mutable_pair();
  const ::oneflow::LogicalBlobIdPair& pair(int index) const;
  ::oneflow::LogicalBlobIdPair* add_pair();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::LogicalBlobIdPair >&
      pair() const;

  // @@protoc_insertion_point(class_scope:oneflow.LogicalBlobIdPairs)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::LogicalBlobIdPair > pair_;
  friend struct ::TableStruct_oneflow_2fcore_2fregister_2flogical_5fblob_5fid_2eproto;
};
// -------------------------------------------------------------------

class LogicalBlobIdGroups_LogicalBlobIdGroup :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.LogicalBlobIdGroups.LogicalBlobIdGroup) */ {
 public:
  LogicalBlobIdGroups_LogicalBlobIdGroup();
  virtual ~LogicalBlobIdGroups_LogicalBlobIdGroup();

  LogicalBlobIdGroups_LogicalBlobIdGroup(const LogicalBlobIdGroups_LogicalBlobIdGroup& from);
  LogicalBlobIdGroups_LogicalBlobIdGroup(LogicalBlobIdGroups_LogicalBlobIdGroup&& from) noexcept
    : LogicalBlobIdGroups_LogicalBlobIdGroup() {
    *this = ::std::move(from);
  }

  inline LogicalBlobIdGroups_LogicalBlobIdGroup& operator=(const LogicalBlobIdGroups_LogicalBlobIdGroup& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogicalBlobIdGroups_LogicalBlobIdGroup& operator=(LogicalBlobIdGroups_LogicalBlobIdGroup&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LogicalBlobIdGroups_LogicalBlobIdGroup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LogicalBlobIdGroups_LogicalBlobIdGroup* internal_default_instance() {
    return reinterpret_cast<const LogicalBlobIdGroups_LogicalBlobIdGroup*>(
               &_LogicalBlobIdGroups_LogicalBlobIdGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(LogicalBlobIdGroups_LogicalBlobIdGroup& a, LogicalBlobIdGroups_LogicalBlobIdGroup& b) {
    a.Swap(&b);
  }
  inline void Swap(LogicalBlobIdGroups_LogicalBlobIdGroup* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LogicalBlobIdGroups_LogicalBlobIdGroup* New() const final {
    return CreateMaybeMessage<LogicalBlobIdGroups_LogicalBlobIdGroup>(nullptr);
  }

  LogicalBlobIdGroups_LogicalBlobIdGroup* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LogicalBlobIdGroups_LogicalBlobIdGroup>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LogicalBlobIdGroups_LogicalBlobIdGroup& from);
  void MergeFrom(const LogicalBlobIdGroups_LogicalBlobIdGroup& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LogicalBlobIdGroups_LogicalBlobIdGroup* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.LogicalBlobIdGroups.LogicalBlobIdGroup";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fregister_2flogical_5fblob_5fid_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fregister_2flogical_5fblob_5fid_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLbiFieldNumber = 1,
  };
  // repeated .oneflow.LogicalBlobId lbi = 1;
  int lbi_size() const;
  void clear_lbi();
  ::oneflow::LogicalBlobId* mutable_lbi(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::LogicalBlobId >*
      mutable_lbi();
  const ::oneflow::LogicalBlobId& lbi(int index) const;
  ::oneflow::LogicalBlobId* add_lbi();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::LogicalBlobId >&
      lbi() const;

  // @@protoc_insertion_point(class_scope:oneflow.LogicalBlobIdGroups.LogicalBlobIdGroup)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::LogicalBlobId > lbi_;
  friend struct ::TableStruct_oneflow_2fcore_2fregister_2flogical_5fblob_5fid_2eproto;
};
// -------------------------------------------------------------------

class LogicalBlobIdGroups :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.LogicalBlobIdGroups) */ {
 public:
  LogicalBlobIdGroups();
  virtual ~LogicalBlobIdGroups();

  LogicalBlobIdGroups(const LogicalBlobIdGroups& from);
  LogicalBlobIdGroups(LogicalBlobIdGroups&& from) noexcept
    : LogicalBlobIdGroups() {
    *this = ::std::move(from);
  }

  inline LogicalBlobIdGroups& operator=(const LogicalBlobIdGroups& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogicalBlobIdGroups& operator=(LogicalBlobIdGroups&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LogicalBlobIdGroups& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LogicalBlobIdGroups* internal_default_instance() {
    return reinterpret_cast<const LogicalBlobIdGroups*>(
               &_LogicalBlobIdGroups_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(LogicalBlobIdGroups& a, LogicalBlobIdGroups& b) {
    a.Swap(&b);
  }
  inline void Swap(LogicalBlobIdGroups* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LogicalBlobIdGroups* New() const final {
    return CreateMaybeMessage<LogicalBlobIdGroups>(nullptr);
  }

  LogicalBlobIdGroups* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LogicalBlobIdGroups>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LogicalBlobIdGroups& from);
  void MergeFrom(const LogicalBlobIdGroups& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LogicalBlobIdGroups* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.LogicalBlobIdGroups";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fregister_2flogical_5fblob_5fid_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fregister_2flogical_5fblob_5fid_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef LogicalBlobIdGroups_LogicalBlobIdGroup LogicalBlobIdGroup;

  // accessors -------------------------------------------------------

  enum : int {
    kLbiGroupFieldNumber = 2,
  };
  // repeated .oneflow.LogicalBlobIdGroups.LogicalBlobIdGroup lbi_group = 2;
  int lbi_group_size() const;
  void clear_lbi_group();
  ::oneflow::LogicalBlobIdGroups_LogicalBlobIdGroup* mutable_lbi_group(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::LogicalBlobIdGroups_LogicalBlobIdGroup >*
      mutable_lbi_group();
  const ::oneflow::LogicalBlobIdGroups_LogicalBlobIdGroup& lbi_group(int index) const;
  ::oneflow::LogicalBlobIdGroups_LogicalBlobIdGroup* add_lbi_group();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::LogicalBlobIdGroups_LogicalBlobIdGroup >&
      lbi_group() const;

  // @@protoc_insertion_point(class_scope:oneflow.LogicalBlobIdGroups)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::LogicalBlobIdGroups_LogicalBlobIdGroup > lbi_group_;
  friend struct ::TableStruct_oneflow_2fcore_2fregister_2flogical_5fblob_5fid_2eproto;
};
// -------------------------------------------------------------------

class ArgSignature_BnInOp2lbiEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<ArgSignature_BnInOp2lbiEntry_DoNotUse, 
    std::string, ::oneflow::LogicalBlobId,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<ArgSignature_BnInOp2lbiEntry_DoNotUse, 
    std::string, ::oneflow::LogicalBlobId,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  ArgSignature_BnInOp2lbiEntry_DoNotUse();
  ArgSignature_BnInOp2lbiEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const ArgSignature_BnInOp2lbiEntry_DoNotUse& other);
  static const ArgSignature_BnInOp2lbiEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ArgSignature_BnInOp2lbiEntry_DoNotUse*>(&_ArgSignature_BnInOp2lbiEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
#ifndef NDEBUG
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
       s->data(), s->size(), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "oneflow.ArgSignature.BnInOp2lbiEntry.key");
#endif
    return true;
 }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fregister_2flogical_5fblob_5fid_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fregister_2flogical_5fblob_5fid_2eproto.file_level_metadata[5];
  }

  public:
};

// -------------------------------------------------------------------

class ArgSignature :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.ArgSignature) */ {
 public:
  ArgSignature();
  virtual ~ArgSignature();

  ArgSignature(const ArgSignature& from);
  ArgSignature(ArgSignature&& from) noexcept
    : ArgSignature() {
    *this = ::std::move(from);
  }

  inline ArgSignature& operator=(const ArgSignature& from) {
    CopyFrom(from);
    return *this;
  }
  inline ArgSignature& operator=(ArgSignature&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ArgSignature& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArgSignature* internal_default_instance() {
    return reinterpret_cast<const ArgSignature*>(
               &_ArgSignature_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ArgSignature& a, ArgSignature& b) {
    a.Swap(&b);
  }
  inline void Swap(ArgSignature* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ArgSignature* New() const final {
    return CreateMaybeMessage<ArgSignature>(nullptr);
  }

  ArgSignature* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ArgSignature>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ArgSignature& from);
  void MergeFrom(const ArgSignature& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ArgSignature* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.ArgSignature";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fregister_2flogical_5fblob_5fid_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fregister_2flogical_5fblob_5fid_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kBnInOp2LbiFieldNumber = 1,
  };
  // map<string, .oneflow.LogicalBlobId> bn_in_op2lbi = 1;
  int bn_in_op2lbi_size() const;
  void clear_bn_in_op2lbi();
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::oneflow::LogicalBlobId >&
      bn_in_op2lbi() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::oneflow::LogicalBlobId >*
      mutable_bn_in_op2lbi();

  // @@protoc_insertion_point(class_scope:oneflow.ArgSignature)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      ArgSignature_BnInOp2lbiEntry_DoNotUse,
      std::string, ::oneflow::LogicalBlobId,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > bn_in_op2lbi_;
  friend struct ::TableStruct_oneflow_2fcore_2fregister_2flogical_5fblob_5fid_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LogicalBlobId

// optional string op_name = 1;
inline bool LogicalBlobId::has_op_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogicalBlobId::clear_op_name() {
  op_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& LogicalBlobId::op_name() const {
  // @@protoc_insertion_point(field_get:oneflow.LogicalBlobId.op_name)
  return op_name_.GetNoArena();
}
inline void LogicalBlobId::set_op_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  op_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oneflow.LogicalBlobId.op_name)
}
inline void LogicalBlobId::set_op_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  op_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oneflow.LogicalBlobId.op_name)
}
inline void LogicalBlobId::set_op_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  op_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oneflow.LogicalBlobId.op_name)
}
inline void LogicalBlobId::set_op_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  op_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oneflow.LogicalBlobId.op_name)
}
inline std::string* LogicalBlobId::mutable_op_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:oneflow.LogicalBlobId.op_name)
  return op_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* LogicalBlobId::release_op_name() {
  // @@protoc_insertion_point(field_release:oneflow.LogicalBlobId.op_name)
  if (!has_op_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return op_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void LogicalBlobId::set_allocated_op_name(std::string* op_name) {
  if (op_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  op_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), op_name);
  // @@protoc_insertion_point(field_set_allocated:oneflow.LogicalBlobId.op_name)
}

// optional string blob_name = 2;
inline bool LogicalBlobId::has_blob_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogicalBlobId::clear_blob_name() {
  blob_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& LogicalBlobId::blob_name() const {
  // @@protoc_insertion_point(field_get:oneflow.LogicalBlobId.blob_name)
  return blob_name_.GetNoArena();
}
inline void LogicalBlobId::set_blob_name(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  blob_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oneflow.LogicalBlobId.blob_name)
}
inline void LogicalBlobId::set_blob_name(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  blob_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oneflow.LogicalBlobId.blob_name)
}
inline void LogicalBlobId::set_blob_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  blob_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oneflow.LogicalBlobId.blob_name)
}
inline void LogicalBlobId::set_blob_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  blob_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oneflow.LogicalBlobId.blob_name)
}
inline std::string* LogicalBlobId::mutable_blob_name() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:oneflow.LogicalBlobId.blob_name)
  return blob_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* LogicalBlobId::release_blob_name() {
  // @@protoc_insertion_point(field_release:oneflow.LogicalBlobId.blob_name)
  if (!has_blob_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return blob_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void LogicalBlobId::set_allocated_blob_name(std::string* blob_name) {
  if (blob_name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  blob_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), blob_name);
  // @@protoc_insertion_point(field_set_allocated:oneflow.LogicalBlobId.blob_name)
}

// -------------------------------------------------------------------

// LogicalBlobIdPair

// required .oneflow.LogicalBlobId first = 1;
inline bool LogicalBlobIdPair::has_first() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogicalBlobIdPair::clear_first() {
  if (first_ != nullptr) first_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::oneflow::LogicalBlobId& LogicalBlobIdPair::first() const {
  const ::oneflow::LogicalBlobId* p = first_;
  // @@protoc_insertion_point(field_get:oneflow.LogicalBlobIdPair.first)
  return p != nullptr ? *p : *reinterpret_cast<const ::oneflow::LogicalBlobId*>(
      &::oneflow::_LogicalBlobId_default_instance_);
}
inline ::oneflow::LogicalBlobId* LogicalBlobIdPair::release_first() {
  // @@protoc_insertion_point(field_release:oneflow.LogicalBlobIdPair.first)
  _has_bits_[0] &= ~0x00000001u;
  ::oneflow::LogicalBlobId* temp = first_;
  first_ = nullptr;
  return temp;
}
inline ::oneflow::LogicalBlobId* LogicalBlobIdPair::mutable_first() {
  _has_bits_[0] |= 0x00000001u;
  if (first_ == nullptr) {
    auto* p = CreateMaybeMessage<::oneflow::LogicalBlobId>(GetArenaNoVirtual());
    first_ = p;
  }
  // @@protoc_insertion_point(field_mutable:oneflow.LogicalBlobIdPair.first)
  return first_;
}
inline void LogicalBlobIdPair::set_allocated_first(::oneflow::LogicalBlobId* first) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete first_;
  }
  if (first) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      first = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, first, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  first_ = first;
  // @@protoc_insertion_point(field_set_allocated:oneflow.LogicalBlobIdPair.first)
}

// required .oneflow.LogicalBlobId second = 2;
inline bool LogicalBlobIdPair::has_second() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogicalBlobIdPair::clear_second() {
  if (second_ != nullptr) second_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::oneflow::LogicalBlobId& LogicalBlobIdPair::second() const {
  const ::oneflow::LogicalBlobId* p = second_;
  // @@protoc_insertion_point(field_get:oneflow.LogicalBlobIdPair.second)
  return p != nullptr ? *p : *reinterpret_cast<const ::oneflow::LogicalBlobId*>(
      &::oneflow::_LogicalBlobId_default_instance_);
}
inline ::oneflow::LogicalBlobId* LogicalBlobIdPair::release_second() {
  // @@protoc_insertion_point(field_release:oneflow.LogicalBlobIdPair.second)
  _has_bits_[0] &= ~0x00000002u;
  ::oneflow::LogicalBlobId* temp = second_;
  second_ = nullptr;
  return temp;
}
inline ::oneflow::LogicalBlobId* LogicalBlobIdPair::mutable_second() {
  _has_bits_[0] |= 0x00000002u;
  if (second_ == nullptr) {
    auto* p = CreateMaybeMessage<::oneflow::LogicalBlobId>(GetArenaNoVirtual());
    second_ = p;
  }
  // @@protoc_insertion_point(field_mutable:oneflow.LogicalBlobIdPair.second)
  return second_;
}
inline void LogicalBlobIdPair::set_allocated_second(::oneflow::LogicalBlobId* second) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete second_;
  }
  if (second) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      second = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, second, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  second_ = second;
  // @@protoc_insertion_point(field_set_allocated:oneflow.LogicalBlobIdPair.second)
}

// -------------------------------------------------------------------

// LogicalBlobIdPairs

// repeated .oneflow.LogicalBlobIdPair pair = 1;
inline int LogicalBlobIdPairs::pair_size() const {
  return pair_.size();
}
inline void LogicalBlobIdPairs::clear_pair() {
  pair_.Clear();
}
inline ::oneflow::LogicalBlobIdPair* LogicalBlobIdPairs::mutable_pair(int index) {
  // @@protoc_insertion_point(field_mutable:oneflow.LogicalBlobIdPairs.pair)
  return pair_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::LogicalBlobIdPair >*
LogicalBlobIdPairs::mutable_pair() {
  // @@protoc_insertion_point(field_mutable_list:oneflow.LogicalBlobIdPairs.pair)
  return &pair_;
}
inline const ::oneflow::LogicalBlobIdPair& LogicalBlobIdPairs::pair(int index) const {
  // @@protoc_insertion_point(field_get:oneflow.LogicalBlobIdPairs.pair)
  return pair_.Get(index);
}
inline ::oneflow::LogicalBlobIdPair* LogicalBlobIdPairs::add_pair() {
  // @@protoc_insertion_point(field_add:oneflow.LogicalBlobIdPairs.pair)
  return pair_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::LogicalBlobIdPair >&
LogicalBlobIdPairs::pair() const {
  // @@protoc_insertion_point(field_list:oneflow.LogicalBlobIdPairs.pair)
  return pair_;
}

// -------------------------------------------------------------------

// LogicalBlobIdGroups_LogicalBlobIdGroup

// repeated .oneflow.LogicalBlobId lbi = 1;
inline int LogicalBlobIdGroups_LogicalBlobIdGroup::lbi_size() const {
  return lbi_.size();
}
inline void LogicalBlobIdGroups_LogicalBlobIdGroup::clear_lbi() {
  lbi_.Clear();
}
inline ::oneflow::LogicalBlobId* LogicalBlobIdGroups_LogicalBlobIdGroup::mutable_lbi(int index) {
  // @@protoc_insertion_point(field_mutable:oneflow.LogicalBlobIdGroups.LogicalBlobIdGroup.lbi)
  return lbi_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::LogicalBlobId >*
LogicalBlobIdGroups_LogicalBlobIdGroup::mutable_lbi() {
  // @@protoc_insertion_point(field_mutable_list:oneflow.LogicalBlobIdGroups.LogicalBlobIdGroup.lbi)
  return &lbi_;
}
inline const ::oneflow::LogicalBlobId& LogicalBlobIdGroups_LogicalBlobIdGroup::lbi(int index) const {
  // @@protoc_insertion_point(field_get:oneflow.LogicalBlobIdGroups.LogicalBlobIdGroup.lbi)
  return lbi_.Get(index);
}
inline ::oneflow::LogicalBlobId* LogicalBlobIdGroups_LogicalBlobIdGroup::add_lbi() {
  // @@protoc_insertion_point(field_add:oneflow.LogicalBlobIdGroups.LogicalBlobIdGroup.lbi)
  return lbi_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::LogicalBlobId >&
LogicalBlobIdGroups_LogicalBlobIdGroup::lbi() const {
  // @@protoc_insertion_point(field_list:oneflow.LogicalBlobIdGroups.LogicalBlobIdGroup.lbi)
  return lbi_;
}

// -------------------------------------------------------------------

// LogicalBlobIdGroups

// repeated .oneflow.LogicalBlobIdGroups.LogicalBlobIdGroup lbi_group = 2;
inline int LogicalBlobIdGroups::lbi_group_size() const {
  return lbi_group_.size();
}
inline void LogicalBlobIdGroups::clear_lbi_group() {
  lbi_group_.Clear();
}
inline ::oneflow::LogicalBlobIdGroups_LogicalBlobIdGroup* LogicalBlobIdGroups::mutable_lbi_group(int index) {
  // @@protoc_insertion_point(field_mutable:oneflow.LogicalBlobIdGroups.lbi_group)
  return lbi_group_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::LogicalBlobIdGroups_LogicalBlobIdGroup >*
LogicalBlobIdGroups::mutable_lbi_group() {
  // @@protoc_insertion_point(field_mutable_list:oneflow.LogicalBlobIdGroups.lbi_group)
  return &lbi_group_;
}
inline const ::oneflow::LogicalBlobIdGroups_LogicalBlobIdGroup& LogicalBlobIdGroups::lbi_group(int index) const {
  // @@protoc_insertion_point(field_get:oneflow.LogicalBlobIdGroups.lbi_group)
  return lbi_group_.Get(index);
}
inline ::oneflow::LogicalBlobIdGroups_LogicalBlobIdGroup* LogicalBlobIdGroups::add_lbi_group() {
  // @@protoc_insertion_point(field_add:oneflow.LogicalBlobIdGroups.lbi_group)
  return lbi_group_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::LogicalBlobIdGroups_LogicalBlobIdGroup >&
LogicalBlobIdGroups::lbi_group() const {
  // @@protoc_insertion_point(field_list:oneflow.LogicalBlobIdGroups.lbi_group)
  return lbi_group_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ArgSignature

// map<string, .oneflow.LogicalBlobId> bn_in_op2lbi = 1;
inline int ArgSignature::bn_in_op2lbi_size() const {
  return bn_in_op2lbi_.size();
}
inline void ArgSignature::clear_bn_in_op2lbi() {
  bn_in_op2lbi_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::oneflow::LogicalBlobId >&
ArgSignature::bn_in_op2lbi() const {
  // @@protoc_insertion_point(field_map:oneflow.ArgSignature.bn_in_op2lbi)
  return bn_in_op2lbi_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::oneflow::LogicalBlobId >*
ArgSignature::mutable_bn_in_op2lbi() {
  // @@protoc_insertion_point(field_mutable_map:oneflow.ArgSignature.bn_in_op2lbi)
  return bn_in_op2lbi_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace oneflow

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fregister_2flogical_5fblob_5fid_2eproto
