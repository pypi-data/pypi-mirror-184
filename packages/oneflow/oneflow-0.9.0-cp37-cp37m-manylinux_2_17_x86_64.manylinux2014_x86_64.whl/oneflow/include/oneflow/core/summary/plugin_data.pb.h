// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/summary/plugin_data.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fsummary_2fplugin_5fdata_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fsummary_2fplugin_5fdata_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/struct.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_oneflow_2fcore_2fsummary_2fplugin_5fdata_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_oneflow_2fcore_2fsummary_2fplugin_5fdata_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_oneflow_2fcore_2fsummary_2fplugin_5fdata_2eproto;
namespace oneflow {
namespace summary {
class HParamsPluginData;
class HParamsPluginDataDefaultTypeInternal;
extern HParamsPluginDataDefaultTypeInternal _HParamsPluginData_default_instance_;
class SessionStartInfo;
class SessionStartInfoDefaultTypeInternal;
extern SessionStartInfoDefaultTypeInternal _SessionStartInfo_default_instance_;
class SessionStartInfo_HparamsEntry_DoNotUse;
class SessionStartInfo_HparamsEntry_DoNotUseDefaultTypeInternal;
extern SessionStartInfo_HparamsEntry_DoNotUseDefaultTypeInternal _SessionStartInfo_HparamsEntry_DoNotUse_default_instance_;
class SessionStartInfo_MetricsEntry_DoNotUse;
class SessionStartInfo_MetricsEntry_DoNotUseDefaultTypeInternal;
extern SessionStartInfo_MetricsEntry_DoNotUseDefaultTypeInternal _SessionStartInfo_MetricsEntry_DoNotUse_default_instance_;
}  // namespace summary
}  // namespace oneflow
PROTOBUF_NAMESPACE_OPEN
template<> ::oneflow::summary::HParamsPluginData* Arena::CreateMaybeMessage<::oneflow::summary::HParamsPluginData>(Arena*);
template<> ::oneflow::summary::SessionStartInfo* Arena::CreateMaybeMessage<::oneflow::summary::SessionStartInfo>(Arena*);
template<> ::oneflow::summary::SessionStartInfo_HparamsEntry_DoNotUse* Arena::CreateMaybeMessage<::oneflow::summary::SessionStartInfo_HparamsEntry_DoNotUse>(Arena*);
template<> ::oneflow::summary::SessionStartInfo_MetricsEntry_DoNotUse* Arena::CreateMaybeMessage<::oneflow::summary::SessionStartInfo_MetricsEntry_DoNotUse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace oneflow {
namespace summary {

// ===================================================================

class HParamsPluginData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.summary.HParamsPluginData) */ {
 public:
  HParamsPluginData();
  virtual ~HParamsPluginData();

  HParamsPluginData(const HParamsPluginData& from);
  HParamsPluginData(HParamsPluginData&& from) noexcept
    : HParamsPluginData() {
    *this = ::std::move(from);
  }

  inline HParamsPluginData& operator=(const HParamsPluginData& from) {
    CopyFrom(from);
    return *this;
  }
  inline HParamsPluginData& operator=(HParamsPluginData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HParamsPluginData& default_instance();

  enum DataCase {
    kSessionStartInfo = 3,
    DATA_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HParamsPluginData* internal_default_instance() {
    return reinterpret_cast<const HParamsPluginData*>(
               &_HParamsPluginData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(HParamsPluginData& a, HParamsPluginData& b) {
    a.Swap(&b);
  }
  inline void Swap(HParamsPluginData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HParamsPluginData* New() const final {
    return CreateMaybeMessage<HParamsPluginData>(nullptr);
  }

  HParamsPluginData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HParamsPluginData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HParamsPluginData& from);
  void MergeFrom(const HParamsPluginData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HParamsPluginData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.summary.HParamsPluginData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fsummary_2fplugin_5fdata_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fsummary_2fplugin_5fdata_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVersionFieldNumber = 1,
    kSessionStartInfoFieldNumber = 3,
  };
  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::int32 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional .oneflow.summary.SessionStartInfo session_start_info = 3;
  bool has_session_start_info() const;
  void clear_session_start_info();
  const ::oneflow::summary::SessionStartInfo& session_start_info() const;
  ::oneflow::summary::SessionStartInfo* release_session_start_info();
  ::oneflow::summary::SessionStartInfo* mutable_session_start_info();
  void set_allocated_session_start_info(::oneflow::summary::SessionStartInfo* session_start_info);

  void clear_data();
  DataCase data_case() const;
  // @@protoc_insertion_point(class_scope:oneflow.summary.HParamsPluginData)
 private:
  class _Internal;
  void set_has_session_start_info();

  inline bool has_data() const;
  inline void clear_has_data();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 version_;
  union DataUnion {
    DataUnion() {}
    ::oneflow::summary::SessionStartInfo* session_start_info_;
  } data_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_oneflow_2fcore_2fsummary_2fplugin_5fdata_2eproto;
};
// -------------------------------------------------------------------

class SessionStartInfo_HparamsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<SessionStartInfo_HparamsEntry_DoNotUse, 
    std::string, PROTOBUF_NAMESPACE_ID::Value,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<SessionStartInfo_HparamsEntry_DoNotUse, 
    std::string, PROTOBUF_NAMESPACE_ID::Value,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  SessionStartInfo_HparamsEntry_DoNotUse();
  SessionStartInfo_HparamsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const SessionStartInfo_HparamsEntry_DoNotUse& other);
  static const SessionStartInfo_HparamsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const SessionStartInfo_HparamsEntry_DoNotUse*>(&_SessionStartInfo_HparamsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
#ifndef NDEBUG
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
       s->data(), s->size(), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "oneflow.summary.SessionStartInfo.HparamsEntry.key");
#endif
    return true;
 }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fsummary_2fplugin_5fdata_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fsummary_2fplugin_5fdata_2eproto.file_level_metadata[1];
  }

  public:
};

// -------------------------------------------------------------------

class SessionStartInfo_MetricsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<SessionStartInfo_MetricsEntry_DoNotUse, 
    std::string, PROTOBUF_NAMESPACE_ID::Value,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<SessionStartInfo_MetricsEntry_DoNotUse, 
    std::string, PROTOBUF_NAMESPACE_ID::Value,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  SessionStartInfo_MetricsEntry_DoNotUse();
  SessionStartInfo_MetricsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const SessionStartInfo_MetricsEntry_DoNotUse& other);
  static const SessionStartInfo_MetricsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const SessionStartInfo_MetricsEntry_DoNotUse*>(&_SessionStartInfo_MetricsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
#ifndef NDEBUG
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
       s->data(), s->size(), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "oneflow.summary.SessionStartInfo.MetricsEntry.key");
#endif
    return true;
 }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fsummary_2fplugin_5fdata_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fsummary_2fplugin_5fdata_2eproto.file_level_metadata[2];
  }

  public:
};

// -------------------------------------------------------------------

class SessionStartInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.summary.SessionStartInfo) */ {
 public:
  SessionStartInfo();
  virtual ~SessionStartInfo();

  SessionStartInfo(const SessionStartInfo& from);
  SessionStartInfo(SessionStartInfo&& from) noexcept
    : SessionStartInfo() {
    *this = ::std::move(from);
  }

  inline SessionStartInfo& operator=(const SessionStartInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline SessionStartInfo& operator=(SessionStartInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SessionStartInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SessionStartInfo* internal_default_instance() {
    return reinterpret_cast<const SessionStartInfo*>(
               &_SessionStartInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SessionStartInfo& a, SessionStartInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(SessionStartInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SessionStartInfo* New() const final {
    return CreateMaybeMessage<SessionStartInfo>(nullptr);
  }

  SessionStartInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SessionStartInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SessionStartInfo& from);
  void MergeFrom(const SessionStartInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SessionStartInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.summary.SessionStartInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fsummary_2fplugin_5fdata_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fsummary_2fplugin_5fdata_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kHparamsFieldNumber = 1,
    kMetricsFieldNumber = 6,
    kGroupNameFieldNumber = 4,
    kStartTimeSecsFieldNumber = 5,
  };
  // map<string, .google.protobuf.Value> hparams = 1;
  int hparams_size() const;
  void clear_hparams();
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >&
      hparams() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >*
      mutable_hparams();

  // map<string, .google.protobuf.Value> metrics = 6;
  int metrics_size() const;
  void clear_metrics();
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >&
      metrics() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >*
      mutable_metrics();

  // required string group_name = 4;
  bool has_group_name() const;
  void clear_group_name();
  const std::string& group_name() const;
  void set_group_name(const std::string& value);
  void set_group_name(std::string&& value);
  void set_group_name(const char* value);
  void set_group_name(const char* value, size_t size);
  std::string* mutable_group_name();
  std::string* release_group_name();
  void set_allocated_group_name(std::string* group_name);

  // required double start_time_secs = 5;
  bool has_start_time_secs() const;
  void clear_start_time_secs();
  double start_time_secs() const;
  void set_start_time_secs(double value);

  // @@protoc_insertion_point(class_scope:oneflow.summary.SessionStartInfo)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      SessionStartInfo_HparamsEntry_DoNotUse,
      std::string, PROTOBUF_NAMESPACE_ID::Value,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > hparams_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      SessionStartInfo_MetricsEntry_DoNotUse,
      std::string, PROTOBUF_NAMESPACE_ID::Value,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > metrics_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr group_name_;
  double start_time_secs_;
  friend struct ::TableStruct_oneflow_2fcore_2fsummary_2fplugin_5fdata_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// HParamsPluginData

// required int32 version = 1;
inline bool HParamsPluginData::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HParamsPluginData::clear_version() {
  version_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 HParamsPluginData::version() const {
  // @@protoc_insertion_point(field_get:oneflow.summary.HParamsPluginData.version)
  return version_;
}
inline void HParamsPluginData::set_version(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  version_ = value;
  // @@protoc_insertion_point(field_set:oneflow.summary.HParamsPluginData.version)
}

// optional .oneflow.summary.SessionStartInfo session_start_info = 3;
inline bool HParamsPluginData::has_session_start_info() const {
  return data_case() == kSessionStartInfo;
}
inline void HParamsPluginData::set_has_session_start_info() {
  _oneof_case_[0] = kSessionStartInfo;
}
inline void HParamsPluginData::clear_session_start_info() {
  if (has_session_start_info()) {
    delete data_.session_start_info_;
    clear_has_data();
  }
}
inline ::oneflow::summary::SessionStartInfo* HParamsPluginData::release_session_start_info() {
  // @@protoc_insertion_point(field_release:oneflow.summary.HParamsPluginData.session_start_info)
  if (has_session_start_info()) {
    clear_has_data();
      ::oneflow::summary::SessionStartInfo* temp = data_.session_start_info_;
    data_.session_start_info_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::oneflow::summary::SessionStartInfo& HParamsPluginData::session_start_info() const {
  // @@protoc_insertion_point(field_get:oneflow.summary.HParamsPluginData.session_start_info)
  return has_session_start_info()
      ? *data_.session_start_info_
      : *reinterpret_cast< ::oneflow::summary::SessionStartInfo*>(&::oneflow::summary::_SessionStartInfo_default_instance_);
}
inline ::oneflow::summary::SessionStartInfo* HParamsPluginData::mutable_session_start_info() {
  if (!has_session_start_info()) {
    clear_data();
    set_has_session_start_info();
    data_.session_start_info_ = CreateMaybeMessage< ::oneflow::summary::SessionStartInfo >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:oneflow.summary.HParamsPluginData.session_start_info)
  return data_.session_start_info_;
}

inline bool HParamsPluginData::has_data() const {
  return data_case() != DATA_NOT_SET;
}
inline void HParamsPluginData::clear_has_data() {
  _oneof_case_[0] = DATA_NOT_SET;
}
inline HParamsPluginData::DataCase HParamsPluginData::data_case() const {
  return HParamsPluginData::DataCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SessionStartInfo

// map<string, .google.protobuf.Value> hparams = 1;
inline int SessionStartInfo::hparams_size() const {
  return hparams_.size();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >&
SessionStartInfo::hparams() const {
  // @@protoc_insertion_point(field_map:oneflow.summary.SessionStartInfo.hparams)
  return hparams_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >*
SessionStartInfo::mutable_hparams() {
  // @@protoc_insertion_point(field_mutable_map:oneflow.summary.SessionStartInfo.hparams)
  return hparams_.MutableMap();
}

// required string group_name = 4;
inline bool SessionStartInfo::has_group_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SessionStartInfo::clear_group_name() {
  group_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SessionStartInfo::group_name() const {
  // @@protoc_insertion_point(field_get:oneflow.summary.SessionStartInfo.group_name)
  return group_name_.GetNoArena();
}
inline void SessionStartInfo::set_group_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  group_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oneflow.summary.SessionStartInfo.group_name)
}
inline void SessionStartInfo::set_group_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  group_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oneflow.summary.SessionStartInfo.group_name)
}
inline void SessionStartInfo::set_group_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  group_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oneflow.summary.SessionStartInfo.group_name)
}
inline void SessionStartInfo::set_group_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  group_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oneflow.summary.SessionStartInfo.group_name)
}
inline std::string* SessionStartInfo::mutable_group_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:oneflow.summary.SessionStartInfo.group_name)
  return group_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SessionStartInfo::release_group_name() {
  // @@protoc_insertion_point(field_release:oneflow.summary.SessionStartInfo.group_name)
  if (!has_group_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return group_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SessionStartInfo::set_allocated_group_name(std::string* group_name) {
  if (group_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  group_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), group_name);
  // @@protoc_insertion_point(field_set_allocated:oneflow.summary.SessionStartInfo.group_name)
}

// required double start_time_secs = 5;
inline bool SessionStartInfo::has_start_time_secs() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SessionStartInfo::clear_start_time_secs() {
  start_time_secs_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline double SessionStartInfo::start_time_secs() const {
  // @@protoc_insertion_point(field_get:oneflow.summary.SessionStartInfo.start_time_secs)
  return start_time_secs_;
}
inline void SessionStartInfo::set_start_time_secs(double value) {
  _has_bits_[0] |= 0x00000002u;
  start_time_secs_ = value;
  // @@protoc_insertion_point(field_set:oneflow.summary.SessionStartInfo.start_time_secs)
}

// map<string, .google.protobuf.Value> metrics = 6;
inline int SessionStartInfo::metrics_size() const {
  return metrics_.size();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >&
SessionStartInfo::metrics() const {
  // @@protoc_insertion_point(field_map:oneflow.summary.SessionStartInfo.metrics)
  return metrics_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >*
SessionStartInfo::mutable_metrics() {
  // @@protoc_insertion_point(field_mutable_map:oneflow.summary.SessionStartInfo.metrics)
  return metrics_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace summary
}  // namespace oneflow

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fsummary_2fplugin_5fdata_2eproto
