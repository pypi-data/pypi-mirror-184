// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/comm_network/ibverbs/ibverbs.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fcomm_5fnetwork_2fibverbs_2fibverbs_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fcomm_5fnetwork_2fibverbs_2fibverbs_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_oneflow_2fcore_2fcomm_5fnetwork_2fibverbs_2fibverbs_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_oneflow_2fcore_2fcomm_5fnetwork_2fibverbs_2fibverbs_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_oneflow_2fcore_2fcomm_5fnetwork_2fibverbs_2fibverbs_2eproto;
namespace oneflow {
class IBVerbsConnectionInfo;
class IBVerbsConnectionInfoDefaultTypeInternal;
extern IBVerbsConnectionInfoDefaultTypeInternal _IBVerbsConnectionInfo_default_instance_;
}  // namespace oneflow
PROTOBUF_NAMESPACE_OPEN
template<> ::oneflow::IBVerbsConnectionInfo* Arena::CreateMaybeMessage<::oneflow::IBVerbsConnectionInfo>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace oneflow {

// ===================================================================

class IBVerbsConnectionInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.IBVerbsConnectionInfo) */ {
 public:
  IBVerbsConnectionInfo();
  virtual ~IBVerbsConnectionInfo();

  IBVerbsConnectionInfo(const IBVerbsConnectionInfo& from);
  IBVerbsConnectionInfo(IBVerbsConnectionInfo&& from) noexcept
    : IBVerbsConnectionInfo() {
    *this = ::std::move(from);
  }

  inline IBVerbsConnectionInfo& operator=(const IBVerbsConnectionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline IBVerbsConnectionInfo& operator=(IBVerbsConnectionInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IBVerbsConnectionInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IBVerbsConnectionInfo* internal_default_instance() {
    return reinterpret_cast<const IBVerbsConnectionInfo*>(
               &_IBVerbsConnectionInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(IBVerbsConnectionInfo& a, IBVerbsConnectionInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(IBVerbsConnectionInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IBVerbsConnectionInfo* New() const final {
    return CreateMaybeMessage<IBVerbsConnectionInfo>(nullptr);
  }

  IBVerbsConnectionInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IBVerbsConnectionInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IBVerbsConnectionInfo& from);
  void MergeFrom(const IBVerbsConnectionInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IBVerbsConnectionInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.IBVerbsConnectionInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fcomm_5fnetwork_2fibverbs_2fibverbs_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fcomm_5fnetwork_2fibverbs_2fibverbs_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLidFieldNumber = 1,
    kQpNumFieldNumber = 2,
    kSubnetPrefixFieldNumber = 3,
    kInterfaceIdFieldNumber = 4,
    kPortNumFieldNumber = 5,
    kMtuFieldNumber = 6,
  };
  // required uint32 lid = 1;
  bool has_lid() const;
  void clear_lid();
  ::PROTOBUF_NAMESPACE_ID::uint32 lid() const;
  void set_lid(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // required uint32 qp_num = 2;
  bool has_qp_num() const;
  void clear_qp_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 qp_num() const;
  void set_qp_num(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // required uint64 subnet_prefix = 3;
  bool has_subnet_prefix() const;
  void clear_subnet_prefix();
  ::PROTOBUF_NAMESPACE_ID::uint64 subnet_prefix() const;
  void set_subnet_prefix(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // required uint64 interface_id = 4;
  bool has_interface_id() const;
  void clear_interface_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 interface_id() const;
  void set_interface_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // required uint32 port_num = 5;
  bool has_port_num() const;
  void clear_port_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 port_num() const;
  void set_port_num(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // required int32 mtu = 6;
  bool has_mtu() const;
  void clear_mtu();
  ::PROTOBUF_NAMESPACE_ID::int32 mtu() const;
  void set_mtu(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:oneflow.IBVerbsConnectionInfo)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 qp_num_;
  ::PROTOBUF_NAMESPACE_ID::uint64 subnet_prefix_;
  ::PROTOBUF_NAMESPACE_ID::uint64 interface_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 port_num_;
  ::PROTOBUF_NAMESPACE_ID::int32 mtu_;
  friend struct ::TableStruct_oneflow_2fcore_2fcomm_5fnetwork_2fibverbs_2fibverbs_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// IBVerbsConnectionInfo

// required uint32 lid = 1;
inline bool IBVerbsConnectionInfo::has_lid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IBVerbsConnectionInfo::clear_lid() {
  lid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 IBVerbsConnectionInfo::lid() const {
  // @@protoc_insertion_point(field_get:oneflow.IBVerbsConnectionInfo.lid)
  return lid_;
}
inline void IBVerbsConnectionInfo::set_lid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  lid_ = value;
  // @@protoc_insertion_point(field_set:oneflow.IBVerbsConnectionInfo.lid)
}

// required uint32 qp_num = 2;
inline bool IBVerbsConnectionInfo::has_qp_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IBVerbsConnectionInfo::clear_qp_num() {
  qp_num_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 IBVerbsConnectionInfo::qp_num() const {
  // @@protoc_insertion_point(field_get:oneflow.IBVerbsConnectionInfo.qp_num)
  return qp_num_;
}
inline void IBVerbsConnectionInfo::set_qp_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  qp_num_ = value;
  // @@protoc_insertion_point(field_set:oneflow.IBVerbsConnectionInfo.qp_num)
}

// required uint64 subnet_prefix = 3;
inline bool IBVerbsConnectionInfo::has_subnet_prefix() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IBVerbsConnectionInfo::clear_subnet_prefix() {
  subnet_prefix_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 IBVerbsConnectionInfo::subnet_prefix() const {
  // @@protoc_insertion_point(field_get:oneflow.IBVerbsConnectionInfo.subnet_prefix)
  return subnet_prefix_;
}
inline void IBVerbsConnectionInfo::set_subnet_prefix(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  subnet_prefix_ = value;
  // @@protoc_insertion_point(field_set:oneflow.IBVerbsConnectionInfo.subnet_prefix)
}

// required uint64 interface_id = 4;
inline bool IBVerbsConnectionInfo::has_interface_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IBVerbsConnectionInfo::clear_interface_id() {
  interface_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 IBVerbsConnectionInfo::interface_id() const {
  // @@protoc_insertion_point(field_get:oneflow.IBVerbsConnectionInfo.interface_id)
  return interface_id_;
}
inline void IBVerbsConnectionInfo::set_interface_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  interface_id_ = value;
  // @@protoc_insertion_point(field_set:oneflow.IBVerbsConnectionInfo.interface_id)
}

// required uint32 port_num = 5;
inline bool IBVerbsConnectionInfo::has_port_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IBVerbsConnectionInfo::clear_port_num() {
  port_num_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 IBVerbsConnectionInfo::port_num() const {
  // @@protoc_insertion_point(field_get:oneflow.IBVerbsConnectionInfo.port_num)
  return port_num_;
}
inline void IBVerbsConnectionInfo::set_port_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  port_num_ = value;
  // @@protoc_insertion_point(field_set:oneflow.IBVerbsConnectionInfo.port_num)
}

// required int32 mtu = 6;
inline bool IBVerbsConnectionInfo::has_mtu() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IBVerbsConnectionInfo::clear_mtu() {
  mtu_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IBVerbsConnectionInfo::mtu() const {
  // @@protoc_insertion_point(field_get:oneflow.IBVerbsConnectionInfo.mtu)
  return mtu_;
}
inline void IBVerbsConnectionInfo::set_mtu(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  mtu_ = value;
  // @@protoc_insertion_point(field_set:oneflow.IBVerbsConnectionInfo.mtu)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace oneflow

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fcomm_5fnetwork_2fibverbs_2fibverbs_2eproto
