// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/framework/user_op_attr.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "oneflow/core/common/shape.pb.h"
#include "oneflow/core/common/sequential.pb.h"
#include "oneflow/core/common/data_type.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[9]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto;
namespace oneflow {
class AttrDef;
class AttrDefDefaultTypeInternal;
extern AttrDefDefaultTypeInternal _AttrDef_default_instance_;
class AttrValue;
class AttrValueDefaultTypeInternal;
extern AttrValueDefaultTypeInternal _AttrValue_default_instance_;
class AttrValue_ListDataType;
class AttrValue_ListDataTypeDefaultTypeInternal;
extern AttrValue_ListDataTypeDefaultTypeInternal _AttrValue_ListDataType_default_instance_;
class AttrValue_ListFloat;
class AttrValue_ListFloatDefaultTypeInternal;
extern AttrValue_ListFloatDefaultTypeInternal _AttrValue_ListFloat_default_instance_;
class AttrValue_ListInt32;
class AttrValue_ListInt32DefaultTypeInternal;
extern AttrValue_ListInt32DefaultTypeInternal _AttrValue_ListInt32_default_instance_;
class AttrValue_ListInt64;
class AttrValue_ListInt64DefaultTypeInternal;
extern AttrValue_ListInt64DefaultTypeInternal _AttrValue_ListInt64_default_instance_;
class AttrValue_ListShape;
class AttrValue_ListShapeDefaultTypeInternal;
extern AttrValue_ListShapeDefaultTypeInternal _AttrValue_ListShape_default_instance_;
class AttrValue_ListStride;
class AttrValue_ListStrideDefaultTypeInternal;
extern AttrValue_ListStrideDefaultTypeInternal _AttrValue_ListStride_default_instance_;
class AttrValue_ListString;
class AttrValue_ListStringDefaultTypeInternal;
extern AttrValue_ListStringDefaultTypeInternal _AttrValue_ListString_default_instance_;
}  // namespace oneflow
PROTOBUF_NAMESPACE_OPEN
template<> ::oneflow::AttrDef* Arena::CreateMaybeMessage<::oneflow::AttrDef>(Arena*);
template<> ::oneflow::AttrValue* Arena::CreateMaybeMessage<::oneflow::AttrValue>(Arena*);
template<> ::oneflow::AttrValue_ListDataType* Arena::CreateMaybeMessage<::oneflow::AttrValue_ListDataType>(Arena*);
template<> ::oneflow::AttrValue_ListFloat* Arena::CreateMaybeMessage<::oneflow::AttrValue_ListFloat>(Arena*);
template<> ::oneflow::AttrValue_ListInt32* Arena::CreateMaybeMessage<::oneflow::AttrValue_ListInt32>(Arena*);
template<> ::oneflow::AttrValue_ListInt64* Arena::CreateMaybeMessage<::oneflow::AttrValue_ListInt64>(Arena*);
template<> ::oneflow::AttrValue_ListShape* Arena::CreateMaybeMessage<::oneflow::AttrValue_ListShape>(Arena*);
template<> ::oneflow::AttrValue_ListStride* Arena::CreateMaybeMessage<::oneflow::AttrValue_ListStride>(Arena*);
template<> ::oneflow::AttrValue_ListString* Arena::CreateMaybeMessage<::oneflow::AttrValue_ListString>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace oneflow {

enum AttrType : int {
  kAtInt32 = 1,
  kAtInt64 = 2,
  kAtBool = 3,
  kAtFloat = 4,
  kAtDouble = 5,
  kAtString = 6,
  kAtShape = 7,
  kAtDataType = 8,
  kAtListInt32 = 9,
  kAtListInt64 = 10,
  kAtListFloat = 11,
  kAtListDataType = 12,
  kAtListShape = 13,
  kAtListString = 14,
  kAtStride = 15,
  kAtListStride = 16
};
bool AttrType_IsValid(int value);
constexpr AttrType AttrType_MIN = kAtInt32;
constexpr AttrType AttrType_MAX = kAtListStride;
constexpr int AttrType_ARRAYSIZE = AttrType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AttrType_descriptor();
template<typename T>
inline const std::string& AttrType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, AttrType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function AttrType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    AttrType_descriptor(), enum_t_value);
}
inline bool AttrType_Parse(
    const std::string& name, AttrType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<AttrType>(
    AttrType_descriptor(), name, value);
}
// ===================================================================

class AttrValue_ListInt32 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.AttrValue.ListInt32) */ {
 public:
  AttrValue_ListInt32();
  virtual ~AttrValue_ListInt32();

  AttrValue_ListInt32(const AttrValue_ListInt32& from);
  AttrValue_ListInt32(AttrValue_ListInt32&& from) noexcept
    : AttrValue_ListInt32() {
    *this = ::std::move(from);
  }

  inline AttrValue_ListInt32& operator=(const AttrValue_ListInt32& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttrValue_ListInt32& operator=(AttrValue_ListInt32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AttrValue_ListInt32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AttrValue_ListInt32* internal_default_instance() {
    return reinterpret_cast<const AttrValue_ListInt32*>(
               &_AttrValue_ListInt32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AttrValue_ListInt32& a, AttrValue_ListInt32& b) {
    a.Swap(&b);
  }
  inline void Swap(AttrValue_ListInt32* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AttrValue_ListInt32* New() const final {
    return CreateMaybeMessage<AttrValue_ListInt32>(nullptr);
  }

  AttrValue_ListInt32* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AttrValue_ListInt32>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AttrValue_ListInt32& from);
  void MergeFrom(const AttrValue_ListInt32& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AttrValue_ListInt32* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.AttrValue.ListInt32";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValFieldNumber = 1,
  };
  // repeated int32 val = 1;
  int val_size() const;
  void clear_val();
  ::PROTOBUF_NAMESPACE_ID::int32 val(int index) const;
  void set_val(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_val(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      val() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_val();

  // @@protoc_insertion_point(class_scope:oneflow.AttrValue.ListInt32)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > val_;
  friend struct ::TableStruct_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto;
};
// -------------------------------------------------------------------

class AttrValue_ListInt64 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.AttrValue.ListInt64) */ {
 public:
  AttrValue_ListInt64();
  virtual ~AttrValue_ListInt64();

  AttrValue_ListInt64(const AttrValue_ListInt64& from);
  AttrValue_ListInt64(AttrValue_ListInt64&& from) noexcept
    : AttrValue_ListInt64() {
    *this = ::std::move(from);
  }

  inline AttrValue_ListInt64& operator=(const AttrValue_ListInt64& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttrValue_ListInt64& operator=(AttrValue_ListInt64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AttrValue_ListInt64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AttrValue_ListInt64* internal_default_instance() {
    return reinterpret_cast<const AttrValue_ListInt64*>(
               &_AttrValue_ListInt64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AttrValue_ListInt64& a, AttrValue_ListInt64& b) {
    a.Swap(&b);
  }
  inline void Swap(AttrValue_ListInt64* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AttrValue_ListInt64* New() const final {
    return CreateMaybeMessage<AttrValue_ListInt64>(nullptr);
  }

  AttrValue_ListInt64* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AttrValue_ListInt64>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AttrValue_ListInt64& from);
  void MergeFrom(const AttrValue_ListInt64& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AttrValue_ListInt64* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.AttrValue.ListInt64";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValFieldNumber = 1,
  };
  // repeated int64 val = 1;
  int val_size() const;
  void clear_val();
  ::PROTOBUF_NAMESPACE_ID::int64 val(int index) const;
  void set_val(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_val(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      val() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_val();

  // @@protoc_insertion_point(class_scope:oneflow.AttrValue.ListInt64)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > val_;
  friend struct ::TableStruct_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto;
};
// -------------------------------------------------------------------

class AttrValue_ListFloat :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.AttrValue.ListFloat) */ {
 public:
  AttrValue_ListFloat();
  virtual ~AttrValue_ListFloat();

  AttrValue_ListFloat(const AttrValue_ListFloat& from);
  AttrValue_ListFloat(AttrValue_ListFloat&& from) noexcept
    : AttrValue_ListFloat() {
    *this = ::std::move(from);
  }

  inline AttrValue_ListFloat& operator=(const AttrValue_ListFloat& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttrValue_ListFloat& operator=(AttrValue_ListFloat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AttrValue_ListFloat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AttrValue_ListFloat* internal_default_instance() {
    return reinterpret_cast<const AttrValue_ListFloat*>(
               &_AttrValue_ListFloat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(AttrValue_ListFloat& a, AttrValue_ListFloat& b) {
    a.Swap(&b);
  }
  inline void Swap(AttrValue_ListFloat* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AttrValue_ListFloat* New() const final {
    return CreateMaybeMessage<AttrValue_ListFloat>(nullptr);
  }

  AttrValue_ListFloat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AttrValue_ListFloat>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AttrValue_ListFloat& from);
  void MergeFrom(const AttrValue_ListFloat& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AttrValue_ListFloat* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.AttrValue.ListFloat";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValFieldNumber = 1,
  };
  // repeated float val = 1;
  int val_size() const;
  void clear_val();
  float val(int index) const;
  void set_val(int index, float value);
  void add_val(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      val() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_val();

  // @@protoc_insertion_point(class_scope:oneflow.AttrValue.ListFloat)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > val_;
  friend struct ::TableStruct_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto;
};
// -------------------------------------------------------------------

class AttrValue_ListDataType :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.AttrValue.ListDataType) */ {
 public:
  AttrValue_ListDataType();
  virtual ~AttrValue_ListDataType();

  AttrValue_ListDataType(const AttrValue_ListDataType& from);
  AttrValue_ListDataType(AttrValue_ListDataType&& from) noexcept
    : AttrValue_ListDataType() {
    *this = ::std::move(from);
  }

  inline AttrValue_ListDataType& operator=(const AttrValue_ListDataType& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttrValue_ListDataType& operator=(AttrValue_ListDataType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AttrValue_ListDataType& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AttrValue_ListDataType* internal_default_instance() {
    return reinterpret_cast<const AttrValue_ListDataType*>(
               &_AttrValue_ListDataType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(AttrValue_ListDataType& a, AttrValue_ListDataType& b) {
    a.Swap(&b);
  }
  inline void Swap(AttrValue_ListDataType* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AttrValue_ListDataType* New() const final {
    return CreateMaybeMessage<AttrValue_ListDataType>(nullptr);
  }

  AttrValue_ListDataType* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AttrValue_ListDataType>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AttrValue_ListDataType& from);
  void MergeFrom(const AttrValue_ListDataType& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AttrValue_ListDataType* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.AttrValue.ListDataType";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValFieldNumber = 1,
  };
  // repeated .oneflow.DataType val = 1;
  int val_size() const;
  void clear_val();
  ::oneflow::DataType val(int index) const;
  void set_val(int index, ::oneflow::DataType value);
  void add_val(::oneflow::DataType value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& val() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_val();

  // @@protoc_insertion_point(class_scope:oneflow.AttrValue.ListDataType)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> val_;
  friend struct ::TableStruct_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto;
};
// -------------------------------------------------------------------

class AttrValue_ListShape :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.AttrValue.ListShape) */ {
 public:
  AttrValue_ListShape();
  virtual ~AttrValue_ListShape();

  AttrValue_ListShape(const AttrValue_ListShape& from);
  AttrValue_ListShape(AttrValue_ListShape&& from) noexcept
    : AttrValue_ListShape() {
    *this = ::std::move(from);
  }

  inline AttrValue_ListShape& operator=(const AttrValue_ListShape& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttrValue_ListShape& operator=(AttrValue_ListShape&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AttrValue_ListShape& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AttrValue_ListShape* internal_default_instance() {
    return reinterpret_cast<const AttrValue_ListShape*>(
               &_AttrValue_ListShape_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(AttrValue_ListShape& a, AttrValue_ListShape& b) {
    a.Swap(&b);
  }
  inline void Swap(AttrValue_ListShape* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AttrValue_ListShape* New() const final {
    return CreateMaybeMessage<AttrValue_ListShape>(nullptr);
  }

  AttrValue_ListShape* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AttrValue_ListShape>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AttrValue_ListShape& from);
  void MergeFrom(const AttrValue_ListShape& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AttrValue_ListShape* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.AttrValue.ListShape";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValFieldNumber = 1,
  };
  // repeated .oneflow.ShapeProto val = 1;
  int val_size() const;
  void clear_val();
  ::oneflow::ShapeProto* mutable_val(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::ShapeProto >*
      mutable_val();
  const ::oneflow::ShapeProto& val(int index) const;
  ::oneflow::ShapeProto* add_val();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::ShapeProto >&
      val() const;

  // @@protoc_insertion_point(class_scope:oneflow.AttrValue.ListShape)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::ShapeProto > val_;
  friend struct ::TableStruct_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto;
};
// -------------------------------------------------------------------

class AttrValue_ListStride :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.AttrValue.ListStride) */ {
 public:
  AttrValue_ListStride();
  virtual ~AttrValue_ListStride();

  AttrValue_ListStride(const AttrValue_ListStride& from);
  AttrValue_ListStride(AttrValue_ListStride&& from) noexcept
    : AttrValue_ListStride() {
    *this = ::std::move(from);
  }

  inline AttrValue_ListStride& operator=(const AttrValue_ListStride& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttrValue_ListStride& operator=(AttrValue_ListStride&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AttrValue_ListStride& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AttrValue_ListStride* internal_default_instance() {
    return reinterpret_cast<const AttrValue_ListStride*>(
               &_AttrValue_ListStride_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(AttrValue_ListStride& a, AttrValue_ListStride& b) {
    a.Swap(&b);
  }
  inline void Swap(AttrValue_ListStride* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AttrValue_ListStride* New() const final {
    return CreateMaybeMessage<AttrValue_ListStride>(nullptr);
  }

  AttrValue_ListStride* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AttrValue_ListStride>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AttrValue_ListStride& from);
  void MergeFrom(const AttrValue_ListStride& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AttrValue_ListStride* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.AttrValue.ListStride";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValFieldNumber = 1,
  };
  // repeated .oneflow.Int64ListProto val = 1;
  int val_size() const;
  void clear_val();
  ::oneflow::Int64ListProto* mutable_val(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::Int64ListProto >*
      mutable_val();
  const ::oneflow::Int64ListProto& val(int index) const;
  ::oneflow::Int64ListProto* add_val();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::Int64ListProto >&
      val() const;

  // @@protoc_insertion_point(class_scope:oneflow.AttrValue.ListStride)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::Int64ListProto > val_;
  friend struct ::TableStruct_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto;
};
// -------------------------------------------------------------------

class AttrValue_ListString :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.AttrValue.ListString) */ {
 public:
  AttrValue_ListString();
  virtual ~AttrValue_ListString();

  AttrValue_ListString(const AttrValue_ListString& from);
  AttrValue_ListString(AttrValue_ListString&& from) noexcept
    : AttrValue_ListString() {
    *this = ::std::move(from);
  }

  inline AttrValue_ListString& operator=(const AttrValue_ListString& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttrValue_ListString& operator=(AttrValue_ListString&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AttrValue_ListString& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AttrValue_ListString* internal_default_instance() {
    return reinterpret_cast<const AttrValue_ListString*>(
               &_AttrValue_ListString_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(AttrValue_ListString& a, AttrValue_ListString& b) {
    a.Swap(&b);
  }
  inline void Swap(AttrValue_ListString* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AttrValue_ListString* New() const final {
    return CreateMaybeMessage<AttrValue_ListString>(nullptr);
  }

  AttrValue_ListString* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AttrValue_ListString>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AttrValue_ListString& from);
  void MergeFrom(const AttrValue_ListString& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AttrValue_ListString* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.AttrValue.ListString";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValFieldNumber = 1,
  };
  // repeated string val = 1;
  int val_size() const;
  void clear_val();
  const std::string& val(int index) const;
  std::string* mutable_val(int index);
  void set_val(int index, const std::string& value);
  void set_val(int index, std::string&& value);
  void set_val(int index, const char* value);
  void set_val(int index, const char* value, size_t size);
  std::string* add_val();
  void add_val(const std::string& value);
  void add_val(std::string&& value);
  void add_val(const char* value);
  void add_val(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& val() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_val();

  // @@protoc_insertion_point(class_scope:oneflow.AttrValue.ListString)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> val_;
  friend struct ::TableStruct_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto;
};
// -------------------------------------------------------------------

class AttrValue :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.AttrValue) */ {
 public:
  AttrValue();
  virtual ~AttrValue();

  AttrValue(const AttrValue& from);
  AttrValue(AttrValue&& from) noexcept
    : AttrValue() {
    *this = ::std::move(from);
  }

  inline AttrValue& operator=(const AttrValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttrValue& operator=(AttrValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AttrValue& default_instance();

  enum ValueCase {
    kAtInt32 = 1,
    kAtInt64 = 2,
    kAtBool = 3,
    kAtFloat = 4,
    kAtDouble = 5,
    kAtString = 6,
    kAtShape = 7,
    kAtDataType = 8,
    kAtListInt32 = 9,
    kAtListInt64 = 10,
    kAtListFloat = 11,
    kAtListDataType = 12,
    kAtListShape = 13,
    kAtListString = 14,
    kAtStride = 15,
    kAtListStride = 16,
    VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AttrValue* internal_default_instance() {
    return reinterpret_cast<const AttrValue*>(
               &_AttrValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(AttrValue& a, AttrValue& b) {
    a.Swap(&b);
  }
  inline void Swap(AttrValue* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AttrValue* New() const final {
    return CreateMaybeMessage<AttrValue>(nullptr);
  }

  AttrValue* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AttrValue>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AttrValue& from);
  void MergeFrom(const AttrValue& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AttrValue* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.AttrValue";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef AttrValue_ListInt32 ListInt32;
  typedef AttrValue_ListInt64 ListInt64;
  typedef AttrValue_ListFloat ListFloat;
  typedef AttrValue_ListDataType ListDataType;
  typedef AttrValue_ListShape ListShape;
  typedef AttrValue_ListStride ListStride;
  typedef AttrValue_ListString ListString;

  // accessors -------------------------------------------------------

  enum : int {
    kAtInt32FieldNumber = 1,
    kAtInt64FieldNumber = 2,
    kAtBoolFieldNumber = 3,
    kAtFloatFieldNumber = 4,
    kAtDoubleFieldNumber = 5,
    kAtStringFieldNumber = 6,
    kAtShapeFieldNumber = 7,
    kAtDataTypeFieldNumber = 8,
    kAtListInt32FieldNumber = 9,
    kAtListInt64FieldNumber = 10,
    kAtListFloatFieldNumber = 11,
    kAtListDataTypeFieldNumber = 12,
    kAtListShapeFieldNumber = 13,
    kAtListStringFieldNumber = 14,
    kAtStrideFieldNumber = 15,
    kAtListStrideFieldNumber = 16,
  };
  // optional int32 at_int32 = 1;
  bool has_at_int32() const;
  void clear_at_int32();
  ::PROTOBUF_NAMESPACE_ID::int32 at_int32() const;
  void set_at_int32(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int64 at_int64 = 2;
  bool has_at_int64() const;
  void clear_at_int64();
  ::PROTOBUF_NAMESPACE_ID::int64 at_int64() const;
  void set_at_int64(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional bool at_bool = 3;
  bool has_at_bool() const;
  void clear_at_bool();
  bool at_bool() const;
  void set_at_bool(bool value);

  // optional float at_float = 4;
  bool has_at_float() const;
  void clear_at_float();
  float at_float() const;
  void set_at_float(float value);

  // optional double at_double = 5;
  bool has_at_double() const;
  void clear_at_double();
  double at_double() const;
  void set_at_double(double value);

  // optional string at_string = 6;
  bool has_at_string() const;
  void clear_at_string();
  const std::string& at_string() const;
  void set_at_string(const std::string& value);
  void set_at_string(std::string&& value);
  void set_at_string(const char* value);
  void set_at_string(const char* value, size_t size);
  std::string* mutable_at_string();
  std::string* release_at_string();
  void set_allocated_at_string(std::string* at_string);

  // optional .oneflow.ShapeProto at_shape = 7;
  bool has_at_shape() const;
  void clear_at_shape();
  const ::oneflow::ShapeProto& at_shape() const;
  ::oneflow::ShapeProto* release_at_shape();
  ::oneflow::ShapeProto* mutable_at_shape();
  void set_allocated_at_shape(::oneflow::ShapeProto* at_shape);

  // optional .oneflow.DataType at_data_type = 8;
  bool has_at_data_type() const;
  void clear_at_data_type();
  ::oneflow::DataType at_data_type() const;
  void set_at_data_type(::oneflow::DataType value);

  // optional .oneflow.AttrValue.ListInt32 at_list_int32 = 9;
  bool has_at_list_int32() const;
  void clear_at_list_int32();
  const ::oneflow::AttrValue_ListInt32& at_list_int32() const;
  ::oneflow::AttrValue_ListInt32* release_at_list_int32();
  ::oneflow::AttrValue_ListInt32* mutable_at_list_int32();
  void set_allocated_at_list_int32(::oneflow::AttrValue_ListInt32* at_list_int32);

  // optional .oneflow.AttrValue.ListInt64 at_list_int64 = 10;
  bool has_at_list_int64() const;
  void clear_at_list_int64();
  const ::oneflow::AttrValue_ListInt64& at_list_int64() const;
  ::oneflow::AttrValue_ListInt64* release_at_list_int64();
  ::oneflow::AttrValue_ListInt64* mutable_at_list_int64();
  void set_allocated_at_list_int64(::oneflow::AttrValue_ListInt64* at_list_int64);

  // optional .oneflow.AttrValue.ListFloat at_list_float = 11;
  bool has_at_list_float() const;
  void clear_at_list_float();
  const ::oneflow::AttrValue_ListFloat& at_list_float() const;
  ::oneflow::AttrValue_ListFloat* release_at_list_float();
  ::oneflow::AttrValue_ListFloat* mutable_at_list_float();
  void set_allocated_at_list_float(::oneflow::AttrValue_ListFloat* at_list_float);

  // optional .oneflow.AttrValue.ListDataType at_list_data_type = 12;
  bool has_at_list_data_type() const;
  void clear_at_list_data_type();
  const ::oneflow::AttrValue_ListDataType& at_list_data_type() const;
  ::oneflow::AttrValue_ListDataType* release_at_list_data_type();
  ::oneflow::AttrValue_ListDataType* mutable_at_list_data_type();
  void set_allocated_at_list_data_type(::oneflow::AttrValue_ListDataType* at_list_data_type);

  // optional .oneflow.AttrValue.ListShape at_list_shape = 13;
  bool has_at_list_shape() const;
  void clear_at_list_shape();
  const ::oneflow::AttrValue_ListShape& at_list_shape() const;
  ::oneflow::AttrValue_ListShape* release_at_list_shape();
  ::oneflow::AttrValue_ListShape* mutable_at_list_shape();
  void set_allocated_at_list_shape(::oneflow::AttrValue_ListShape* at_list_shape);

  // optional .oneflow.AttrValue.ListString at_list_string = 14;
  bool has_at_list_string() const;
  void clear_at_list_string();
  const ::oneflow::AttrValue_ListString& at_list_string() const;
  ::oneflow::AttrValue_ListString* release_at_list_string();
  ::oneflow::AttrValue_ListString* mutable_at_list_string();
  void set_allocated_at_list_string(::oneflow::AttrValue_ListString* at_list_string);

  // optional .oneflow.Int64ListProto at_stride = 15;
  bool has_at_stride() const;
  void clear_at_stride();
  const ::oneflow::Int64ListProto& at_stride() const;
  ::oneflow::Int64ListProto* release_at_stride();
  ::oneflow::Int64ListProto* mutable_at_stride();
  void set_allocated_at_stride(::oneflow::Int64ListProto* at_stride);

  // optional .oneflow.AttrValue.ListStride at_list_stride = 16;
  bool has_at_list_stride() const;
  void clear_at_list_stride();
  const ::oneflow::AttrValue_ListStride& at_list_stride() const;
  ::oneflow::AttrValue_ListStride* release_at_list_stride();
  ::oneflow::AttrValue_ListStride* mutable_at_list_stride();
  void set_allocated_at_list_stride(::oneflow::AttrValue_ListStride* at_list_stride);

  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:oneflow.AttrValue)
 private:
  class _Internal;
  void set_has_at_int32();
  void set_has_at_int64();
  void set_has_at_bool();
  void set_has_at_float();
  void set_has_at_double();
  void set_has_at_string();
  void set_has_at_shape();
  void set_has_at_data_type();
  void set_has_at_list_int32();
  void set_has_at_list_int64();
  void set_has_at_list_float();
  void set_has_at_list_data_type();
  void set_has_at_list_shape();
  void set_has_at_list_string();
  void set_has_at_stride();
  void set_has_at_list_stride();

  inline bool has_value() const;
  inline void clear_has_value();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  union ValueUnion {
    ValueUnion() {}
    ::PROTOBUF_NAMESPACE_ID::int32 at_int32_;
    ::PROTOBUF_NAMESPACE_ID::int64 at_int64_;
    bool at_bool_;
    float at_float_;
    double at_double_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr at_string_;
    ::oneflow::ShapeProto* at_shape_;
    int at_data_type_;
    ::oneflow::AttrValue_ListInt32* at_list_int32_;
    ::oneflow::AttrValue_ListInt64* at_list_int64_;
    ::oneflow::AttrValue_ListFloat* at_list_float_;
    ::oneflow::AttrValue_ListDataType* at_list_data_type_;
    ::oneflow::AttrValue_ListShape* at_list_shape_;
    ::oneflow::AttrValue_ListString* at_list_string_;
    ::oneflow::Int64ListProto* at_stride_;
    ::oneflow::AttrValue_ListStride* at_list_stride_;
  } value_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto;
};
// -------------------------------------------------------------------

class AttrDef :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.AttrDef) */ {
 public:
  AttrDef();
  virtual ~AttrDef();

  AttrDef(const AttrDef& from);
  AttrDef(AttrDef&& from) noexcept
    : AttrDef() {
    *this = ::std::move(from);
  }

  inline AttrDef& operator=(const AttrDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttrDef& operator=(AttrDef&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AttrDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AttrDef* internal_default_instance() {
    return reinterpret_cast<const AttrDef*>(
               &_AttrDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(AttrDef& a, AttrDef& b) {
    a.Swap(&b);
  }
  inline void Swap(AttrDef* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AttrDef* New() const final {
    return CreateMaybeMessage<AttrDef>(nullptr);
  }

  AttrDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AttrDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AttrDef& from);
  void MergeFrom(const AttrDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AttrDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.AttrDef";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kDescriptionFieldNumber = 2,
    kDefaultValFieldNumber = 3,
  };
  // required string name = 1;
  bool has_name() const;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);

  // required string description = 2;
  bool has_description() const;
  void clear_description();
  const std::string& description() const;
  void set_description(const std::string& value);
  void set_description(std::string&& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  std::string* mutable_description();
  std::string* release_description();
  void set_allocated_description(std::string* description);

  // required .oneflow.AttrValue default_val = 3;
  bool has_default_val() const;
  void clear_default_val();
  const ::oneflow::AttrValue& default_val() const;
  ::oneflow::AttrValue* release_default_val();
  ::oneflow::AttrValue* mutable_default_val();
  void set_allocated_default_val(::oneflow::AttrValue* default_val);

  // @@protoc_insertion_point(class_scope:oneflow.AttrDef)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
  ::oneflow::AttrValue* default_val_;
  friend struct ::TableStruct_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AttrValue_ListInt32

// repeated int32 val = 1;
inline int AttrValue_ListInt32::val_size() const {
  return val_.size();
}
inline void AttrValue_ListInt32::clear_val() {
  val_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AttrValue_ListInt32::val(int index) const {
  // @@protoc_insertion_point(field_get:oneflow.AttrValue.ListInt32.val)
  return val_.Get(index);
}
inline void AttrValue_ListInt32::set_val(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  val_.Set(index, value);
  // @@protoc_insertion_point(field_set:oneflow.AttrValue.ListInt32.val)
}
inline void AttrValue_ListInt32::add_val(::PROTOBUF_NAMESPACE_ID::int32 value) {
  val_.Add(value);
  // @@protoc_insertion_point(field_add:oneflow.AttrValue.ListInt32.val)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AttrValue_ListInt32::val() const {
  // @@protoc_insertion_point(field_list:oneflow.AttrValue.ListInt32.val)
  return val_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AttrValue_ListInt32::mutable_val() {
  // @@protoc_insertion_point(field_mutable_list:oneflow.AttrValue.ListInt32.val)
  return &val_;
}

// -------------------------------------------------------------------

// AttrValue_ListInt64

// repeated int64 val = 1;
inline int AttrValue_ListInt64::val_size() const {
  return val_.size();
}
inline void AttrValue_ListInt64::clear_val() {
  val_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AttrValue_ListInt64::val(int index) const {
  // @@protoc_insertion_point(field_get:oneflow.AttrValue.ListInt64.val)
  return val_.Get(index);
}
inline void AttrValue_ListInt64::set_val(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  val_.Set(index, value);
  // @@protoc_insertion_point(field_set:oneflow.AttrValue.ListInt64.val)
}
inline void AttrValue_ListInt64::add_val(::PROTOBUF_NAMESPACE_ID::int64 value) {
  val_.Add(value);
  // @@protoc_insertion_point(field_add:oneflow.AttrValue.ListInt64.val)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
AttrValue_ListInt64::val() const {
  // @@protoc_insertion_point(field_list:oneflow.AttrValue.ListInt64.val)
  return val_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
AttrValue_ListInt64::mutable_val() {
  // @@protoc_insertion_point(field_mutable_list:oneflow.AttrValue.ListInt64.val)
  return &val_;
}

// -------------------------------------------------------------------

// AttrValue_ListFloat

// repeated float val = 1;
inline int AttrValue_ListFloat::val_size() const {
  return val_.size();
}
inline void AttrValue_ListFloat::clear_val() {
  val_.Clear();
}
inline float AttrValue_ListFloat::val(int index) const {
  // @@protoc_insertion_point(field_get:oneflow.AttrValue.ListFloat.val)
  return val_.Get(index);
}
inline void AttrValue_ListFloat::set_val(int index, float value) {
  val_.Set(index, value);
  // @@protoc_insertion_point(field_set:oneflow.AttrValue.ListFloat.val)
}
inline void AttrValue_ListFloat::add_val(float value) {
  val_.Add(value);
  // @@protoc_insertion_point(field_add:oneflow.AttrValue.ListFloat.val)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
AttrValue_ListFloat::val() const {
  // @@protoc_insertion_point(field_list:oneflow.AttrValue.ListFloat.val)
  return val_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
AttrValue_ListFloat::mutable_val() {
  // @@protoc_insertion_point(field_mutable_list:oneflow.AttrValue.ListFloat.val)
  return &val_;
}

// -------------------------------------------------------------------

// AttrValue_ListDataType

// repeated .oneflow.DataType val = 1;
inline int AttrValue_ListDataType::val_size() const {
  return val_.size();
}
inline void AttrValue_ListDataType::clear_val() {
  val_.Clear();
}
inline ::oneflow::DataType AttrValue_ListDataType::val(int index) const {
  // @@protoc_insertion_point(field_get:oneflow.AttrValue.ListDataType.val)
  return static_cast< ::oneflow::DataType >(val_.Get(index));
}
inline void AttrValue_ListDataType::set_val(int index, ::oneflow::DataType value) {
  assert(::oneflow::DataType_IsValid(value));
  val_.Set(index, value);
  // @@protoc_insertion_point(field_set:oneflow.AttrValue.ListDataType.val)
}
inline void AttrValue_ListDataType::add_val(::oneflow::DataType value) {
  assert(::oneflow::DataType_IsValid(value));
  val_.Add(value);
  // @@protoc_insertion_point(field_add:oneflow.AttrValue.ListDataType.val)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
AttrValue_ListDataType::val() const {
  // @@protoc_insertion_point(field_list:oneflow.AttrValue.ListDataType.val)
  return val_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
AttrValue_ListDataType::mutable_val() {
  // @@protoc_insertion_point(field_mutable_list:oneflow.AttrValue.ListDataType.val)
  return &val_;
}

// -------------------------------------------------------------------

// AttrValue_ListShape

// repeated .oneflow.ShapeProto val = 1;
inline int AttrValue_ListShape::val_size() const {
  return val_.size();
}
inline ::oneflow::ShapeProto* AttrValue_ListShape::mutable_val(int index) {
  // @@protoc_insertion_point(field_mutable:oneflow.AttrValue.ListShape.val)
  return val_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::ShapeProto >*
AttrValue_ListShape::mutable_val() {
  // @@protoc_insertion_point(field_mutable_list:oneflow.AttrValue.ListShape.val)
  return &val_;
}
inline const ::oneflow::ShapeProto& AttrValue_ListShape::val(int index) const {
  // @@protoc_insertion_point(field_get:oneflow.AttrValue.ListShape.val)
  return val_.Get(index);
}
inline ::oneflow::ShapeProto* AttrValue_ListShape::add_val() {
  // @@protoc_insertion_point(field_add:oneflow.AttrValue.ListShape.val)
  return val_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::ShapeProto >&
AttrValue_ListShape::val() const {
  // @@protoc_insertion_point(field_list:oneflow.AttrValue.ListShape.val)
  return val_;
}

// -------------------------------------------------------------------

// AttrValue_ListStride

// repeated .oneflow.Int64ListProto val = 1;
inline int AttrValue_ListStride::val_size() const {
  return val_.size();
}
inline ::oneflow::Int64ListProto* AttrValue_ListStride::mutable_val(int index) {
  // @@protoc_insertion_point(field_mutable:oneflow.AttrValue.ListStride.val)
  return val_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::Int64ListProto >*
AttrValue_ListStride::mutable_val() {
  // @@protoc_insertion_point(field_mutable_list:oneflow.AttrValue.ListStride.val)
  return &val_;
}
inline const ::oneflow::Int64ListProto& AttrValue_ListStride::val(int index) const {
  // @@protoc_insertion_point(field_get:oneflow.AttrValue.ListStride.val)
  return val_.Get(index);
}
inline ::oneflow::Int64ListProto* AttrValue_ListStride::add_val() {
  // @@protoc_insertion_point(field_add:oneflow.AttrValue.ListStride.val)
  return val_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::Int64ListProto >&
AttrValue_ListStride::val() const {
  // @@protoc_insertion_point(field_list:oneflow.AttrValue.ListStride.val)
  return val_;
}

// -------------------------------------------------------------------

// AttrValue_ListString

// repeated string val = 1;
inline int AttrValue_ListString::val_size() const {
  return val_.size();
}
inline void AttrValue_ListString::clear_val() {
  val_.Clear();
}
inline const std::string& AttrValue_ListString::val(int index) const {
  // @@protoc_insertion_point(field_get:oneflow.AttrValue.ListString.val)
  return val_.Get(index);
}
inline std::string* AttrValue_ListString::mutable_val(int index) {
  // @@protoc_insertion_point(field_mutable:oneflow.AttrValue.ListString.val)
  return val_.Mutable(index);
}
inline void AttrValue_ListString::set_val(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:oneflow.AttrValue.ListString.val)
  val_.Mutable(index)->assign(value);
}
inline void AttrValue_ListString::set_val(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:oneflow.AttrValue.ListString.val)
  val_.Mutable(index)->assign(std::move(value));
}
inline void AttrValue_ListString::set_val(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  val_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:oneflow.AttrValue.ListString.val)
}
inline void AttrValue_ListString::set_val(int index, const char* value, size_t size) {
  val_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:oneflow.AttrValue.ListString.val)
}
inline std::string* AttrValue_ListString::add_val() {
  // @@protoc_insertion_point(field_add_mutable:oneflow.AttrValue.ListString.val)
  return val_.Add();
}
inline void AttrValue_ListString::add_val(const std::string& value) {
  val_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:oneflow.AttrValue.ListString.val)
}
inline void AttrValue_ListString::add_val(std::string&& value) {
  val_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:oneflow.AttrValue.ListString.val)
}
inline void AttrValue_ListString::add_val(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  val_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:oneflow.AttrValue.ListString.val)
}
inline void AttrValue_ListString::add_val(const char* value, size_t size) {
  val_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:oneflow.AttrValue.ListString.val)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
AttrValue_ListString::val() const {
  // @@protoc_insertion_point(field_list:oneflow.AttrValue.ListString.val)
  return val_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
AttrValue_ListString::mutable_val() {
  // @@protoc_insertion_point(field_mutable_list:oneflow.AttrValue.ListString.val)
  return &val_;
}

// -------------------------------------------------------------------

// AttrValue

// optional int32 at_int32 = 1;
inline bool AttrValue::has_at_int32() const {
  return value_case() == kAtInt32;
}
inline void AttrValue::set_has_at_int32() {
  _oneof_case_[0] = kAtInt32;
}
inline void AttrValue::clear_at_int32() {
  if (has_at_int32()) {
    value_.at_int32_ = 0;
    clear_has_value();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AttrValue::at_int32() const {
  // @@protoc_insertion_point(field_get:oneflow.AttrValue.at_int32)
  if (has_at_int32()) {
    return value_.at_int32_;
  }
  return 0;
}
inline void AttrValue::set_at_int32(::PROTOBUF_NAMESPACE_ID::int32 value) {
  if (!has_at_int32()) {
    clear_value();
    set_has_at_int32();
  }
  value_.at_int32_ = value;
  // @@protoc_insertion_point(field_set:oneflow.AttrValue.at_int32)
}

// optional int64 at_int64 = 2;
inline bool AttrValue::has_at_int64() const {
  return value_case() == kAtInt64;
}
inline void AttrValue::set_has_at_int64() {
  _oneof_case_[0] = kAtInt64;
}
inline void AttrValue::clear_at_int64() {
  if (has_at_int64()) {
    value_.at_int64_ = PROTOBUF_LONGLONG(0);
    clear_has_value();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AttrValue::at_int64() const {
  // @@protoc_insertion_point(field_get:oneflow.AttrValue.at_int64)
  if (has_at_int64()) {
    return value_.at_int64_;
  }
  return PROTOBUF_LONGLONG(0);
}
inline void AttrValue::set_at_int64(::PROTOBUF_NAMESPACE_ID::int64 value) {
  if (!has_at_int64()) {
    clear_value();
    set_has_at_int64();
  }
  value_.at_int64_ = value;
  // @@protoc_insertion_point(field_set:oneflow.AttrValue.at_int64)
}

// optional bool at_bool = 3;
inline bool AttrValue::has_at_bool() const {
  return value_case() == kAtBool;
}
inline void AttrValue::set_has_at_bool() {
  _oneof_case_[0] = kAtBool;
}
inline void AttrValue::clear_at_bool() {
  if (has_at_bool()) {
    value_.at_bool_ = false;
    clear_has_value();
  }
}
inline bool AttrValue::at_bool() const {
  // @@protoc_insertion_point(field_get:oneflow.AttrValue.at_bool)
  if (has_at_bool()) {
    return value_.at_bool_;
  }
  return false;
}
inline void AttrValue::set_at_bool(bool value) {
  if (!has_at_bool()) {
    clear_value();
    set_has_at_bool();
  }
  value_.at_bool_ = value;
  // @@protoc_insertion_point(field_set:oneflow.AttrValue.at_bool)
}

// optional float at_float = 4;
inline bool AttrValue::has_at_float() const {
  return value_case() == kAtFloat;
}
inline void AttrValue::set_has_at_float() {
  _oneof_case_[0] = kAtFloat;
}
inline void AttrValue::clear_at_float() {
  if (has_at_float()) {
    value_.at_float_ = 0;
    clear_has_value();
  }
}
inline float AttrValue::at_float() const {
  // @@protoc_insertion_point(field_get:oneflow.AttrValue.at_float)
  if (has_at_float()) {
    return value_.at_float_;
  }
  return 0;
}
inline void AttrValue::set_at_float(float value) {
  if (!has_at_float()) {
    clear_value();
    set_has_at_float();
  }
  value_.at_float_ = value;
  // @@protoc_insertion_point(field_set:oneflow.AttrValue.at_float)
}

// optional double at_double = 5;
inline bool AttrValue::has_at_double() const {
  return value_case() == kAtDouble;
}
inline void AttrValue::set_has_at_double() {
  _oneof_case_[0] = kAtDouble;
}
inline void AttrValue::clear_at_double() {
  if (has_at_double()) {
    value_.at_double_ = 0;
    clear_has_value();
  }
}
inline double AttrValue::at_double() const {
  // @@protoc_insertion_point(field_get:oneflow.AttrValue.at_double)
  if (has_at_double()) {
    return value_.at_double_;
  }
  return 0;
}
inline void AttrValue::set_at_double(double value) {
  if (!has_at_double()) {
    clear_value();
    set_has_at_double();
  }
  value_.at_double_ = value;
  // @@protoc_insertion_point(field_set:oneflow.AttrValue.at_double)
}

// optional string at_string = 6;
inline bool AttrValue::has_at_string() const {
  return value_case() == kAtString;
}
inline void AttrValue::set_has_at_string() {
  _oneof_case_[0] = kAtString;
}
inline void AttrValue::clear_at_string() {
  if (has_at_string()) {
    value_.at_string_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
inline const std::string& AttrValue::at_string() const {
  // @@protoc_insertion_point(field_get:oneflow.AttrValue.at_string)
  if (has_at_string()) {
    return value_.at_string_.GetNoArena();
  }
  return *&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void AttrValue::set_at_string(const std::string& value) {
  // @@protoc_insertion_point(field_set:oneflow.AttrValue.at_string)
  if (!has_at_string()) {
    clear_value();
    set_has_at_string();
    value_.at_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  value_.at_string_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oneflow.AttrValue.at_string)
}
inline void AttrValue::set_at_string(std::string&& value) {
  // @@protoc_insertion_point(field_set:oneflow.AttrValue.at_string)
  if (!has_at_string()) {
    clear_value();
    set_has_at_string();
    value_.at_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  value_.at_string_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oneflow.AttrValue.at_string)
}
inline void AttrValue::set_at_string(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!has_at_string()) {
    clear_value();
    set_has_at_string();
    value_.at_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  value_.at_string_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oneflow.AttrValue.at_string)
}
inline void AttrValue::set_at_string(const char* value, size_t size) {
  if (!has_at_string()) {
    clear_value();
    set_has_at_string();
    value_.at_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  value_.at_string_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oneflow.AttrValue.at_string)
}
inline std::string* AttrValue::mutable_at_string() {
  if (!has_at_string()) {
    clear_value();
    set_has_at_string();
    value_.at_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:oneflow.AttrValue.at_string)
  return value_.at_string_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AttrValue::release_at_string() {
  // @@protoc_insertion_point(field_release:oneflow.AttrValue.at_string)
  if (has_at_string()) {
    clear_has_value();
    return value_.at_string_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  } else {
    return nullptr;
  }
}
inline void AttrValue::set_allocated_at_string(std::string* at_string) {
  if (has_value()) {
    clear_value();
  }
  if (at_string != nullptr) {
    set_has_at_string();
    value_.at_string_.UnsafeSetDefault(at_string);
  }
  // @@protoc_insertion_point(field_set_allocated:oneflow.AttrValue.at_string)
}

// optional .oneflow.ShapeProto at_shape = 7;
inline bool AttrValue::has_at_shape() const {
  return value_case() == kAtShape;
}
inline void AttrValue::set_has_at_shape() {
  _oneof_case_[0] = kAtShape;
}
inline ::oneflow::ShapeProto* AttrValue::release_at_shape() {
  // @@protoc_insertion_point(field_release:oneflow.AttrValue.at_shape)
  if (has_at_shape()) {
    clear_has_value();
      ::oneflow::ShapeProto* temp = value_.at_shape_;
    value_.at_shape_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::oneflow::ShapeProto& AttrValue::at_shape() const {
  // @@protoc_insertion_point(field_get:oneflow.AttrValue.at_shape)
  return has_at_shape()
      ? *value_.at_shape_
      : *reinterpret_cast< ::oneflow::ShapeProto*>(&::oneflow::_ShapeProto_default_instance_);
}
inline ::oneflow::ShapeProto* AttrValue::mutable_at_shape() {
  if (!has_at_shape()) {
    clear_value();
    set_has_at_shape();
    value_.at_shape_ = CreateMaybeMessage< ::oneflow::ShapeProto >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:oneflow.AttrValue.at_shape)
  return value_.at_shape_;
}

// optional .oneflow.DataType at_data_type = 8;
inline bool AttrValue::has_at_data_type() const {
  return value_case() == kAtDataType;
}
inline void AttrValue::set_has_at_data_type() {
  _oneof_case_[0] = kAtDataType;
}
inline void AttrValue::clear_at_data_type() {
  if (has_at_data_type()) {
    value_.at_data_type_ = 0;
    clear_has_value();
  }
}
inline ::oneflow::DataType AttrValue::at_data_type() const {
  // @@protoc_insertion_point(field_get:oneflow.AttrValue.at_data_type)
  if (has_at_data_type()) {
    return static_cast< ::oneflow::DataType >(value_.at_data_type_);
  }
  return static_cast< ::oneflow::DataType >(0);
}
inline void AttrValue::set_at_data_type(::oneflow::DataType value) {
  assert(::oneflow::DataType_IsValid(value));
  if (!has_at_data_type()) {
    clear_value();
    set_has_at_data_type();
  }
  value_.at_data_type_ = value;
  // @@protoc_insertion_point(field_set:oneflow.AttrValue.at_data_type)
}

// optional .oneflow.AttrValue.ListInt32 at_list_int32 = 9;
inline bool AttrValue::has_at_list_int32() const {
  return value_case() == kAtListInt32;
}
inline void AttrValue::set_has_at_list_int32() {
  _oneof_case_[0] = kAtListInt32;
}
inline void AttrValue::clear_at_list_int32() {
  if (has_at_list_int32()) {
    delete value_.at_list_int32_;
    clear_has_value();
  }
}
inline ::oneflow::AttrValue_ListInt32* AttrValue::release_at_list_int32() {
  // @@protoc_insertion_point(field_release:oneflow.AttrValue.at_list_int32)
  if (has_at_list_int32()) {
    clear_has_value();
      ::oneflow::AttrValue_ListInt32* temp = value_.at_list_int32_;
    value_.at_list_int32_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::oneflow::AttrValue_ListInt32& AttrValue::at_list_int32() const {
  // @@protoc_insertion_point(field_get:oneflow.AttrValue.at_list_int32)
  return has_at_list_int32()
      ? *value_.at_list_int32_
      : *reinterpret_cast< ::oneflow::AttrValue_ListInt32*>(&::oneflow::_AttrValue_ListInt32_default_instance_);
}
inline ::oneflow::AttrValue_ListInt32* AttrValue::mutable_at_list_int32() {
  if (!has_at_list_int32()) {
    clear_value();
    set_has_at_list_int32();
    value_.at_list_int32_ = CreateMaybeMessage< ::oneflow::AttrValue_ListInt32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:oneflow.AttrValue.at_list_int32)
  return value_.at_list_int32_;
}

// optional .oneflow.AttrValue.ListInt64 at_list_int64 = 10;
inline bool AttrValue::has_at_list_int64() const {
  return value_case() == kAtListInt64;
}
inline void AttrValue::set_has_at_list_int64() {
  _oneof_case_[0] = kAtListInt64;
}
inline void AttrValue::clear_at_list_int64() {
  if (has_at_list_int64()) {
    delete value_.at_list_int64_;
    clear_has_value();
  }
}
inline ::oneflow::AttrValue_ListInt64* AttrValue::release_at_list_int64() {
  // @@protoc_insertion_point(field_release:oneflow.AttrValue.at_list_int64)
  if (has_at_list_int64()) {
    clear_has_value();
      ::oneflow::AttrValue_ListInt64* temp = value_.at_list_int64_;
    value_.at_list_int64_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::oneflow::AttrValue_ListInt64& AttrValue::at_list_int64() const {
  // @@protoc_insertion_point(field_get:oneflow.AttrValue.at_list_int64)
  return has_at_list_int64()
      ? *value_.at_list_int64_
      : *reinterpret_cast< ::oneflow::AttrValue_ListInt64*>(&::oneflow::_AttrValue_ListInt64_default_instance_);
}
inline ::oneflow::AttrValue_ListInt64* AttrValue::mutable_at_list_int64() {
  if (!has_at_list_int64()) {
    clear_value();
    set_has_at_list_int64();
    value_.at_list_int64_ = CreateMaybeMessage< ::oneflow::AttrValue_ListInt64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:oneflow.AttrValue.at_list_int64)
  return value_.at_list_int64_;
}

// optional .oneflow.AttrValue.ListFloat at_list_float = 11;
inline bool AttrValue::has_at_list_float() const {
  return value_case() == kAtListFloat;
}
inline void AttrValue::set_has_at_list_float() {
  _oneof_case_[0] = kAtListFloat;
}
inline void AttrValue::clear_at_list_float() {
  if (has_at_list_float()) {
    delete value_.at_list_float_;
    clear_has_value();
  }
}
inline ::oneflow::AttrValue_ListFloat* AttrValue::release_at_list_float() {
  // @@protoc_insertion_point(field_release:oneflow.AttrValue.at_list_float)
  if (has_at_list_float()) {
    clear_has_value();
      ::oneflow::AttrValue_ListFloat* temp = value_.at_list_float_;
    value_.at_list_float_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::oneflow::AttrValue_ListFloat& AttrValue::at_list_float() const {
  // @@protoc_insertion_point(field_get:oneflow.AttrValue.at_list_float)
  return has_at_list_float()
      ? *value_.at_list_float_
      : *reinterpret_cast< ::oneflow::AttrValue_ListFloat*>(&::oneflow::_AttrValue_ListFloat_default_instance_);
}
inline ::oneflow::AttrValue_ListFloat* AttrValue::mutable_at_list_float() {
  if (!has_at_list_float()) {
    clear_value();
    set_has_at_list_float();
    value_.at_list_float_ = CreateMaybeMessage< ::oneflow::AttrValue_ListFloat >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:oneflow.AttrValue.at_list_float)
  return value_.at_list_float_;
}

// optional .oneflow.AttrValue.ListDataType at_list_data_type = 12;
inline bool AttrValue::has_at_list_data_type() const {
  return value_case() == kAtListDataType;
}
inline void AttrValue::set_has_at_list_data_type() {
  _oneof_case_[0] = kAtListDataType;
}
inline void AttrValue::clear_at_list_data_type() {
  if (has_at_list_data_type()) {
    delete value_.at_list_data_type_;
    clear_has_value();
  }
}
inline ::oneflow::AttrValue_ListDataType* AttrValue::release_at_list_data_type() {
  // @@protoc_insertion_point(field_release:oneflow.AttrValue.at_list_data_type)
  if (has_at_list_data_type()) {
    clear_has_value();
      ::oneflow::AttrValue_ListDataType* temp = value_.at_list_data_type_;
    value_.at_list_data_type_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::oneflow::AttrValue_ListDataType& AttrValue::at_list_data_type() const {
  // @@protoc_insertion_point(field_get:oneflow.AttrValue.at_list_data_type)
  return has_at_list_data_type()
      ? *value_.at_list_data_type_
      : *reinterpret_cast< ::oneflow::AttrValue_ListDataType*>(&::oneflow::_AttrValue_ListDataType_default_instance_);
}
inline ::oneflow::AttrValue_ListDataType* AttrValue::mutable_at_list_data_type() {
  if (!has_at_list_data_type()) {
    clear_value();
    set_has_at_list_data_type();
    value_.at_list_data_type_ = CreateMaybeMessage< ::oneflow::AttrValue_ListDataType >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:oneflow.AttrValue.at_list_data_type)
  return value_.at_list_data_type_;
}

// optional .oneflow.AttrValue.ListShape at_list_shape = 13;
inline bool AttrValue::has_at_list_shape() const {
  return value_case() == kAtListShape;
}
inline void AttrValue::set_has_at_list_shape() {
  _oneof_case_[0] = kAtListShape;
}
inline void AttrValue::clear_at_list_shape() {
  if (has_at_list_shape()) {
    delete value_.at_list_shape_;
    clear_has_value();
  }
}
inline ::oneflow::AttrValue_ListShape* AttrValue::release_at_list_shape() {
  // @@protoc_insertion_point(field_release:oneflow.AttrValue.at_list_shape)
  if (has_at_list_shape()) {
    clear_has_value();
      ::oneflow::AttrValue_ListShape* temp = value_.at_list_shape_;
    value_.at_list_shape_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::oneflow::AttrValue_ListShape& AttrValue::at_list_shape() const {
  // @@protoc_insertion_point(field_get:oneflow.AttrValue.at_list_shape)
  return has_at_list_shape()
      ? *value_.at_list_shape_
      : *reinterpret_cast< ::oneflow::AttrValue_ListShape*>(&::oneflow::_AttrValue_ListShape_default_instance_);
}
inline ::oneflow::AttrValue_ListShape* AttrValue::mutable_at_list_shape() {
  if (!has_at_list_shape()) {
    clear_value();
    set_has_at_list_shape();
    value_.at_list_shape_ = CreateMaybeMessage< ::oneflow::AttrValue_ListShape >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:oneflow.AttrValue.at_list_shape)
  return value_.at_list_shape_;
}

// optional .oneflow.AttrValue.ListString at_list_string = 14;
inline bool AttrValue::has_at_list_string() const {
  return value_case() == kAtListString;
}
inline void AttrValue::set_has_at_list_string() {
  _oneof_case_[0] = kAtListString;
}
inline void AttrValue::clear_at_list_string() {
  if (has_at_list_string()) {
    delete value_.at_list_string_;
    clear_has_value();
  }
}
inline ::oneflow::AttrValue_ListString* AttrValue::release_at_list_string() {
  // @@protoc_insertion_point(field_release:oneflow.AttrValue.at_list_string)
  if (has_at_list_string()) {
    clear_has_value();
      ::oneflow::AttrValue_ListString* temp = value_.at_list_string_;
    value_.at_list_string_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::oneflow::AttrValue_ListString& AttrValue::at_list_string() const {
  // @@protoc_insertion_point(field_get:oneflow.AttrValue.at_list_string)
  return has_at_list_string()
      ? *value_.at_list_string_
      : *reinterpret_cast< ::oneflow::AttrValue_ListString*>(&::oneflow::_AttrValue_ListString_default_instance_);
}
inline ::oneflow::AttrValue_ListString* AttrValue::mutable_at_list_string() {
  if (!has_at_list_string()) {
    clear_value();
    set_has_at_list_string();
    value_.at_list_string_ = CreateMaybeMessage< ::oneflow::AttrValue_ListString >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:oneflow.AttrValue.at_list_string)
  return value_.at_list_string_;
}

// optional .oneflow.Int64ListProto at_stride = 15;
inline bool AttrValue::has_at_stride() const {
  return value_case() == kAtStride;
}
inline void AttrValue::set_has_at_stride() {
  _oneof_case_[0] = kAtStride;
}
inline ::oneflow::Int64ListProto* AttrValue::release_at_stride() {
  // @@protoc_insertion_point(field_release:oneflow.AttrValue.at_stride)
  if (has_at_stride()) {
    clear_has_value();
      ::oneflow::Int64ListProto* temp = value_.at_stride_;
    value_.at_stride_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::oneflow::Int64ListProto& AttrValue::at_stride() const {
  // @@protoc_insertion_point(field_get:oneflow.AttrValue.at_stride)
  return has_at_stride()
      ? *value_.at_stride_
      : *reinterpret_cast< ::oneflow::Int64ListProto*>(&::oneflow::_Int64ListProto_default_instance_);
}
inline ::oneflow::Int64ListProto* AttrValue::mutable_at_stride() {
  if (!has_at_stride()) {
    clear_value();
    set_has_at_stride();
    value_.at_stride_ = CreateMaybeMessage< ::oneflow::Int64ListProto >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:oneflow.AttrValue.at_stride)
  return value_.at_stride_;
}

// optional .oneflow.AttrValue.ListStride at_list_stride = 16;
inline bool AttrValue::has_at_list_stride() const {
  return value_case() == kAtListStride;
}
inline void AttrValue::set_has_at_list_stride() {
  _oneof_case_[0] = kAtListStride;
}
inline void AttrValue::clear_at_list_stride() {
  if (has_at_list_stride()) {
    delete value_.at_list_stride_;
    clear_has_value();
  }
}
inline ::oneflow::AttrValue_ListStride* AttrValue::release_at_list_stride() {
  // @@protoc_insertion_point(field_release:oneflow.AttrValue.at_list_stride)
  if (has_at_list_stride()) {
    clear_has_value();
      ::oneflow::AttrValue_ListStride* temp = value_.at_list_stride_;
    value_.at_list_stride_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::oneflow::AttrValue_ListStride& AttrValue::at_list_stride() const {
  // @@protoc_insertion_point(field_get:oneflow.AttrValue.at_list_stride)
  return has_at_list_stride()
      ? *value_.at_list_stride_
      : *reinterpret_cast< ::oneflow::AttrValue_ListStride*>(&::oneflow::_AttrValue_ListStride_default_instance_);
}
inline ::oneflow::AttrValue_ListStride* AttrValue::mutable_at_list_stride() {
  if (!has_at_list_stride()) {
    clear_value();
    set_has_at_list_stride();
    value_.at_list_stride_ = CreateMaybeMessage< ::oneflow::AttrValue_ListStride >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:oneflow.AttrValue.at_list_stride)
  return value_.at_list_stride_;
}

inline bool AttrValue::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void AttrValue::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline AttrValue::ValueCase AttrValue::value_case() const {
  return AttrValue::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// AttrDef

// required string name = 1;
inline bool AttrDef::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AttrDef::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& AttrDef::name() const {
  // @@protoc_insertion_point(field_get:oneflow.AttrDef.name)
  return name_.GetNoArena();
}
inline void AttrDef::set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oneflow.AttrDef.name)
}
inline void AttrDef::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oneflow.AttrDef.name)
}
inline void AttrDef::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oneflow.AttrDef.name)
}
inline void AttrDef::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oneflow.AttrDef.name)
}
inline std::string* AttrDef::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:oneflow.AttrDef.name)
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AttrDef::release_name() {
  // @@protoc_insertion_point(field_release:oneflow.AttrDef.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AttrDef::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:oneflow.AttrDef.name)
}

// required string description = 2;
inline bool AttrDef::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AttrDef::clear_description() {
  description_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& AttrDef::description() const {
  // @@protoc_insertion_point(field_get:oneflow.AttrDef.description)
  return description_.GetNoArena();
}
inline void AttrDef::set_description(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oneflow.AttrDef.description)
}
inline void AttrDef::set_description(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  description_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oneflow.AttrDef.description)
}
inline void AttrDef::set_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oneflow.AttrDef.description)
}
inline void AttrDef::set_description(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oneflow.AttrDef.description)
}
inline std::string* AttrDef::mutable_description() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:oneflow.AttrDef.description)
  return description_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AttrDef::release_description() {
  // @@protoc_insertion_point(field_release:oneflow.AttrDef.description)
  if (!has_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return description_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AttrDef::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  description_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:oneflow.AttrDef.description)
}

// required .oneflow.AttrValue default_val = 3;
inline bool AttrDef::has_default_val() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AttrDef::clear_default_val() {
  if (default_val_ != nullptr) default_val_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::oneflow::AttrValue& AttrDef::default_val() const {
  const ::oneflow::AttrValue* p = default_val_;
  // @@protoc_insertion_point(field_get:oneflow.AttrDef.default_val)
  return p != nullptr ? *p : *reinterpret_cast<const ::oneflow::AttrValue*>(
      &::oneflow::_AttrValue_default_instance_);
}
inline ::oneflow::AttrValue* AttrDef::release_default_val() {
  // @@protoc_insertion_point(field_release:oneflow.AttrDef.default_val)
  _has_bits_[0] &= ~0x00000004u;
  ::oneflow::AttrValue* temp = default_val_;
  default_val_ = nullptr;
  return temp;
}
inline ::oneflow::AttrValue* AttrDef::mutable_default_val() {
  _has_bits_[0] |= 0x00000004u;
  if (default_val_ == nullptr) {
    auto* p = CreateMaybeMessage<::oneflow::AttrValue>(GetArenaNoVirtual());
    default_val_ = p;
  }
  // @@protoc_insertion_point(field_mutable:oneflow.AttrDef.default_val)
  return default_val_;
}
inline void AttrDef::set_allocated_default_val(::oneflow::AttrValue* default_val) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete default_val_;
  }
  if (default_val) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      default_val = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, default_val, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  default_val_ = default_val;
  // @@protoc_insertion_point(field_set_allocated:oneflow.AttrDef.default_val)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace oneflow

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::oneflow::AttrType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::oneflow::AttrType>() {
  return ::oneflow::AttrType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fframework_2fuser_5fop_5fattr_2eproto
