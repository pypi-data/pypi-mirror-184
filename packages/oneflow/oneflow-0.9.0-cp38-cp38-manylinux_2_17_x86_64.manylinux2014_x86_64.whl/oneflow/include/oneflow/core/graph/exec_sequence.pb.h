// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/graph/exec_sequence.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fgraph_2fexec_5fsequence_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fgraph_2fexec_5fsequence_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "oneflow/core/kernel/kernel.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_oneflow_2fcore_2fgraph_2fexec_5fsequence_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_oneflow_2fcore_2fgraph_2fexec_5fsequence_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_oneflow_2fcore_2fgraph_2fexec_5fsequence_2eproto;
namespace oneflow {
class ExecNodeProto;
class ExecNodeProtoDefaultTypeInternal;
extern ExecNodeProtoDefaultTypeInternal _ExecNodeProto_default_instance_;
class ExecNodeProto_BnInOp2regstDescIdEntry_DoNotUse;
class ExecNodeProto_BnInOp2regstDescIdEntry_DoNotUseDefaultTypeInternal;
extern ExecNodeProto_BnInOp2regstDescIdEntry_DoNotUseDefaultTypeInternal _ExecNodeProto_BnInOp2regstDescIdEntry_DoNotUse_default_instance_;
class ExecSequence;
class ExecSequenceDefaultTypeInternal;
extern ExecSequenceDefaultTypeInternal _ExecSequence_default_instance_;
}  // namespace oneflow
PROTOBUF_NAMESPACE_OPEN
template<> ::oneflow::ExecNodeProto* Arena::CreateMaybeMessage<::oneflow::ExecNodeProto>(Arena*);
template<> ::oneflow::ExecNodeProto_BnInOp2regstDescIdEntry_DoNotUse* Arena::CreateMaybeMessage<::oneflow::ExecNodeProto_BnInOp2regstDescIdEntry_DoNotUse>(Arena*);
template<> ::oneflow::ExecSequence* Arena::CreateMaybeMessage<::oneflow::ExecSequence>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace oneflow {

// ===================================================================

class ExecNodeProto_BnInOp2regstDescIdEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<ExecNodeProto_BnInOp2regstDescIdEntry_DoNotUse, 
    std::string, ::PROTOBUF_NAMESPACE_ID::int64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<ExecNodeProto_BnInOp2regstDescIdEntry_DoNotUse, 
    std::string, ::PROTOBUF_NAMESPACE_ID::int64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    0 > SuperType;
  ExecNodeProto_BnInOp2regstDescIdEntry_DoNotUse();
  ExecNodeProto_BnInOp2regstDescIdEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const ExecNodeProto_BnInOp2regstDescIdEntry_DoNotUse& other);
  static const ExecNodeProto_BnInOp2regstDescIdEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ExecNodeProto_BnInOp2regstDescIdEntry_DoNotUse*>(&_ExecNodeProto_BnInOp2regstDescIdEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
#ifndef NDEBUG
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
       s->data(), s->size(), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "oneflow.ExecNodeProto.BnInOp2regstDescIdEntry.key");
#endif
    return true;
 }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fgraph_2fexec_5fsequence_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fgraph_2fexec_5fsequence_2eproto.file_level_metadata[0];
  }

  public:
};

// -------------------------------------------------------------------

class ExecNodeProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.ExecNodeProto) */ {
 public:
  ExecNodeProto();
  virtual ~ExecNodeProto();

  ExecNodeProto(const ExecNodeProto& from);
  ExecNodeProto(ExecNodeProto&& from) noexcept
    : ExecNodeProto() {
    *this = ::std::move(from);
  }

  inline ExecNodeProto& operator=(const ExecNodeProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExecNodeProto& operator=(ExecNodeProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ExecNodeProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExecNodeProto* internal_default_instance() {
    return reinterpret_cast<const ExecNodeProto*>(
               &_ExecNodeProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ExecNodeProto& a, ExecNodeProto& b) {
    a.Swap(&b);
  }
  inline void Swap(ExecNodeProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ExecNodeProto* New() const final {
    return CreateMaybeMessage<ExecNodeProto>(nullptr);
  }

  ExecNodeProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ExecNodeProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ExecNodeProto& from);
  void MergeFrom(const ExecNodeProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExecNodeProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.ExecNodeProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fgraph_2fexec_5fsequence_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fgraph_2fexec_5fsequence_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kBnInOp2RegstDescIdFieldNumber = 2,
    kKernelConfFieldNumber = 1,
  };
  // map<string, int64> bn_in_op2regst_desc_id = 2;
  int bn_in_op2regst_desc_id_size() const;
  void clear_bn_in_op2regst_desc_id();
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int64 >&
      bn_in_op2regst_desc_id() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_bn_in_op2regst_desc_id();

  // required .oneflow.KernelConf kernel_conf = 1;
  bool has_kernel_conf() const;
  void clear_kernel_conf();
  const ::oneflow::KernelConf& kernel_conf() const;
  ::oneflow::KernelConf* release_kernel_conf();
  ::oneflow::KernelConf* mutable_kernel_conf();
  void set_allocated_kernel_conf(::oneflow::KernelConf* kernel_conf);

  // @@protoc_insertion_point(class_scope:oneflow.ExecNodeProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      ExecNodeProto_BnInOp2regstDescIdEntry_DoNotUse,
      std::string, ::PROTOBUF_NAMESPACE_ID::int64,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
      0 > bn_in_op2regst_desc_id_;
  ::oneflow::KernelConf* kernel_conf_;
  friend struct ::TableStruct_oneflow_2fcore_2fgraph_2fexec_5fsequence_2eproto;
};
// -------------------------------------------------------------------

class ExecSequence :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.ExecSequence) */ {
 public:
  ExecSequence();
  virtual ~ExecSequence();

  ExecSequence(const ExecSequence& from);
  ExecSequence(ExecSequence&& from) noexcept
    : ExecSequence() {
    *this = ::std::move(from);
  }

  inline ExecSequence& operator=(const ExecSequence& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExecSequence& operator=(ExecSequence&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ExecSequence& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExecSequence* internal_default_instance() {
    return reinterpret_cast<const ExecSequence*>(
               &_ExecSequence_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ExecSequence& a, ExecSequence& b) {
    a.Swap(&b);
  }
  inline void Swap(ExecSequence* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ExecSequence* New() const final {
    return CreateMaybeMessage<ExecSequence>(nullptr);
  }

  ExecSequence* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ExecSequence>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ExecSequence& from);
  void MergeFrom(const ExecSequence& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExecSequence* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.ExecSequence";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fgraph_2fexec_5fsequence_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fgraph_2fexec_5fsequence_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExecNodeFieldNumber = 1,
  };
  // repeated .oneflow.ExecNodeProto exec_node = 1;
  int exec_node_size() const;
  void clear_exec_node();
  ::oneflow::ExecNodeProto* mutable_exec_node(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::ExecNodeProto >*
      mutable_exec_node();
  const ::oneflow::ExecNodeProto& exec_node(int index) const;
  ::oneflow::ExecNodeProto* add_exec_node();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::ExecNodeProto >&
      exec_node() const;

  // @@protoc_insertion_point(class_scope:oneflow.ExecSequence)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::ExecNodeProto > exec_node_;
  friend struct ::TableStruct_oneflow_2fcore_2fgraph_2fexec_5fsequence_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ExecNodeProto

// required .oneflow.KernelConf kernel_conf = 1;
inline bool ExecNodeProto::has_kernel_conf() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::oneflow::KernelConf& ExecNodeProto::kernel_conf() const {
  const ::oneflow::KernelConf* p = kernel_conf_;
  // @@protoc_insertion_point(field_get:oneflow.ExecNodeProto.kernel_conf)
  return p != nullptr ? *p : *reinterpret_cast<const ::oneflow::KernelConf*>(
      &::oneflow::_KernelConf_default_instance_);
}
inline ::oneflow::KernelConf* ExecNodeProto::release_kernel_conf() {
  // @@protoc_insertion_point(field_release:oneflow.ExecNodeProto.kernel_conf)
  _has_bits_[0] &= ~0x00000001u;
  ::oneflow::KernelConf* temp = kernel_conf_;
  kernel_conf_ = nullptr;
  return temp;
}
inline ::oneflow::KernelConf* ExecNodeProto::mutable_kernel_conf() {
  _has_bits_[0] |= 0x00000001u;
  if (kernel_conf_ == nullptr) {
    auto* p = CreateMaybeMessage<::oneflow::KernelConf>(GetArenaNoVirtual());
    kernel_conf_ = p;
  }
  // @@protoc_insertion_point(field_mutable:oneflow.ExecNodeProto.kernel_conf)
  return kernel_conf_;
}
inline void ExecNodeProto::set_allocated_kernel_conf(::oneflow::KernelConf* kernel_conf) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(kernel_conf_);
  }
  if (kernel_conf) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      kernel_conf = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, kernel_conf, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  kernel_conf_ = kernel_conf;
  // @@protoc_insertion_point(field_set_allocated:oneflow.ExecNodeProto.kernel_conf)
}

// map<string, int64> bn_in_op2regst_desc_id = 2;
inline int ExecNodeProto::bn_in_op2regst_desc_id_size() const {
  return bn_in_op2regst_desc_id_.size();
}
inline void ExecNodeProto::clear_bn_in_op2regst_desc_id() {
  bn_in_op2regst_desc_id_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int64 >&
ExecNodeProto::bn_in_op2regst_desc_id() const {
  // @@protoc_insertion_point(field_map:oneflow.ExecNodeProto.bn_in_op2regst_desc_id)
  return bn_in_op2regst_desc_id_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int64 >*
ExecNodeProto::mutable_bn_in_op2regst_desc_id() {
  // @@protoc_insertion_point(field_mutable_map:oneflow.ExecNodeProto.bn_in_op2regst_desc_id)
  return bn_in_op2regst_desc_id_.MutableMap();
}

// -------------------------------------------------------------------

// ExecSequence

// repeated .oneflow.ExecNodeProto exec_node = 1;
inline int ExecSequence::exec_node_size() const {
  return exec_node_.size();
}
inline void ExecSequence::clear_exec_node() {
  exec_node_.Clear();
}
inline ::oneflow::ExecNodeProto* ExecSequence::mutable_exec_node(int index) {
  // @@protoc_insertion_point(field_mutable:oneflow.ExecSequence.exec_node)
  return exec_node_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::ExecNodeProto >*
ExecSequence::mutable_exec_node() {
  // @@protoc_insertion_point(field_mutable_list:oneflow.ExecSequence.exec_node)
  return &exec_node_;
}
inline const ::oneflow::ExecNodeProto& ExecSequence::exec_node(int index) const {
  // @@protoc_insertion_point(field_get:oneflow.ExecSequence.exec_node)
  return exec_node_.Get(index);
}
inline ::oneflow::ExecNodeProto* ExecSequence::add_exec_node() {
  // @@protoc_insertion_point(field_add:oneflow.ExecSequence.exec_node)
  return exec_node_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::ExecNodeProto >&
ExecSequence::exec_node() const {
  // @@protoc_insertion_point(field_list:oneflow.ExecSequence.exec_node)
  return exec_node_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace oneflow

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fgraph_2fexec_5fsequence_2eproto
