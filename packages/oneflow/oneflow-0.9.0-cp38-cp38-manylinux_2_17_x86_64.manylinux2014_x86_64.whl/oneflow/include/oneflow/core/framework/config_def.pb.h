// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/framework/config_def.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fframework_2fconfig_5fdef_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fframework_2fconfig_5fdef_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "oneflow/core/framework/user_op_attr.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_oneflow_2fcore_2fframework_2fconfig_5fdef_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_oneflow_2fcore_2fframework_2fconfig_5fdef_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_oneflow_2fcore_2fframework_2fconfig_5fdef_2eproto;
namespace oneflow {
class ConfigDef;
class ConfigDefDefaultTypeInternal;
extern ConfigDefDefaultTypeInternal _ConfigDef_default_instance_;
class ConfigDef_AttrName2attrDefEntry_DoNotUse;
class ConfigDef_AttrName2attrDefEntry_DoNotUseDefaultTypeInternal;
extern ConfigDef_AttrName2attrDefEntry_DoNotUseDefaultTypeInternal _ConfigDef_AttrName2attrDefEntry_DoNotUse_default_instance_;
}  // namespace oneflow
PROTOBUF_NAMESPACE_OPEN
template<> ::oneflow::ConfigDef* Arena::CreateMaybeMessage<::oneflow::ConfigDef>(Arena*);
template<> ::oneflow::ConfigDef_AttrName2attrDefEntry_DoNotUse* Arena::CreateMaybeMessage<::oneflow::ConfigDef_AttrName2attrDefEntry_DoNotUse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace oneflow {

enum ConfigDefType : int {
  kEnvConfigDefType = 1,
  kSessionConfigDefType = 2,
  kFunctionConfigDefType = 3,
  kScopeConfigDefType = 4
};
bool ConfigDefType_IsValid(int value);
constexpr ConfigDefType ConfigDefType_MIN = kEnvConfigDefType;
constexpr ConfigDefType ConfigDefType_MAX = kScopeConfigDefType;
constexpr int ConfigDefType_ARRAYSIZE = ConfigDefType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ConfigDefType_descriptor();
template<typename T>
inline const std::string& ConfigDefType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ConfigDefType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ConfigDefType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ConfigDefType_descriptor(), enum_t_value);
}
inline bool ConfigDefType_Parse(
    const std::string& name, ConfigDefType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ConfigDefType>(
    ConfigDefType_descriptor(), name, value);
}
// ===================================================================

class ConfigDef_AttrName2attrDefEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<ConfigDef_AttrName2attrDefEntry_DoNotUse, 
    std::string, ::oneflow::AttrDef,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<ConfigDef_AttrName2attrDefEntry_DoNotUse, 
    std::string, ::oneflow::AttrDef,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  ConfigDef_AttrName2attrDefEntry_DoNotUse();
  ConfigDef_AttrName2attrDefEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const ConfigDef_AttrName2attrDefEntry_DoNotUse& other);
  static const ConfigDef_AttrName2attrDefEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ConfigDef_AttrName2attrDefEntry_DoNotUse*>(&_ConfigDef_AttrName2attrDefEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
#ifndef NDEBUG
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
       s->data(), s->size(), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "oneflow.ConfigDef.AttrName2attrDefEntry.key");
#endif
    return true;
 }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fframework_2fconfig_5fdef_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fframework_2fconfig_5fdef_2eproto.file_level_metadata[0];
  }

  public:
};

// -------------------------------------------------------------------

class ConfigDef :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.ConfigDef) */ {
 public:
  ConfigDef();
  virtual ~ConfigDef();

  ConfigDef(const ConfigDef& from);
  ConfigDef(ConfigDef&& from) noexcept
    : ConfigDef() {
    *this = ::std::move(from);
  }

  inline ConfigDef& operator=(const ConfigDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConfigDef& operator=(ConfigDef&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ConfigDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigDef* internal_default_instance() {
    return reinterpret_cast<const ConfigDef*>(
               &_ConfigDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ConfigDef& a, ConfigDef& b) {
    a.Swap(&b);
  }
  inline void Swap(ConfigDef* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ConfigDef* New() const final {
    return CreateMaybeMessage<ConfigDef>(nullptr);
  }

  ConfigDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ConfigDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ConfigDef& from);
  void MergeFrom(const ConfigDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.ConfigDef";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fframework_2fconfig_5fdef_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fframework_2fconfig_5fdef_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kAttrName2AttrDefFieldNumber = 1,
  };
  // map<string, .oneflow.AttrDef> attr_name2attr_def = 1;
  int attr_name2attr_def_size() const;
  void clear_attr_name2attr_def();
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::oneflow::AttrDef >&
      attr_name2attr_def() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::oneflow::AttrDef >*
      mutable_attr_name2attr_def();

  // @@protoc_insertion_point(class_scope:oneflow.ConfigDef)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      ConfigDef_AttrName2attrDefEntry_DoNotUse,
      std::string, ::oneflow::AttrDef,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > attr_name2attr_def_;
  friend struct ::TableStruct_oneflow_2fcore_2fframework_2fconfig_5fdef_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ConfigDef

// map<string, .oneflow.AttrDef> attr_name2attr_def = 1;
inline int ConfigDef::attr_name2attr_def_size() const {
  return attr_name2attr_def_.size();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::oneflow::AttrDef >&
ConfigDef::attr_name2attr_def() const {
  // @@protoc_insertion_point(field_map:oneflow.ConfigDef.attr_name2attr_def)
  return attr_name2attr_def_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::oneflow::AttrDef >*
ConfigDef::mutable_attr_name2attr_def() {
  // @@protoc_insertion_point(field_mutable_map:oneflow.ConfigDef.attr_name2attr_def)
  return attr_name2attr_def_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace oneflow

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::oneflow::ConfigDefType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::oneflow::ConfigDefType>() {
  return ::oneflow::ConfigDefType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fframework_2fconfig_5fdef_2eproto
