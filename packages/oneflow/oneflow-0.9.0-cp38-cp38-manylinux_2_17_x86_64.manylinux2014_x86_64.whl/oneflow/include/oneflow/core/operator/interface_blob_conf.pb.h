// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/operator/interface_blob_conf.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2foperator_2finterface_5fblob_5fconf_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2foperator_2finterface_5fblob_5fconf_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "oneflow/core/common/shape.pb.h"
#include "oneflow/core/common/data_type.pb.h"
#include "oneflow/core/job/sbp_parallel.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_oneflow_2fcore_2foperator_2finterface_5fblob_5fconf_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_oneflow_2fcore_2foperator_2finterface_5fblob_5fconf_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_oneflow_2fcore_2foperator_2finterface_5fblob_5fconf_2eproto;
namespace oneflow {
class InterfaceBlobConf;
class InterfaceBlobConfDefaultTypeInternal;
extern InterfaceBlobConfDefaultTypeInternal _InterfaceBlobConf_default_instance_;
}  // namespace oneflow
PROTOBUF_NAMESPACE_OPEN
template<> ::oneflow::InterfaceBlobConf* Arena::CreateMaybeMessage<::oneflow::InterfaceBlobConf>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace oneflow {

// ===================================================================

class InterfaceBlobConf :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.InterfaceBlobConf) */ {
 public:
  InterfaceBlobConf();
  virtual ~InterfaceBlobConf();

  InterfaceBlobConf(const InterfaceBlobConf& from);
  InterfaceBlobConf(InterfaceBlobConf&& from) noexcept
    : InterfaceBlobConf() {
    *this = ::std::move(from);
  }

  inline InterfaceBlobConf& operator=(const InterfaceBlobConf& from) {
    CopyFrom(from);
    return *this;
  }
  inline InterfaceBlobConf& operator=(InterfaceBlobConf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const InterfaceBlobConf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InterfaceBlobConf* internal_default_instance() {
    return reinterpret_cast<const InterfaceBlobConf*>(
               &_InterfaceBlobConf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(InterfaceBlobConf& a, InterfaceBlobConf& b) {
    a.Swap(&b);
  }
  inline void Swap(InterfaceBlobConf* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InterfaceBlobConf* New() const final {
    return CreateMaybeMessage<InterfaceBlobConf>(nullptr);
  }

  InterfaceBlobConf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InterfaceBlobConf>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InterfaceBlobConf& from);
  void MergeFrom(const InterfaceBlobConf& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InterfaceBlobConf* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.InterfaceBlobConf";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2foperator_2finterface_5fblob_5fconf_2eproto);
    return ::descriptor_table_oneflow_2fcore_2foperator_2finterface_5fblob_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShapeFieldNumber = 1,
    kNdSbpFieldNumber = 4,
    kDataTypeFieldNumber = 2,
    kIsDynamicFieldNumber = 3,
  };
  // optional .oneflow.ShapeProto shape = 1;
  bool has_shape() const;
  void clear_shape();
  const ::oneflow::ShapeProto& shape() const;
  ::oneflow::ShapeProto* release_shape();
  ::oneflow::ShapeProto* mutable_shape();
  void set_allocated_shape(::oneflow::ShapeProto* shape);

  // optional .oneflow.NdSbp nd_sbp = 4;
  bool has_nd_sbp() const;
  void clear_nd_sbp();
  const ::oneflow::NdSbp& nd_sbp() const;
  ::oneflow::NdSbp* release_nd_sbp();
  ::oneflow::NdSbp* mutable_nd_sbp();
  void set_allocated_nd_sbp(::oneflow::NdSbp* nd_sbp);

  // optional .oneflow.DataType data_type = 2;
  bool has_data_type() const;
  void clear_data_type();
  ::oneflow::DataType data_type() const;
  void set_data_type(::oneflow::DataType value);

  // optional bool is_dynamic = 3;
  bool has_is_dynamic() const;
  void clear_is_dynamic();
  bool is_dynamic() const;
  void set_is_dynamic(bool value);

  // @@protoc_insertion_point(class_scope:oneflow.InterfaceBlobConf)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::oneflow::ShapeProto* shape_;
  ::oneflow::NdSbp* nd_sbp_;
  int data_type_;
  bool is_dynamic_;
  friend struct ::TableStruct_oneflow_2fcore_2foperator_2finterface_5fblob_5fconf_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// InterfaceBlobConf

// optional .oneflow.ShapeProto shape = 1;
inline bool InterfaceBlobConf::has_shape() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::oneflow::ShapeProto& InterfaceBlobConf::shape() const {
  const ::oneflow::ShapeProto* p = shape_;
  // @@protoc_insertion_point(field_get:oneflow.InterfaceBlobConf.shape)
  return p != nullptr ? *p : *reinterpret_cast<const ::oneflow::ShapeProto*>(
      &::oneflow::_ShapeProto_default_instance_);
}
inline ::oneflow::ShapeProto* InterfaceBlobConf::release_shape() {
  // @@protoc_insertion_point(field_release:oneflow.InterfaceBlobConf.shape)
  _has_bits_[0] &= ~0x00000001u;
  ::oneflow::ShapeProto* temp = shape_;
  shape_ = nullptr;
  return temp;
}
inline ::oneflow::ShapeProto* InterfaceBlobConf::mutable_shape() {
  _has_bits_[0] |= 0x00000001u;
  if (shape_ == nullptr) {
    auto* p = CreateMaybeMessage<::oneflow::ShapeProto>(GetArenaNoVirtual());
    shape_ = p;
  }
  // @@protoc_insertion_point(field_mutable:oneflow.InterfaceBlobConf.shape)
  return shape_;
}
inline void InterfaceBlobConf::set_allocated_shape(::oneflow::ShapeProto* shape) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(shape_);
  }
  if (shape) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      shape = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, shape, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  shape_ = shape;
  // @@protoc_insertion_point(field_set_allocated:oneflow.InterfaceBlobConf.shape)
}

// optional .oneflow.DataType data_type = 2;
inline bool InterfaceBlobConf::has_data_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InterfaceBlobConf::clear_data_type() {
  data_type_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::oneflow::DataType InterfaceBlobConf::data_type() const {
  // @@protoc_insertion_point(field_get:oneflow.InterfaceBlobConf.data_type)
  return static_cast< ::oneflow::DataType >(data_type_);
}
inline void InterfaceBlobConf::set_data_type(::oneflow::DataType value) {
  assert(::oneflow::DataType_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  data_type_ = value;
  // @@protoc_insertion_point(field_set:oneflow.InterfaceBlobConf.data_type)
}

// optional bool is_dynamic = 3;
inline bool InterfaceBlobConf::has_is_dynamic() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InterfaceBlobConf::clear_is_dynamic() {
  is_dynamic_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool InterfaceBlobConf::is_dynamic() const {
  // @@protoc_insertion_point(field_get:oneflow.InterfaceBlobConf.is_dynamic)
  return is_dynamic_;
}
inline void InterfaceBlobConf::set_is_dynamic(bool value) {
  _has_bits_[0] |= 0x00000008u;
  is_dynamic_ = value;
  // @@protoc_insertion_point(field_set:oneflow.InterfaceBlobConf.is_dynamic)
}

// optional .oneflow.NdSbp nd_sbp = 4;
inline bool InterfaceBlobConf::has_nd_sbp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::oneflow::NdSbp& InterfaceBlobConf::nd_sbp() const {
  const ::oneflow::NdSbp* p = nd_sbp_;
  // @@protoc_insertion_point(field_get:oneflow.InterfaceBlobConf.nd_sbp)
  return p != nullptr ? *p : *reinterpret_cast<const ::oneflow::NdSbp*>(
      &::oneflow::_NdSbp_default_instance_);
}
inline ::oneflow::NdSbp* InterfaceBlobConf::release_nd_sbp() {
  // @@protoc_insertion_point(field_release:oneflow.InterfaceBlobConf.nd_sbp)
  _has_bits_[0] &= ~0x00000002u;
  ::oneflow::NdSbp* temp = nd_sbp_;
  nd_sbp_ = nullptr;
  return temp;
}
inline ::oneflow::NdSbp* InterfaceBlobConf::mutable_nd_sbp() {
  _has_bits_[0] |= 0x00000002u;
  if (nd_sbp_ == nullptr) {
    auto* p = CreateMaybeMessage<::oneflow::NdSbp>(GetArenaNoVirtual());
    nd_sbp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:oneflow.InterfaceBlobConf.nd_sbp)
  return nd_sbp_;
}
inline void InterfaceBlobConf::set_allocated_nd_sbp(::oneflow::NdSbp* nd_sbp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(nd_sbp_);
  }
  if (nd_sbp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      nd_sbp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, nd_sbp, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  nd_sbp_ = nd_sbp;
  // @@protoc_insertion_point(field_set_allocated:oneflow.InterfaceBlobConf.nd_sbp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace oneflow

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2foperator_2finterface_5fblob_5fconf_2eproto
