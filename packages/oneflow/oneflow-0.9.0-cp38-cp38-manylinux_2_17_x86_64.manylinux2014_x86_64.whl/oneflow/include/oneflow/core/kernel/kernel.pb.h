// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/kernel/kernel.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fkernel_2fkernel_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fkernel_2fkernel_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "oneflow/core/common/data_type.pb.h"
#include "oneflow/core/common/dtype_signature.pb.h"
#include "oneflow/core/operator/op_attribute.pb.h"
#include "oneflow/core/job/placement.pb.h"
#include "oneflow/core/register/blob_desc.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_oneflow_2fcore_2fkernel_2fkernel_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_oneflow_2fcore_2fkernel_2fkernel_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[8]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_oneflow_2fcore_2fkernel_2fkernel_2eproto;
namespace oneflow {
class BroadcastToCompatibleWithKernelConf;
class BroadcastToCompatibleWithKernelConfDefaultTypeInternal;
extern BroadcastToCompatibleWithKernelConfDefaultTypeInternal _BroadcastToCompatibleWithKernelConf_default_instance_;
class DecodeRandomKernelConf;
class DecodeRandomKernelConfDefaultTypeInternal;
extern DecodeRandomKernelConfDefaultTypeInternal _DecodeRandomKernelConf_default_instance_;
class ImageDecoderRandomCropResizeKernelConf;
class ImageDecoderRandomCropResizeKernelConfDefaultTypeInternal;
extern ImageDecoderRandomCropResizeKernelConfDefaultTypeInternal _ImageDecoderRandomCropResizeKernelConf_default_instance_;
class KernelConf;
class KernelConfDefaultTypeInternal;
extern KernelConfDefaultTypeInternal _KernelConf_default_instance_;
class ShapeElemCntKernelConf;
class ShapeElemCntKernelConfDefaultTypeInternal;
extern ShapeElemCntKernelConfDefaultTypeInternal _ShapeElemCntKernelConf_default_instance_;
class SyncDynamicResizeKernelConf;
class SyncDynamicResizeKernelConfDefaultTypeInternal;
extern SyncDynamicResizeKernelConfDefaultTypeInternal _SyncDynamicResizeKernelConf_default_instance_;
class UserKernelConf;
class UserKernelConfDefaultTypeInternal;
extern UserKernelConfDefaultTypeInternal _UserKernelConf_default_instance_;
class UserKernelConf_BnInOp2blobDescEntry_DoNotUse;
class UserKernelConf_BnInOp2blobDescEntry_DoNotUseDefaultTypeInternal;
extern UserKernelConf_BnInOp2blobDescEntry_DoNotUseDefaultTypeInternal _UserKernelConf_BnInOp2blobDescEntry_DoNotUse_default_instance_;
}  // namespace oneflow
PROTOBUF_NAMESPACE_OPEN
template<> ::oneflow::BroadcastToCompatibleWithKernelConf* Arena::CreateMaybeMessage<::oneflow::BroadcastToCompatibleWithKernelConf>(Arena*);
template<> ::oneflow::DecodeRandomKernelConf* Arena::CreateMaybeMessage<::oneflow::DecodeRandomKernelConf>(Arena*);
template<> ::oneflow::ImageDecoderRandomCropResizeKernelConf* Arena::CreateMaybeMessage<::oneflow::ImageDecoderRandomCropResizeKernelConf>(Arena*);
template<> ::oneflow::KernelConf* Arena::CreateMaybeMessage<::oneflow::KernelConf>(Arena*);
template<> ::oneflow::ShapeElemCntKernelConf* Arena::CreateMaybeMessage<::oneflow::ShapeElemCntKernelConf>(Arena*);
template<> ::oneflow::SyncDynamicResizeKernelConf* Arena::CreateMaybeMessage<::oneflow::SyncDynamicResizeKernelConf>(Arena*);
template<> ::oneflow::UserKernelConf* Arena::CreateMaybeMessage<::oneflow::UserKernelConf>(Arena*);
template<> ::oneflow::UserKernelConf_BnInOp2blobDescEntry_DoNotUse* Arena::CreateMaybeMessage<::oneflow::UserKernelConf_BnInOp2blobDescEntry_DoNotUse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace oneflow {

// ===================================================================

class DecodeRandomKernelConf :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.DecodeRandomKernelConf) */ {
 public:
  DecodeRandomKernelConf();
  virtual ~DecodeRandomKernelConf();

  DecodeRandomKernelConf(const DecodeRandomKernelConf& from);
  DecodeRandomKernelConf(DecodeRandomKernelConf&& from) noexcept
    : DecodeRandomKernelConf() {
    *this = ::std::move(from);
  }

  inline DecodeRandomKernelConf& operator=(const DecodeRandomKernelConf& from) {
    CopyFrom(from);
    return *this;
  }
  inline DecodeRandomKernelConf& operator=(DecodeRandomKernelConf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DecodeRandomKernelConf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DecodeRandomKernelConf* internal_default_instance() {
    return reinterpret_cast<const DecodeRandomKernelConf*>(
               &_DecodeRandomKernelConf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(DecodeRandomKernelConf& a, DecodeRandomKernelConf& b) {
    a.Swap(&b);
  }
  inline void Swap(DecodeRandomKernelConf* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DecodeRandomKernelConf* New() const final {
    return CreateMaybeMessage<DecodeRandomKernelConf>(nullptr);
  }

  DecodeRandomKernelConf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DecodeRandomKernelConf>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DecodeRandomKernelConf& from);
  void MergeFrom(const DecodeRandomKernelConf& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DecodeRandomKernelConf* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.DecodeRandomKernelConf";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fkernel_2fkernel_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fkernel_2fkernel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRandomSeedFieldNumber = 1,
  };
  // required uint32 random_seed = 1;
  bool has_random_seed() const;
  void clear_random_seed();
  ::PROTOBUF_NAMESPACE_ID::uint32 random_seed() const;
  void set_random_seed(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:oneflow.DecodeRandomKernelConf)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 random_seed_;
  friend struct ::TableStruct_oneflow_2fcore_2fkernel_2fkernel_2eproto;
};
// -------------------------------------------------------------------

class ShapeElemCntKernelConf :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.ShapeElemCntKernelConf) */ {
 public:
  ShapeElemCntKernelConf();
  virtual ~ShapeElemCntKernelConf();

  ShapeElemCntKernelConf(const ShapeElemCntKernelConf& from);
  ShapeElemCntKernelConf(ShapeElemCntKernelConf&& from) noexcept
    : ShapeElemCntKernelConf() {
    *this = ::std::move(from);
  }

  inline ShapeElemCntKernelConf& operator=(const ShapeElemCntKernelConf& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShapeElemCntKernelConf& operator=(ShapeElemCntKernelConf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ShapeElemCntKernelConf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ShapeElemCntKernelConf* internal_default_instance() {
    return reinterpret_cast<const ShapeElemCntKernelConf*>(
               &_ShapeElemCntKernelConf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ShapeElemCntKernelConf& a, ShapeElemCntKernelConf& b) {
    a.Swap(&b);
  }
  inline void Swap(ShapeElemCntKernelConf* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ShapeElemCntKernelConf* New() const final {
    return CreateMaybeMessage<ShapeElemCntKernelConf>(nullptr);
  }

  ShapeElemCntKernelConf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ShapeElemCntKernelConf>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ShapeElemCntKernelConf& from);
  void MergeFrom(const ShapeElemCntKernelConf& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ShapeElemCntKernelConf* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.ShapeElemCntKernelConf";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fkernel_2fkernel_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fkernel_2fkernel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAxisFieldNumber = 1,
  };
  // repeated int32 axis = 1;
  int axis_size() const;
  void clear_axis();
  ::PROTOBUF_NAMESPACE_ID::int32 axis(int index) const;
  void set_axis(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_axis(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      axis() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_axis();

  // @@protoc_insertion_point(class_scope:oneflow.ShapeElemCntKernelConf)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > axis_;
  friend struct ::TableStruct_oneflow_2fcore_2fkernel_2fkernel_2eproto;
};
// -------------------------------------------------------------------

class UserKernelConf_BnInOp2blobDescEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<UserKernelConf_BnInOp2blobDescEntry_DoNotUse, 
    std::string, ::oneflow::BlobDescProto,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<UserKernelConf_BnInOp2blobDescEntry_DoNotUse, 
    std::string, ::oneflow::BlobDescProto,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  UserKernelConf_BnInOp2blobDescEntry_DoNotUse();
  UserKernelConf_BnInOp2blobDescEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const UserKernelConf_BnInOp2blobDescEntry_DoNotUse& other);
  static const UserKernelConf_BnInOp2blobDescEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const UserKernelConf_BnInOp2blobDescEntry_DoNotUse*>(&_UserKernelConf_BnInOp2blobDescEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
#ifndef NDEBUG
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
       s->data(), s->size(), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "oneflow.UserKernelConf.BnInOp2blobDescEntry.key");
#endif
    return true;
 }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fkernel_2fkernel_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fkernel_2fkernel_2eproto.file_level_metadata[2];
  }

  public:
};

// -------------------------------------------------------------------

class UserKernelConf :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.UserKernelConf) */ {
 public:
  UserKernelConf();
  virtual ~UserKernelConf();

  UserKernelConf(const UserKernelConf& from);
  UserKernelConf(UserKernelConf&& from) noexcept
    : UserKernelConf() {
    *this = ::std::move(from);
  }

  inline UserKernelConf& operator=(const UserKernelConf& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserKernelConf& operator=(UserKernelConf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UserKernelConf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserKernelConf* internal_default_instance() {
    return reinterpret_cast<const UserKernelConf*>(
               &_UserKernelConf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(UserKernelConf& a, UserKernelConf& b) {
    a.Swap(&b);
  }
  inline void Swap(UserKernelConf* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UserKernelConf* New() const final {
    return CreateMaybeMessage<UserKernelConf>(nullptr);
  }

  UserKernelConf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UserKernelConf>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UserKernelConf& from);
  void MergeFrom(const UserKernelConf& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserKernelConf* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.UserKernelConf";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fkernel_2fkernel_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fkernel_2fkernel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kBnInOp2BlobDescFieldNumber = 1,
  };
  // map<string, .oneflow.BlobDescProto> bn_in_op2blob_desc = 1;
  int bn_in_op2blob_desc_size() const;
  void clear_bn_in_op2blob_desc();
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::oneflow::BlobDescProto >&
      bn_in_op2blob_desc() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::oneflow::BlobDescProto >*
      mutable_bn_in_op2blob_desc();

  // @@protoc_insertion_point(class_scope:oneflow.UserKernelConf)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      UserKernelConf_BnInOp2blobDescEntry_DoNotUse,
      std::string, ::oneflow::BlobDescProto,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > bn_in_op2blob_desc_;
  friend struct ::TableStruct_oneflow_2fcore_2fkernel_2fkernel_2eproto;
};
// -------------------------------------------------------------------

class SyncDynamicResizeKernelConf :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.SyncDynamicResizeKernelConf) */ {
 public:
  SyncDynamicResizeKernelConf();
  virtual ~SyncDynamicResizeKernelConf();

  SyncDynamicResizeKernelConf(const SyncDynamicResizeKernelConf& from);
  SyncDynamicResizeKernelConf(SyncDynamicResizeKernelConf&& from) noexcept
    : SyncDynamicResizeKernelConf() {
    *this = ::std::move(from);
  }

  inline SyncDynamicResizeKernelConf& operator=(const SyncDynamicResizeKernelConf& from) {
    CopyFrom(from);
    return *this;
  }
  inline SyncDynamicResizeKernelConf& operator=(SyncDynamicResizeKernelConf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SyncDynamicResizeKernelConf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncDynamicResizeKernelConf* internal_default_instance() {
    return reinterpret_cast<const SyncDynamicResizeKernelConf*>(
               &_SyncDynamicResizeKernelConf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(SyncDynamicResizeKernelConf& a, SyncDynamicResizeKernelConf& b) {
    a.Swap(&b);
  }
  inline void Swap(SyncDynamicResizeKernelConf* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SyncDynamicResizeKernelConf* New() const final {
    return CreateMaybeMessage<SyncDynamicResizeKernelConf>(nullptr);
  }

  SyncDynamicResizeKernelConf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SyncDynamicResizeKernelConf>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SyncDynamicResizeKernelConf& from);
  void MergeFrom(const SyncDynamicResizeKernelConf& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SyncDynamicResizeKernelConf* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.SyncDynamicResizeKernelConf";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fkernel_2fkernel_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fkernel_2fkernel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSizeDataTypeFieldNumber = 1,
  };
  // required .oneflow.DataType size_data_type = 1;
  bool has_size_data_type() const;
  void clear_size_data_type();
  ::oneflow::DataType size_data_type() const;
  void set_size_data_type(::oneflow::DataType value);

  // @@protoc_insertion_point(class_scope:oneflow.SyncDynamicResizeKernelConf)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int size_data_type_;
  friend struct ::TableStruct_oneflow_2fcore_2fkernel_2fkernel_2eproto;
};
// -------------------------------------------------------------------

class BroadcastToCompatibleWithKernelConf :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.BroadcastToCompatibleWithKernelConf) */ {
 public:
  BroadcastToCompatibleWithKernelConf();
  virtual ~BroadcastToCompatibleWithKernelConf();

  BroadcastToCompatibleWithKernelConf(const BroadcastToCompatibleWithKernelConf& from);
  BroadcastToCompatibleWithKernelConf(BroadcastToCompatibleWithKernelConf&& from) noexcept
    : BroadcastToCompatibleWithKernelConf() {
    *this = ::std::move(from);
  }

  inline BroadcastToCompatibleWithKernelConf& operator=(const BroadcastToCompatibleWithKernelConf& from) {
    CopyFrom(from);
    return *this;
  }
  inline BroadcastToCompatibleWithKernelConf& operator=(BroadcastToCompatibleWithKernelConf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BroadcastToCompatibleWithKernelConf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BroadcastToCompatibleWithKernelConf* internal_default_instance() {
    return reinterpret_cast<const BroadcastToCompatibleWithKernelConf*>(
               &_BroadcastToCompatibleWithKernelConf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(BroadcastToCompatibleWithKernelConf& a, BroadcastToCompatibleWithKernelConf& b) {
    a.Swap(&b);
  }
  inline void Swap(BroadcastToCompatibleWithKernelConf* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BroadcastToCompatibleWithKernelConf* New() const final {
    return CreateMaybeMessage<BroadcastToCompatibleWithKernelConf>(nullptr);
  }

  BroadcastToCompatibleWithKernelConf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BroadcastToCompatibleWithKernelConf>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BroadcastToCompatibleWithKernelConf& from);
  void MergeFrom(const BroadcastToCompatibleWithKernelConf& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BroadcastToCompatibleWithKernelConf* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.BroadcastToCompatibleWithKernelConf";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fkernel_2fkernel_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fkernel_2fkernel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBroadcastAxesFieldNumber = 1,
  };
  // repeated int64 broadcast_axes = 1;
  int broadcast_axes_size() const;
  void clear_broadcast_axes();
  ::PROTOBUF_NAMESPACE_ID::int64 broadcast_axes(int index) const;
  void set_broadcast_axes(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_broadcast_axes(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      broadcast_axes() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_broadcast_axes();

  // @@protoc_insertion_point(class_scope:oneflow.BroadcastToCompatibleWithKernelConf)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > broadcast_axes_;
  friend struct ::TableStruct_oneflow_2fcore_2fkernel_2fkernel_2eproto;
};
// -------------------------------------------------------------------

class ImageDecoderRandomCropResizeKernelConf :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.ImageDecoderRandomCropResizeKernelConf) */ {
 public:
  ImageDecoderRandomCropResizeKernelConf();
  virtual ~ImageDecoderRandomCropResizeKernelConf();

  ImageDecoderRandomCropResizeKernelConf(const ImageDecoderRandomCropResizeKernelConf& from);
  ImageDecoderRandomCropResizeKernelConf(ImageDecoderRandomCropResizeKernelConf&& from) noexcept
    : ImageDecoderRandomCropResizeKernelConf() {
    *this = ::std::move(from);
  }

  inline ImageDecoderRandomCropResizeKernelConf& operator=(const ImageDecoderRandomCropResizeKernelConf& from) {
    CopyFrom(from);
    return *this;
  }
  inline ImageDecoderRandomCropResizeKernelConf& operator=(ImageDecoderRandomCropResizeKernelConf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ImageDecoderRandomCropResizeKernelConf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImageDecoderRandomCropResizeKernelConf* internal_default_instance() {
    return reinterpret_cast<const ImageDecoderRandomCropResizeKernelConf*>(
               &_ImageDecoderRandomCropResizeKernelConf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ImageDecoderRandomCropResizeKernelConf& a, ImageDecoderRandomCropResizeKernelConf& b) {
    a.Swap(&b);
  }
  inline void Swap(ImageDecoderRandomCropResizeKernelConf* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ImageDecoderRandomCropResizeKernelConf* New() const final {
    return CreateMaybeMessage<ImageDecoderRandomCropResizeKernelConf>(nullptr);
  }

  ImageDecoderRandomCropResizeKernelConf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ImageDecoderRandomCropResizeKernelConf>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ImageDecoderRandomCropResizeKernelConf& from);
  void MergeFrom(const ImageDecoderRandomCropResizeKernelConf& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImageDecoderRandomCropResizeKernelConf* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.ImageDecoderRandomCropResizeKernelConf";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fkernel_2fkernel_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fkernel_2fkernel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSeedFieldNumber = 1,
    kBatchSizeFieldNumber = 2,
  };
  // required int64 seed = 1;
  bool has_seed() const;
  void clear_seed();
  ::PROTOBUF_NAMESPACE_ID::int64 seed() const;
  void set_seed(::PROTOBUF_NAMESPACE_ID::int64 value);

  // required int64 batch_size = 2;
  bool has_batch_size() const;
  void clear_batch_size();
  ::PROTOBUF_NAMESPACE_ID::int64 batch_size() const;
  void set_batch_size(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:oneflow.ImageDecoderRandomCropResizeKernelConf)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 seed_;
  ::PROTOBUF_NAMESPACE_ID::int64 batch_size_;
  friend struct ::TableStruct_oneflow_2fcore_2fkernel_2fkernel_2eproto;
};
// -------------------------------------------------------------------

class KernelConf :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.KernelConf) */ {
 public:
  KernelConf();
  virtual ~KernelConf();

  KernelConf(const KernelConf& from);
  KernelConf(KernelConf&& from) noexcept
    : KernelConf() {
    *this = ::std::move(from);
  }

  inline KernelConf& operator=(const KernelConf& from) {
    CopyFrom(from);
    return *this;
  }
  inline KernelConf& operator=(KernelConf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const KernelConf& default_instance();

  enum KernelTypeCase {
    kUserConf = 100,
    kDecodeRandomConf = 103,
    kSyncDynamicResizeConf = 360,
    kShapeElemCntConf = 412,
    kBroadcastToCompatibleWithConf = 428,
    kImageDecoderRandomCropResizeConf = 429,
    KERNEL_TYPE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KernelConf* internal_default_instance() {
    return reinterpret_cast<const KernelConf*>(
               &_KernelConf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(KernelConf& a, KernelConf& b) {
    a.Swap(&b);
  }
  inline void Swap(KernelConf* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline KernelConf* New() const final {
    return CreateMaybeMessage<KernelConf>(nullptr);
  }

  KernelConf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<KernelConf>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const KernelConf& from);
  void MergeFrom(const KernelConf& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KernelConf* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.KernelConf";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fkernel_2fkernel_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fkernel_2fkernel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOpAttributeRefFieldNumber = 10,
    kDtypeSignatureFieldNumber = 7,
    kParallelCtxFieldNumber = 8,
    kOpAttributeFieldNumber = 9,
    kDataTypeFieldNumber = 2,
    kAllBlobsAreStaticFieldNumber = 6,
    kUserConfFieldNumber = 100,
    kDecodeRandomConfFieldNumber = 103,
    kSyncDynamicResizeConfFieldNumber = 360,
    kShapeElemCntConfFieldNumber = 412,
    kBroadcastToCompatibleWithConfFieldNumber = 428,
    kImageDecoderRandomCropResizeConfFieldNumber = 429,
  };
  // optional string op_attribute_ref = 10;
  bool has_op_attribute_ref() const;
  void clear_op_attribute_ref();
  const std::string& op_attribute_ref() const;
  void set_op_attribute_ref(const std::string& value);
  void set_op_attribute_ref(std::string&& value);
  void set_op_attribute_ref(const char* value);
  void set_op_attribute_ref(const char* value, size_t size);
  std::string* mutable_op_attribute_ref();
  std::string* release_op_attribute_ref();
  void set_allocated_op_attribute_ref(std::string* op_attribute_ref);

  // required .oneflow.DTypeSignature dtype_signature = 7;
  bool has_dtype_signature() const;
  void clear_dtype_signature();
  const ::oneflow::DTypeSignature& dtype_signature() const;
  ::oneflow::DTypeSignature* release_dtype_signature();
  ::oneflow::DTypeSignature* mutable_dtype_signature();
  void set_allocated_dtype_signature(::oneflow::DTypeSignature* dtype_signature);

  // optional .oneflow.ParallelContext parallel_ctx = 8;
  bool has_parallel_ctx() const;
  void clear_parallel_ctx();
  const ::oneflow::ParallelContext& parallel_ctx() const;
  ::oneflow::ParallelContext* release_parallel_ctx();
  ::oneflow::ParallelContext* mutable_parallel_ctx();
  void set_allocated_parallel_ctx(::oneflow::ParallelContext* parallel_ctx);

  // optional .oneflow.OpAttribute op_attribute = 9;
  bool has_op_attribute() const;
  void clear_op_attribute();
  const ::oneflow::OpAttribute& op_attribute() const;
  ::oneflow::OpAttribute* release_op_attribute();
  ::oneflow::OpAttribute* mutable_op_attribute();
  void set_allocated_op_attribute(::oneflow::OpAttribute* op_attribute);

  // required .oneflow.DataType data_type = 2;
  bool has_data_type() const;
  void clear_data_type();
  ::oneflow::DataType data_type() const;
  void set_data_type(::oneflow::DataType value);

  // required bool all_blobs_are_static = 6;
  bool has_all_blobs_are_static() const;
  void clear_all_blobs_are_static();
  bool all_blobs_are_static() const;
  void set_all_blobs_are_static(bool value);

  // optional .oneflow.UserKernelConf user_conf = 100;
  bool has_user_conf() const;
  void clear_user_conf();
  const ::oneflow::UserKernelConf& user_conf() const;
  ::oneflow::UserKernelConf* release_user_conf();
  ::oneflow::UserKernelConf* mutable_user_conf();
  void set_allocated_user_conf(::oneflow::UserKernelConf* user_conf);

  // optional .oneflow.DecodeRandomKernelConf decode_random_conf = 103;
  bool has_decode_random_conf() const;
  void clear_decode_random_conf();
  const ::oneflow::DecodeRandomKernelConf& decode_random_conf() const;
  ::oneflow::DecodeRandomKernelConf* release_decode_random_conf();
  ::oneflow::DecodeRandomKernelConf* mutable_decode_random_conf();
  void set_allocated_decode_random_conf(::oneflow::DecodeRandomKernelConf* decode_random_conf);

  // optional .oneflow.SyncDynamicResizeKernelConf sync_dynamic_resize_conf = 360;
  bool has_sync_dynamic_resize_conf() const;
  void clear_sync_dynamic_resize_conf();
  const ::oneflow::SyncDynamicResizeKernelConf& sync_dynamic_resize_conf() const;
  ::oneflow::SyncDynamicResizeKernelConf* release_sync_dynamic_resize_conf();
  ::oneflow::SyncDynamicResizeKernelConf* mutable_sync_dynamic_resize_conf();
  void set_allocated_sync_dynamic_resize_conf(::oneflow::SyncDynamicResizeKernelConf* sync_dynamic_resize_conf);

  // optional .oneflow.ShapeElemCntKernelConf shape_elem_cnt_conf = 412;
  bool has_shape_elem_cnt_conf() const;
  void clear_shape_elem_cnt_conf();
  const ::oneflow::ShapeElemCntKernelConf& shape_elem_cnt_conf() const;
  ::oneflow::ShapeElemCntKernelConf* release_shape_elem_cnt_conf();
  ::oneflow::ShapeElemCntKernelConf* mutable_shape_elem_cnt_conf();
  void set_allocated_shape_elem_cnt_conf(::oneflow::ShapeElemCntKernelConf* shape_elem_cnt_conf);

  // optional .oneflow.BroadcastToCompatibleWithKernelConf broadcast_to_compatible_with_conf = 428;
  bool has_broadcast_to_compatible_with_conf() const;
  void clear_broadcast_to_compatible_with_conf();
  const ::oneflow::BroadcastToCompatibleWithKernelConf& broadcast_to_compatible_with_conf() const;
  ::oneflow::BroadcastToCompatibleWithKernelConf* release_broadcast_to_compatible_with_conf();
  ::oneflow::BroadcastToCompatibleWithKernelConf* mutable_broadcast_to_compatible_with_conf();
  void set_allocated_broadcast_to_compatible_with_conf(::oneflow::BroadcastToCompatibleWithKernelConf* broadcast_to_compatible_with_conf);

  // optional .oneflow.ImageDecoderRandomCropResizeKernelConf image_decoder_random_crop_resize_conf = 429;
  bool has_image_decoder_random_crop_resize_conf() const;
  void clear_image_decoder_random_crop_resize_conf();
  const ::oneflow::ImageDecoderRandomCropResizeKernelConf& image_decoder_random_crop_resize_conf() const;
  ::oneflow::ImageDecoderRandomCropResizeKernelConf* release_image_decoder_random_crop_resize_conf();
  ::oneflow::ImageDecoderRandomCropResizeKernelConf* mutable_image_decoder_random_crop_resize_conf();
  void set_allocated_image_decoder_random_crop_resize_conf(::oneflow::ImageDecoderRandomCropResizeKernelConf* image_decoder_random_crop_resize_conf);

  void clear_kernel_type();
  KernelTypeCase kernel_type_case() const;
  // @@protoc_insertion_point(class_scope:oneflow.KernelConf)
 private:
  class _Internal;
  void set_has_user_conf();
  void set_has_decode_random_conf();
  void set_has_sync_dynamic_resize_conf();
  void set_has_shape_elem_cnt_conf();
  void set_has_broadcast_to_compatible_with_conf();
  void set_has_image_decoder_random_crop_resize_conf();

  inline bool has_kernel_type() const;
  inline void clear_has_kernel_type();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr op_attribute_ref_;
  ::oneflow::DTypeSignature* dtype_signature_;
  ::oneflow::ParallelContext* parallel_ctx_;
  ::oneflow::OpAttribute* op_attribute_;
  int data_type_;
  bool all_blobs_are_static_;
  union KernelTypeUnion {
    KernelTypeUnion() {}
    ::oneflow::UserKernelConf* user_conf_;
    ::oneflow::DecodeRandomKernelConf* decode_random_conf_;
    ::oneflow::SyncDynamicResizeKernelConf* sync_dynamic_resize_conf_;
    ::oneflow::ShapeElemCntKernelConf* shape_elem_cnt_conf_;
    ::oneflow::BroadcastToCompatibleWithKernelConf* broadcast_to_compatible_with_conf_;
    ::oneflow::ImageDecoderRandomCropResizeKernelConf* image_decoder_random_crop_resize_conf_;
  } kernel_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_oneflow_2fcore_2fkernel_2fkernel_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DecodeRandomKernelConf

// required uint32 random_seed = 1;
inline bool DecodeRandomKernelConf::has_random_seed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DecodeRandomKernelConf::clear_random_seed() {
  random_seed_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DecodeRandomKernelConf::random_seed() const {
  // @@protoc_insertion_point(field_get:oneflow.DecodeRandomKernelConf.random_seed)
  return random_seed_;
}
inline void DecodeRandomKernelConf::set_random_seed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  random_seed_ = value;
  // @@protoc_insertion_point(field_set:oneflow.DecodeRandomKernelConf.random_seed)
}

// -------------------------------------------------------------------

// ShapeElemCntKernelConf

// repeated int32 axis = 1;
inline int ShapeElemCntKernelConf::axis_size() const {
  return axis_.size();
}
inline void ShapeElemCntKernelConf::clear_axis() {
  axis_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ShapeElemCntKernelConf::axis(int index) const {
  // @@protoc_insertion_point(field_get:oneflow.ShapeElemCntKernelConf.axis)
  return axis_.Get(index);
}
inline void ShapeElemCntKernelConf::set_axis(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  axis_.Set(index, value);
  // @@protoc_insertion_point(field_set:oneflow.ShapeElemCntKernelConf.axis)
}
inline void ShapeElemCntKernelConf::add_axis(::PROTOBUF_NAMESPACE_ID::int32 value) {
  axis_.Add(value);
  // @@protoc_insertion_point(field_add:oneflow.ShapeElemCntKernelConf.axis)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
ShapeElemCntKernelConf::axis() const {
  // @@protoc_insertion_point(field_list:oneflow.ShapeElemCntKernelConf.axis)
  return axis_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
ShapeElemCntKernelConf::mutable_axis() {
  // @@protoc_insertion_point(field_mutable_list:oneflow.ShapeElemCntKernelConf.axis)
  return &axis_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// UserKernelConf

// map<string, .oneflow.BlobDescProto> bn_in_op2blob_desc = 1;
inline int UserKernelConf::bn_in_op2blob_desc_size() const {
  return bn_in_op2blob_desc_.size();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::oneflow::BlobDescProto >&
UserKernelConf::bn_in_op2blob_desc() const {
  // @@protoc_insertion_point(field_map:oneflow.UserKernelConf.bn_in_op2blob_desc)
  return bn_in_op2blob_desc_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::oneflow::BlobDescProto >*
UserKernelConf::mutable_bn_in_op2blob_desc() {
  // @@protoc_insertion_point(field_mutable_map:oneflow.UserKernelConf.bn_in_op2blob_desc)
  return bn_in_op2blob_desc_.MutableMap();
}

// -------------------------------------------------------------------

// SyncDynamicResizeKernelConf

// required .oneflow.DataType size_data_type = 1;
inline bool SyncDynamicResizeKernelConf::has_size_data_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncDynamicResizeKernelConf::clear_size_data_type() {
  size_data_type_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::oneflow::DataType SyncDynamicResizeKernelConf::size_data_type() const {
  // @@protoc_insertion_point(field_get:oneflow.SyncDynamicResizeKernelConf.size_data_type)
  return static_cast< ::oneflow::DataType >(size_data_type_);
}
inline void SyncDynamicResizeKernelConf::set_size_data_type(::oneflow::DataType value) {
  assert(::oneflow::DataType_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  size_data_type_ = value;
  // @@protoc_insertion_point(field_set:oneflow.SyncDynamicResizeKernelConf.size_data_type)
}

// -------------------------------------------------------------------

// BroadcastToCompatibleWithKernelConf

// repeated int64 broadcast_axes = 1;
inline int BroadcastToCompatibleWithKernelConf::broadcast_axes_size() const {
  return broadcast_axes_.size();
}
inline void BroadcastToCompatibleWithKernelConf::clear_broadcast_axes() {
  broadcast_axes_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 BroadcastToCompatibleWithKernelConf::broadcast_axes(int index) const {
  // @@protoc_insertion_point(field_get:oneflow.BroadcastToCompatibleWithKernelConf.broadcast_axes)
  return broadcast_axes_.Get(index);
}
inline void BroadcastToCompatibleWithKernelConf::set_broadcast_axes(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  broadcast_axes_.Set(index, value);
  // @@protoc_insertion_point(field_set:oneflow.BroadcastToCompatibleWithKernelConf.broadcast_axes)
}
inline void BroadcastToCompatibleWithKernelConf::add_broadcast_axes(::PROTOBUF_NAMESPACE_ID::int64 value) {
  broadcast_axes_.Add(value);
  // @@protoc_insertion_point(field_add:oneflow.BroadcastToCompatibleWithKernelConf.broadcast_axes)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
BroadcastToCompatibleWithKernelConf::broadcast_axes() const {
  // @@protoc_insertion_point(field_list:oneflow.BroadcastToCompatibleWithKernelConf.broadcast_axes)
  return broadcast_axes_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
BroadcastToCompatibleWithKernelConf::mutable_broadcast_axes() {
  // @@protoc_insertion_point(field_mutable_list:oneflow.BroadcastToCompatibleWithKernelConf.broadcast_axes)
  return &broadcast_axes_;
}

// -------------------------------------------------------------------

// ImageDecoderRandomCropResizeKernelConf

// required int64 seed = 1;
inline bool ImageDecoderRandomCropResizeKernelConf::has_seed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImageDecoderRandomCropResizeKernelConf::clear_seed() {
  seed_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ImageDecoderRandomCropResizeKernelConf::seed() const {
  // @@protoc_insertion_point(field_get:oneflow.ImageDecoderRandomCropResizeKernelConf.seed)
  return seed_;
}
inline void ImageDecoderRandomCropResizeKernelConf::set_seed(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  seed_ = value;
  // @@protoc_insertion_point(field_set:oneflow.ImageDecoderRandomCropResizeKernelConf.seed)
}

// required int64 batch_size = 2;
inline bool ImageDecoderRandomCropResizeKernelConf::has_batch_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ImageDecoderRandomCropResizeKernelConf::clear_batch_size() {
  batch_size_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ImageDecoderRandomCropResizeKernelConf::batch_size() const {
  // @@protoc_insertion_point(field_get:oneflow.ImageDecoderRandomCropResizeKernelConf.batch_size)
  return batch_size_;
}
inline void ImageDecoderRandomCropResizeKernelConf::set_batch_size(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  batch_size_ = value;
  // @@protoc_insertion_point(field_set:oneflow.ImageDecoderRandomCropResizeKernelConf.batch_size)
}

// -------------------------------------------------------------------

// KernelConf

// required .oneflow.DataType data_type = 2;
inline bool KernelConf::has_data_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void KernelConf::clear_data_type() {
  data_type_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::oneflow::DataType KernelConf::data_type() const {
  // @@protoc_insertion_point(field_get:oneflow.KernelConf.data_type)
  return static_cast< ::oneflow::DataType >(data_type_);
}
inline void KernelConf::set_data_type(::oneflow::DataType value) {
  assert(::oneflow::DataType_IsValid(value));
  _has_bits_[0] |= 0x00000010u;
  data_type_ = value;
  // @@protoc_insertion_point(field_set:oneflow.KernelConf.data_type)
}

// required bool all_blobs_are_static = 6;
inline bool KernelConf::has_all_blobs_are_static() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void KernelConf::clear_all_blobs_are_static() {
  all_blobs_are_static_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool KernelConf::all_blobs_are_static() const {
  // @@protoc_insertion_point(field_get:oneflow.KernelConf.all_blobs_are_static)
  return all_blobs_are_static_;
}
inline void KernelConf::set_all_blobs_are_static(bool value) {
  _has_bits_[0] |= 0x00000020u;
  all_blobs_are_static_ = value;
  // @@protoc_insertion_point(field_set:oneflow.KernelConf.all_blobs_are_static)
}

// required .oneflow.DTypeSignature dtype_signature = 7;
inline bool KernelConf::has_dtype_signature() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::oneflow::DTypeSignature& KernelConf::dtype_signature() const {
  const ::oneflow::DTypeSignature* p = dtype_signature_;
  // @@protoc_insertion_point(field_get:oneflow.KernelConf.dtype_signature)
  return p != nullptr ? *p : *reinterpret_cast<const ::oneflow::DTypeSignature*>(
      &::oneflow::_DTypeSignature_default_instance_);
}
inline ::oneflow::DTypeSignature* KernelConf::release_dtype_signature() {
  // @@protoc_insertion_point(field_release:oneflow.KernelConf.dtype_signature)
  _has_bits_[0] &= ~0x00000002u;
  ::oneflow::DTypeSignature* temp = dtype_signature_;
  dtype_signature_ = nullptr;
  return temp;
}
inline ::oneflow::DTypeSignature* KernelConf::mutable_dtype_signature() {
  _has_bits_[0] |= 0x00000002u;
  if (dtype_signature_ == nullptr) {
    auto* p = CreateMaybeMessage<::oneflow::DTypeSignature>(GetArenaNoVirtual());
    dtype_signature_ = p;
  }
  // @@protoc_insertion_point(field_mutable:oneflow.KernelConf.dtype_signature)
  return dtype_signature_;
}
inline void KernelConf::set_allocated_dtype_signature(::oneflow::DTypeSignature* dtype_signature) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dtype_signature_);
  }
  if (dtype_signature) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dtype_signature = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dtype_signature, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  dtype_signature_ = dtype_signature;
  // @@protoc_insertion_point(field_set_allocated:oneflow.KernelConf.dtype_signature)
}

// optional .oneflow.ParallelContext parallel_ctx = 8;
inline bool KernelConf::has_parallel_ctx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline const ::oneflow::ParallelContext& KernelConf::parallel_ctx() const {
  const ::oneflow::ParallelContext* p = parallel_ctx_;
  // @@protoc_insertion_point(field_get:oneflow.KernelConf.parallel_ctx)
  return p != nullptr ? *p : *reinterpret_cast<const ::oneflow::ParallelContext*>(
      &::oneflow::_ParallelContext_default_instance_);
}
inline ::oneflow::ParallelContext* KernelConf::release_parallel_ctx() {
  // @@protoc_insertion_point(field_release:oneflow.KernelConf.parallel_ctx)
  _has_bits_[0] &= ~0x00000004u;
  ::oneflow::ParallelContext* temp = parallel_ctx_;
  parallel_ctx_ = nullptr;
  return temp;
}
inline ::oneflow::ParallelContext* KernelConf::mutable_parallel_ctx() {
  _has_bits_[0] |= 0x00000004u;
  if (parallel_ctx_ == nullptr) {
    auto* p = CreateMaybeMessage<::oneflow::ParallelContext>(GetArenaNoVirtual());
    parallel_ctx_ = p;
  }
  // @@protoc_insertion_point(field_mutable:oneflow.KernelConf.parallel_ctx)
  return parallel_ctx_;
}
inline void KernelConf::set_allocated_parallel_ctx(::oneflow::ParallelContext* parallel_ctx) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(parallel_ctx_);
  }
  if (parallel_ctx) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      parallel_ctx = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, parallel_ctx, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  parallel_ctx_ = parallel_ctx;
  // @@protoc_insertion_point(field_set_allocated:oneflow.KernelConf.parallel_ctx)
}

// optional .oneflow.OpAttribute op_attribute = 9;
inline bool KernelConf::has_op_attribute() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline const ::oneflow::OpAttribute& KernelConf::op_attribute() const {
  const ::oneflow::OpAttribute* p = op_attribute_;
  // @@protoc_insertion_point(field_get:oneflow.KernelConf.op_attribute)
  return p != nullptr ? *p : *reinterpret_cast<const ::oneflow::OpAttribute*>(
      &::oneflow::_OpAttribute_default_instance_);
}
inline ::oneflow::OpAttribute* KernelConf::release_op_attribute() {
  // @@protoc_insertion_point(field_release:oneflow.KernelConf.op_attribute)
  _has_bits_[0] &= ~0x00000008u;
  ::oneflow::OpAttribute* temp = op_attribute_;
  op_attribute_ = nullptr;
  return temp;
}
inline ::oneflow::OpAttribute* KernelConf::mutable_op_attribute() {
  _has_bits_[0] |= 0x00000008u;
  if (op_attribute_ == nullptr) {
    auto* p = CreateMaybeMessage<::oneflow::OpAttribute>(GetArenaNoVirtual());
    op_attribute_ = p;
  }
  // @@protoc_insertion_point(field_mutable:oneflow.KernelConf.op_attribute)
  return op_attribute_;
}
inline void KernelConf::set_allocated_op_attribute(::oneflow::OpAttribute* op_attribute) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(op_attribute_);
  }
  if (op_attribute) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      op_attribute = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, op_attribute, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  op_attribute_ = op_attribute;
  // @@protoc_insertion_point(field_set_allocated:oneflow.KernelConf.op_attribute)
}

// optional string op_attribute_ref = 10;
inline bool KernelConf::has_op_attribute_ref() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KernelConf::clear_op_attribute_ref() {
  op_attribute_ref_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& KernelConf::op_attribute_ref() const {
  // @@protoc_insertion_point(field_get:oneflow.KernelConf.op_attribute_ref)
  return op_attribute_ref_.GetNoArena();
}
inline void KernelConf::set_op_attribute_ref(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  op_attribute_ref_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oneflow.KernelConf.op_attribute_ref)
}
inline void KernelConf::set_op_attribute_ref(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  op_attribute_ref_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oneflow.KernelConf.op_attribute_ref)
}
inline void KernelConf::set_op_attribute_ref(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  op_attribute_ref_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oneflow.KernelConf.op_attribute_ref)
}
inline void KernelConf::set_op_attribute_ref(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  op_attribute_ref_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oneflow.KernelConf.op_attribute_ref)
}
inline std::string* KernelConf::mutable_op_attribute_ref() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:oneflow.KernelConf.op_attribute_ref)
  return op_attribute_ref_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* KernelConf::release_op_attribute_ref() {
  // @@protoc_insertion_point(field_release:oneflow.KernelConf.op_attribute_ref)
  if (!has_op_attribute_ref()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return op_attribute_ref_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void KernelConf::set_allocated_op_attribute_ref(std::string* op_attribute_ref) {
  if (op_attribute_ref != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  op_attribute_ref_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), op_attribute_ref);
  // @@protoc_insertion_point(field_set_allocated:oneflow.KernelConf.op_attribute_ref)
}

// optional .oneflow.UserKernelConf user_conf = 100;
inline bool KernelConf::has_user_conf() const {
  return kernel_type_case() == kUserConf;
}
inline void KernelConf::set_has_user_conf() {
  _oneof_case_[0] = kUserConf;
}
inline void KernelConf::clear_user_conf() {
  if (has_user_conf()) {
    delete kernel_type_.user_conf_;
    clear_has_kernel_type();
  }
}
inline ::oneflow::UserKernelConf* KernelConf::release_user_conf() {
  // @@protoc_insertion_point(field_release:oneflow.KernelConf.user_conf)
  if (has_user_conf()) {
    clear_has_kernel_type();
      ::oneflow::UserKernelConf* temp = kernel_type_.user_conf_;
    kernel_type_.user_conf_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::oneflow::UserKernelConf& KernelConf::user_conf() const {
  // @@protoc_insertion_point(field_get:oneflow.KernelConf.user_conf)
  return has_user_conf()
      ? *kernel_type_.user_conf_
      : *reinterpret_cast< ::oneflow::UserKernelConf*>(&::oneflow::_UserKernelConf_default_instance_);
}
inline ::oneflow::UserKernelConf* KernelConf::mutable_user_conf() {
  if (!has_user_conf()) {
    clear_kernel_type();
    set_has_user_conf();
    kernel_type_.user_conf_ = CreateMaybeMessage< ::oneflow::UserKernelConf >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:oneflow.KernelConf.user_conf)
  return kernel_type_.user_conf_;
}

// optional .oneflow.DecodeRandomKernelConf decode_random_conf = 103;
inline bool KernelConf::has_decode_random_conf() const {
  return kernel_type_case() == kDecodeRandomConf;
}
inline void KernelConf::set_has_decode_random_conf() {
  _oneof_case_[0] = kDecodeRandomConf;
}
inline void KernelConf::clear_decode_random_conf() {
  if (has_decode_random_conf()) {
    delete kernel_type_.decode_random_conf_;
    clear_has_kernel_type();
  }
}
inline ::oneflow::DecodeRandomKernelConf* KernelConf::release_decode_random_conf() {
  // @@protoc_insertion_point(field_release:oneflow.KernelConf.decode_random_conf)
  if (has_decode_random_conf()) {
    clear_has_kernel_type();
      ::oneflow::DecodeRandomKernelConf* temp = kernel_type_.decode_random_conf_;
    kernel_type_.decode_random_conf_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::oneflow::DecodeRandomKernelConf& KernelConf::decode_random_conf() const {
  // @@protoc_insertion_point(field_get:oneflow.KernelConf.decode_random_conf)
  return has_decode_random_conf()
      ? *kernel_type_.decode_random_conf_
      : *reinterpret_cast< ::oneflow::DecodeRandomKernelConf*>(&::oneflow::_DecodeRandomKernelConf_default_instance_);
}
inline ::oneflow::DecodeRandomKernelConf* KernelConf::mutable_decode_random_conf() {
  if (!has_decode_random_conf()) {
    clear_kernel_type();
    set_has_decode_random_conf();
    kernel_type_.decode_random_conf_ = CreateMaybeMessage< ::oneflow::DecodeRandomKernelConf >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:oneflow.KernelConf.decode_random_conf)
  return kernel_type_.decode_random_conf_;
}

// optional .oneflow.SyncDynamicResizeKernelConf sync_dynamic_resize_conf = 360;
inline bool KernelConf::has_sync_dynamic_resize_conf() const {
  return kernel_type_case() == kSyncDynamicResizeConf;
}
inline void KernelConf::set_has_sync_dynamic_resize_conf() {
  _oneof_case_[0] = kSyncDynamicResizeConf;
}
inline void KernelConf::clear_sync_dynamic_resize_conf() {
  if (has_sync_dynamic_resize_conf()) {
    delete kernel_type_.sync_dynamic_resize_conf_;
    clear_has_kernel_type();
  }
}
inline ::oneflow::SyncDynamicResizeKernelConf* KernelConf::release_sync_dynamic_resize_conf() {
  // @@protoc_insertion_point(field_release:oneflow.KernelConf.sync_dynamic_resize_conf)
  if (has_sync_dynamic_resize_conf()) {
    clear_has_kernel_type();
      ::oneflow::SyncDynamicResizeKernelConf* temp = kernel_type_.sync_dynamic_resize_conf_;
    kernel_type_.sync_dynamic_resize_conf_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::oneflow::SyncDynamicResizeKernelConf& KernelConf::sync_dynamic_resize_conf() const {
  // @@protoc_insertion_point(field_get:oneflow.KernelConf.sync_dynamic_resize_conf)
  return has_sync_dynamic_resize_conf()
      ? *kernel_type_.sync_dynamic_resize_conf_
      : *reinterpret_cast< ::oneflow::SyncDynamicResizeKernelConf*>(&::oneflow::_SyncDynamicResizeKernelConf_default_instance_);
}
inline ::oneflow::SyncDynamicResizeKernelConf* KernelConf::mutable_sync_dynamic_resize_conf() {
  if (!has_sync_dynamic_resize_conf()) {
    clear_kernel_type();
    set_has_sync_dynamic_resize_conf();
    kernel_type_.sync_dynamic_resize_conf_ = CreateMaybeMessage< ::oneflow::SyncDynamicResizeKernelConf >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:oneflow.KernelConf.sync_dynamic_resize_conf)
  return kernel_type_.sync_dynamic_resize_conf_;
}

// optional .oneflow.ShapeElemCntKernelConf shape_elem_cnt_conf = 412;
inline bool KernelConf::has_shape_elem_cnt_conf() const {
  return kernel_type_case() == kShapeElemCntConf;
}
inline void KernelConf::set_has_shape_elem_cnt_conf() {
  _oneof_case_[0] = kShapeElemCntConf;
}
inline void KernelConf::clear_shape_elem_cnt_conf() {
  if (has_shape_elem_cnt_conf()) {
    delete kernel_type_.shape_elem_cnt_conf_;
    clear_has_kernel_type();
  }
}
inline ::oneflow::ShapeElemCntKernelConf* KernelConf::release_shape_elem_cnt_conf() {
  // @@protoc_insertion_point(field_release:oneflow.KernelConf.shape_elem_cnt_conf)
  if (has_shape_elem_cnt_conf()) {
    clear_has_kernel_type();
      ::oneflow::ShapeElemCntKernelConf* temp = kernel_type_.shape_elem_cnt_conf_;
    kernel_type_.shape_elem_cnt_conf_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::oneflow::ShapeElemCntKernelConf& KernelConf::shape_elem_cnt_conf() const {
  // @@protoc_insertion_point(field_get:oneflow.KernelConf.shape_elem_cnt_conf)
  return has_shape_elem_cnt_conf()
      ? *kernel_type_.shape_elem_cnt_conf_
      : *reinterpret_cast< ::oneflow::ShapeElemCntKernelConf*>(&::oneflow::_ShapeElemCntKernelConf_default_instance_);
}
inline ::oneflow::ShapeElemCntKernelConf* KernelConf::mutable_shape_elem_cnt_conf() {
  if (!has_shape_elem_cnt_conf()) {
    clear_kernel_type();
    set_has_shape_elem_cnt_conf();
    kernel_type_.shape_elem_cnt_conf_ = CreateMaybeMessage< ::oneflow::ShapeElemCntKernelConf >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:oneflow.KernelConf.shape_elem_cnt_conf)
  return kernel_type_.shape_elem_cnt_conf_;
}

// optional .oneflow.BroadcastToCompatibleWithKernelConf broadcast_to_compatible_with_conf = 428;
inline bool KernelConf::has_broadcast_to_compatible_with_conf() const {
  return kernel_type_case() == kBroadcastToCompatibleWithConf;
}
inline void KernelConf::set_has_broadcast_to_compatible_with_conf() {
  _oneof_case_[0] = kBroadcastToCompatibleWithConf;
}
inline void KernelConf::clear_broadcast_to_compatible_with_conf() {
  if (has_broadcast_to_compatible_with_conf()) {
    delete kernel_type_.broadcast_to_compatible_with_conf_;
    clear_has_kernel_type();
  }
}
inline ::oneflow::BroadcastToCompatibleWithKernelConf* KernelConf::release_broadcast_to_compatible_with_conf() {
  // @@protoc_insertion_point(field_release:oneflow.KernelConf.broadcast_to_compatible_with_conf)
  if (has_broadcast_to_compatible_with_conf()) {
    clear_has_kernel_type();
      ::oneflow::BroadcastToCompatibleWithKernelConf* temp = kernel_type_.broadcast_to_compatible_with_conf_;
    kernel_type_.broadcast_to_compatible_with_conf_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::oneflow::BroadcastToCompatibleWithKernelConf& KernelConf::broadcast_to_compatible_with_conf() const {
  // @@protoc_insertion_point(field_get:oneflow.KernelConf.broadcast_to_compatible_with_conf)
  return has_broadcast_to_compatible_with_conf()
      ? *kernel_type_.broadcast_to_compatible_with_conf_
      : *reinterpret_cast< ::oneflow::BroadcastToCompatibleWithKernelConf*>(&::oneflow::_BroadcastToCompatibleWithKernelConf_default_instance_);
}
inline ::oneflow::BroadcastToCompatibleWithKernelConf* KernelConf::mutable_broadcast_to_compatible_with_conf() {
  if (!has_broadcast_to_compatible_with_conf()) {
    clear_kernel_type();
    set_has_broadcast_to_compatible_with_conf();
    kernel_type_.broadcast_to_compatible_with_conf_ = CreateMaybeMessage< ::oneflow::BroadcastToCompatibleWithKernelConf >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:oneflow.KernelConf.broadcast_to_compatible_with_conf)
  return kernel_type_.broadcast_to_compatible_with_conf_;
}

// optional .oneflow.ImageDecoderRandomCropResizeKernelConf image_decoder_random_crop_resize_conf = 429;
inline bool KernelConf::has_image_decoder_random_crop_resize_conf() const {
  return kernel_type_case() == kImageDecoderRandomCropResizeConf;
}
inline void KernelConf::set_has_image_decoder_random_crop_resize_conf() {
  _oneof_case_[0] = kImageDecoderRandomCropResizeConf;
}
inline void KernelConf::clear_image_decoder_random_crop_resize_conf() {
  if (has_image_decoder_random_crop_resize_conf()) {
    delete kernel_type_.image_decoder_random_crop_resize_conf_;
    clear_has_kernel_type();
  }
}
inline ::oneflow::ImageDecoderRandomCropResizeKernelConf* KernelConf::release_image_decoder_random_crop_resize_conf() {
  // @@protoc_insertion_point(field_release:oneflow.KernelConf.image_decoder_random_crop_resize_conf)
  if (has_image_decoder_random_crop_resize_conf()) {
    clear_has_kernel_type();
      ::oneflow::ImageDecoderRandomCropResizeKernelConf* temp = kernel_type_.image_decoder_random_crop_resize_conf_;
    kernel_type_.image_decoder_random_crop_resize_conf_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::oneflow::ImageDecoderRandomCropResizeKernelConf& KernelConf::image_decoder_random_crop_resize_conf() const {
  // @@protoc_insertion_point(field_get:oneflow.KernelConf.image_decoder_random_crop_resize_conf)
  return has_image_decoder_random_crop_resize_conf()
      ? *kernel_type_.image_decoder_random_crop_resize_conf_
      : *reinterpret_cast< ::oneflow::ImageDecoderRandomCropResizeKernelConf*>(&::oneflow::_ImageDecoderRandomCropResizeKernelConf_default_instance_);
}
inline ::oneflow::ImageDecoderRandomCropResizeKernelConf* KernelConf::mutable_image_decoder_random_crop_resize_conf() {
  if (!has_image_decoder_random_crop_resize_conf()) {
    clear_kernel_type();
    set_has_image_decoder_random_crop_resize_conf();
    kernel_type_.image_decoder_random_crop_resize_conf_ = CreateMaybeMessage< ::oneflow::ImageDecoderRandomCropResizeKernelConf >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:oneflow.KernelConf.image_decoder_random_crop_resize_conf)
  return kernel_type_.image_decoder_random_crop_resize_conf_;
}

inline bool KernelConf::has_kernel_type() const {
  return kernel_type_case() != KERNEL_TYPE_NOT_SET;
}
inline void KernelConf::clear_has_kernel_type() {
  _oneof_case_[0] = KERNEL_TYPE_NOT_SET;
}
inline KernelConf::KernelTypeCase KernelConf::kernel_type_case() const {
  return KernelConf::KernelTypeCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace oneflow

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fkernel_2fkernel_2eproto
