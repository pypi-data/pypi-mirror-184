Metadata-Version: 2.1
Name: visionner
Version: 0.0.1
Summary: Visionner convert your image dataset into a numpy array ; more suitable for computer vision tasks
Home-page: https://github.com/charleslf2/Visionner
Author: Charles TCHANAKE
Author-email: datadevfernolf@gmail.com
License: MIT
Project-URL: Bug Tracker, https://github.com/charleslf2/Visionner/issues
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Classifier: Development Status :: 4 - Beta
Description-Content-Type: text/markdown
License-File: LICENSE.txt
Requires-Dist: numpy
Requires-Dist: opencv-python
Requires-Dist: matplotlib
Requires-Dist: rich

# visionner
Visionner convert your image dataset into a numpy array ; more suitable for computer vision tasks.

#### Purpose of the package
+  The purpose of this package is to convert your image dataset into a numpy array wich is more suitable for Image processing , deep learning and computer vision tasks.


#### Features
+  Convert image folder into numpy array


### Getting Started
The package can be found on pypi hence you can install it using pip

#### Installation

```bash

pip install visionner

```
### Usage
```python

### import usefull package
>>> from visionner import Vision
>>> import matplotlib.pyplot as plt 

### basic usage
>>> your_dataset=Vision("path/to/your/dataset/", size=(28, 28), normalize=True)

### visualize the first image
>>> plt.imshow(your_dataset[0])
>>> plt.show()

```


### Contribution
Contribution are welcome.
Notice a bug ? let us know. Thanks you

### Author
+ Main Maitainer : Charles TCHANAKE
+ email : datadevfernolf@gmail.com 

### Note 

if you get an unicode erro like  this :

```
SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 2-3: truncated \UXXXXXXXX escape

```

add **r** at the begining of your path like this

```python
>>> your_dataset=Vision(r"path/to/your/dataset/", size=(28, 28), normalize=True)
```
