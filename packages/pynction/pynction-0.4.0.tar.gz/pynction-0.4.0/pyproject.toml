[tool.poetry]
name = "pynction"
version = "0.4.0"
description = "Functional based library to support monads and other functional programming concepts"
authors = ["Nicolas Nuñez <nicolas110996@gmail.com>"]
maintainers = ["Nicolas Nuñez <nicolas110996@gmail.com>"]
license = "MIT"
readme = "README.md"
classifiers = [
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development",
    "Topic :: Utilities",
]
repository = "https://github.com/niconunez96/pynction"
documentation = "https://pynction.vercel.app/"
packages = [
    { include = "pynction" }
]

[tool.poetry.dependencies]
python = "^3.7"

[tool.poetry.group.dev.dependencies]
black = "22.12.0"
flake8 = "5.0.4"
flake8-commas = "2.1.0"
flake8-comprehensions = "3.10.1"
flake8-debugger = "4.1.2"
flake8-isort = "4.2.0"
flake8-string-format = "0.3.0"
flake8-bandit = "4.1.1"
isort = "5.10.1"
mypy = "0.991"
pep8-naming = "0.13.3"

[tool.poetry.group.test.dependencies]
coverage = "6.3.2"
pytest = "7.0.1"

[tool.poetry.group.tooling.dependencies]
python-semantic-release = "^7.32.2"
pdoc3 = "0.10.0"
pre-commit = "2.17.0"

[tool.semantic_release]
version_source = "tag"
commit_version_number = true
version_variable = [
    "pynction/__init__.py:__version__",
]
version_toml = [
    "pyproject.toml:tool.poetry.version"
]
branch = "main"
upload_to_release = true
upload_to_pypi = true
build_command = "pip install poetry && poetry build"

[tool.mypy]
python_version = 3.7
exclude = ["env", "performance_test.py", "tasks.py"]

implicit_optional = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
warn_unused_ignores = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "tests/*"
disallow_untyped_decorators = false
disallow_untyped_calls = false
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true

[tool.isort]
profile = "black"
py_version = 37
extend_skip = ["env"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
