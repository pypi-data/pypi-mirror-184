Metadata-Version: 2.1
Name: interceptoraptor
Version: 0.0.3
Summary: Intercept banana environment data (a.k.a. another VCR.py)
License: MIT License
Classifier: Intended Audience :: Developers
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Software Development :: Debuggers
Classifier: Topic :: Software Development :: Quality Assurance
Classifier: Topic :: Software Development :: Testing
Provides-Extra: deploy_to_pip
Requires-Dist: twine ; extra == 'deploy_to_pip'
Requires-Dist: build ; extra == 'deploy_to_pip'
Provides-Extra: dev
Requires-Dist: pytest ; extra == 'dev'
Requires-Dist: pylint ; extra == 'dev'
Requires-Dist: coverage ; extra == 'dev'
Requires-Dist: flake8 ; extra == 'dev'
Requires-Dist: sphinx ; extra == 'dev'

=============================================================
Interceptoraptor - Intercept and Terminate your data problem.
=============================================================

You're welcome to use this tool in case you have a bug in as "hot" environment (prod, pre-prod, ...)
which can not be reproduced in your local IDE environment due to chains of many external requests dependencies (db, HTTP, ...).

We could address this in a few steps:

1. Record:
    Intercept and save data from *any* API on dependable environment (prod, pre-prod,...)

2. Fetch:
    Transport intercepted data to your IDE environment.

3. Replay:
    Replay captured from data environment into your IDE environment.

4. Repeat "Replay" step until you find a solution to the problem.

The idea is heavily inspired by `Vcrpy library <https://vcrpy.readthedocs.io/en/latest/>`_.
`Here <./docs/why_not_vcrpy.rst>`_ is listed some points where vcrpy does not perform well for our problem areas.

Eager to get started? This page gives a good introduction in how to get started with `<./docs/quickstart.rst>`_.
