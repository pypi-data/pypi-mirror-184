# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bastionlab_torch.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x16\x62\x61stionlab_torch.proto\x12\x10\x62\x61stionlab_torch\"P\n\tReference\x12\x12\n\nidentifier\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\x12\x0c\n\x04meta\x18\x04 \x01(\x0c\"V\n\x05\x43hunk\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x0c\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\x12\x0e\n\x06secret\x18\x04 \x01(\x0c\x12\x0c\n\x04meta\x18\x05 \x01(\x0c\"\x07\n\x05\x45mpty\"\x89\x05\n\x0bTrainConfig\x12*\n\x05model\x18\x01 \x01(\x0b\x32\x1b.bastionlab_torch.Reference\x12,\n\x07\x64\x61taset\x18\x02 \x01(\x0b\x32\x1b.bastionlab_torch.Reference\x12\x12\n\nbatch_size\x18\x03 \x01(\x05\x12\x0e\n\x06\x65pochs\x18\x04 \x01(\x05\x12\x0e\n\x06\x64\x65vice\x18\x05 \x01(\t\x12\x0e\n\x06metric\x18\x06 \x01(\t\x12\x0b\n\x03\x65ps\x18\x07 \x01(\x02\x12\x15\n\rmax_grad_norm\x18\x08 \x01(\x02\x12\x12\n\nmetric_eps\x18\t \x01(\x02\x12\x1e\n\x16per_n_steps_checkpoint\x18\x0c \x01(\x05\x12\x1f\n\x17per_n_epochs_checkpoint\x18\r \x01(\x05\x12\x0e\n\x06resume\x18\x0e \x01(\x08\x12\x30\n\x03sgd\x18\n \x01(\x0b\x32!.bastionlab_torch.TrainConfig.SGDH\x00\x12\x32\n\x04\x61\x64\x61m\x18\x0b \x01(\x0b\x32\".bastionlab_torch.TrainConfig.AdamH\x00\x1ai\n\x03SGD\x12\x15\n\rlearning_rate\x18\x01 \x01(\x02\x12\x14\n\x0cweight_decay\x18\x02 \x01(\x02\x12\x10\n\x08momentum\x18\x03 \x01(\x02\x12\x11\n\tdampening\x18\x04 \x01(\x02\x12\x10\n\x08nesterov\x18\x05 \x01(\x08\x1au\n\x04\x41\x64\x61m\x12\x15\n\rlearning_rate\x18\x01 \x01(\x02\x12\x0e\n\x06\x62\x65ta_1\x18\x02 \x01(\x02\x12\x0e\n\x06\x62\x65ta_2\x18\x03 \x01(\x02\x12\x0f\n\x07\x65psilon\x18\x04 \x01(\x02\x12\x14\n\x0cweight_decay\x18\x05 \x01(\x02\x12\x0f\n\x07\x61msgrad\x18\x06 \x01(\x08\x42\x0b\n\toptimizer\"\xae\x01\n\nTestConfig\x12*\n\x05model\x18\x01 \x01(\x0b\x32\x1b.bastionlab_torch.Reference\x12,\n\x07\x64\x61taset\x18\x02 \x01(\x0b\x32\x1b.bastionlab_torch.Reference\x12\x12\n\nbatch_size\x18\x03 \x01(\x05\x12\x0e\n\x06\x64\x65vice\x18\x04 \x01(\t\x12\x0e\n\x06metric\x18\x05 \x01(\t\x12\x12\n\nmetric_eps\x18\x06 \x01(\x02\"7\n\nReferences\x12)\n\x04list\x18\x01 \x03(\x0b\x32\x1b.bastionlab_torch.Reference\"\x19\n\x08\x41\x63\x63uracy\x12\r\n\x05value\x18\x01 \x01(\x02\"\x17\n\x07\x44\x65vices\x12\x0c\n\x04list\x18\x01 \x03(\t\"\x1a\n\nOptimizers\x12\x0c\n\x04list\x18\x01 \x03(\t\"q\n\x06Metric\x12\r\n\x05value\x18\x01 \x01(\x02\x12\x13\n\x0buncertainty\x18\x02 \x01(\x02\x12\r\n\x05\x62\x61tch\x18\x03 \x01(\x05\x12\r\n\x05\x65poch\x18\x04 \x01(\x05\x12\x11\n\tnb_epochs\x18\x05 \x01(\x05\x12\x12\n\nnb_batches\x18\x06 \x01(\x05\x32\xc8\x07\n\x0cTorchService\x12G\n\x0bSendDataset\x12\x17.bastionlab_torch.Chunk\x1a\x1b.bastionlab_torch.Reference\"\x00(\x01\x12\x45\n\tSendModel\x12\x17.bastionlab_torch.Chunk\x1a\x1b.bastionlab_torch.Reference\"\x00(\x01\x12H\n\x0c\x46\x65tchDataset\x12\x1b.bastionlab_torch.Reference\x1a\x17.bastionlab_torch.Chunk\"\x00\x30\x01\x12G\n\x0b\x46\x65tchModule\x12\x1b.bastionlab_torch.Reference\x1a\x17.bastionlab_torch.Chunk\"\x00\x30\x01\x12G\n\rDeleteDataset\x12\x1b.bastionlab_torch.Reference\x1a\x17.bastionlab_torch.Empty\"\x00\x12\x46\n\x0c\x44\x65leteModule\x12\x1b.bastionlab_torch.Reference\x1a\x17.bastionlab_torch.Empty\"\x00\x12J\n\x0f\x41vailableModels\x12\x17.bastionlab_torch.Empty\x1a\x1c.bastionlab_torch.References\"\x00\x12L\n\x11\x41vailableDatasets\x12\x17.bastionlab_torch.Empty\x1a\x1c.bastionlab_torch.References\"\x00\x12H\n\x10\x41vailableDevices\x12\x17.bastionlab_torch.Empty\x1a\x19.bastionlab_torch.Devices\"\x00\x12N\n\x13\x41vailableOptimizers\x12\x17.bastionlab_torch.Empty\x1a\x1c.bastionlab_torch.Optimizers\"\x00\x12\x45\n\x05Train\x12\x1d.bastionlab_torch.TrainConfig\x1a\x1b.bastionlab_torch.Reference\"\x00\x12\x43\n\x04Test\x12\x1c.bastionlab_torch.TestConfig\x1a\x1b.bastionlab_torch.Reference\"\x00\x12\x44\n\tGetMetric\x12\x1b.bastionlab_torch.Reference\x1a\x18.bastionlab_torch.Metric\"\x00\x62\x06proto3')



_REFERENCE = DESCRIPTOR.message_types_by_name['Reference']
_CHUNK = DESCRIPTOR.message_types_by_name['Chunk']
_EMPTY = DESCRIPTOR.message_types_by_name['Empty']
_TRAINCONFIG = DESCRIPTOR.message_types_by_name['TrainConfig']
_TRAINCONFIG_SGD = _TRAINCONFIG.nested_types_by_name['SGD']
_TRAINCONFIG_ADAM = _TRAINCONFIG.nested_types_by_name['Adam']
_TESTCONFIG = DESCRIPTOR.message_types_by_name['TestConfig']
_REFERENCES = DESCRIPTOR.message_types_by_name['References']
_ACCURACY = DESCRIPTOR.message_types_by_name['Accuracy']
_DEVICES = DESCRIPTOR.message_types_by_name['Devices']
_OPTIMIZERS = DESCRIPTOR.message_types_by_name['Optimizers']
_METRIC = DESCRIPTOR.message_types_by_name['Metric']
Reference = _reflection.GeneratedProtocolMessageType('Reference', (_message.Message,), {
  'DESCRIPTOR' : _REFERENCE,
  '__module__' : 'bastionlab_torch_pb2'
  # @@protoc_insertion_point(class_scope:bastionlab_torch.Reference)
  })
_sym_db.RegisterMessage(Reference)

Chunk = _reflection.GeneratedProtocolMessageType('Chunk', (_message.Message,), {
  'DESCRIPTOR' : _CHUNK,
  '__module__' : 'bastionlab_torch_pb2'
  # @@protoc_insertion_point(class_scope:bastionlab_torch.Chunk)
  })
_sym_db.RegisterMessage(Chunk)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), {
  'DESCRIPTOR' : _EMPTY,
  '__module__' : 'bastionlab_torch_pb2'
  # @@protoc_insertion_point(class_scope:bastionlab_torch.Empty)
  })
_sym_db.RegisterMessage(Empty)

TrainConfig = _reflection.GeneratedProtocolMessageType('TrainConfig', (_message.Message,), {

  'SGD' : _reflection.GeneratedProtocolMessageType('SGD', (_message.Message,), {
    'DESCRIPTOR' : _TRAINCONFIG_SGD,
    '__module__' : 'bastionlab_torch_pb2'
    # @@protoc_insertion_point(class_scope:bastionlab_torch.TrainConfig.SGD)
    })
  ,

  'Adam' : _reflection.GeneratedProtocolMessageType('Adam', (_message.Message,), {
    'DESCRIPTOR' : _TRAINCONFIG_ADAM,
    '__module__' : 'bastionlab_torch_pb2'
    # @@protoc_insertion_point(class_scope:bastionlab_torch.TrainConfig.Adam)
    })
  ,
  'DESCRIPTOR' : _TRAINCONFIG,
  '__module__' : 'bastionlab_torch_pb2'
  # @@protoc_insertion_point(class_scope:bastionlab_torch.TrainConfig)
  })
_sym_db.RegisterMessage(TrainConfig)
_sym_db.RegisterMessage(TrainConfig.SGD)
_sym_db.RegisterMessage(TrainConfig.Adam)

TestConfig = _reflection.GeneratedProtocolMessageType('TestConfig', (_message.Message,), {
  'DESCRIPTOR' : _TESTCONFIG,
  '__module__' : 'bastionlab_torch_pb2'
  # @@protoc_insertion_point(class_scope:bastionlab_torch.TestConfig)
  })
_sym_db.RegisterMessage(TestConfig)

References = _reflection.GeneratedProtocolMessageType('References', (_message.Message,), {
  'DESCRIPTOR' : _REFERENCES,
  '__module__' : 'bastionlab_torch_pb2'
  # @@protoc_insertion_point(class_scope:bastionlab_torch.References)
  })
_sym_db.RegisterMessage(References)

Accuracy = _reflection.GeneratedProtocolMessageType('Accuracy', (_message.Message,), {
  'DESCRIPTOR' : _ACCURACY,
  '__module__' : 'bastionlab_torch_pb2'
  # @@protoc_insertion_point(class_scope:bastionlab_torch.Accuracy)
  })
_sym_db.RegisterMessage(Accuracy)

Devices = _reflection.GeneratedProtocolMessageType('Devices', (_message.Message,), {
  'DESCRIPTOR' : _DEVICES,
  '__module__' : 'bastionlab_torch_pb2'
  # @@protoc_insertion_point(class_scope:bastionlab_torch.Devices)
  })
_sym_db.RegisterMessage(Devices)

Optimizers = _reflection.GeneratedProtocolMessageType('Optimizers', (_message.Message,), {
  'DESCRIPTOR' : _OPTIMIZERS,
  '__module__' : 'bastionlab_torch_pb2'
  # @@protoc_insertion_point(class_scope:bastionlab_torch.Optimizers)
  })
_sym_db.RegisterMessage(Optimizers)

Metric = _reflection.GeneratedProtocolMessageType('Metric', (_message.Message,), {
  'DESCRIPTOR' : _METRIC,
  '__module__' : 'bastionlab_torch_pb2'
  # @@protoc_insertion_point(class_scope:bastionlab_torch.Metric)
  })
_sym_db.RegisterMessage(Metric)

_TORCHSERVICE = DESCRIPTOR.services_by_name['TorchService']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _REFERENCE._serialized_start=44
  _REFERENCE._serialized_end=124
  _CHUNK._serialized_start=126
  _CHUNK._serialized_end=212
  _EMPTY._serialized_start=214
  _EMPTY._serialized_end=221
  _TRAINCONFIG._serialized_start=224
  _TRAINCONFIG._serialized_end=873
  _TRAINCONFIG_SGD._serialized_start=636
  _TRAINCONFIG_SGD._serialized_end=741
  _TRAINCONFIG_ADAM._serialized_start=743
  _TRAINCONFIG_ADAM._serialized_end=860
  _TESTCONFIG._serialized_start=876
  _TESTCONFIG._serialized_end=1050
  _REFERENCES._serialized_start=1052
  _REFERENCES._serialized_end=1107
  _ACCURACY._serialized_start=1109
  _ACCURACY._serialized_end=1134
  _DEVICES._serialized_start=1136
  _DEVICES._serialized_end=1159
  _OPTIMIZERS._serialized_start=1161
  _OPTIMIZERS._serialized_end=1187
  _METRIC._serialized_start=1189
  _METRIC._serialized_end=1302
  _TORCHSERVICE._serialized_start=1305
  _TORCHSERVICE._serialized_end=2273
# @@protoc_insertion_point(module_scope)
