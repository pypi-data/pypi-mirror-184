[project]
name = "docubox"
requires-python = ">=3.11"
description = "single busybox like binary for document solutions"
license = {text = 'BSD 2-Clause "Simplified" License'}
authors = [
    {name = "Hiroshi Miura", email = "miurahr@linux.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: BSD License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
  'mkdocs==1.4.2',
  'mkdocs-material==8.5.11',
  'mkdocs-plantuml==0.1.1',
  'mkdocs-alabaster==0.8.0',
  'mkdocs-custommill==1.3.0',
  'mkdocs-badges==0.4.0',
  'mkdocs-coverage==0.2.6',
  'lunr==0.6.2',
  'PyInstaller==5.7.0',
  'PyYAML==6.0',
  'Sphinx==5.3.0',
  'sphinx-intl==2.0.1',
  'babel==2.11.0',
  'myst_parser==0.18.1',
  'markdown-it-py==2.1.0',
  'linkify-it-py==2.0.0',
  'sphinxcontrib-ditaa==1.0.2',
  'sphinxcontrib-drawio==0.0.16',
  'sphinxcontrib-httpdomain==1.8.1',
  'sphinxcontrib-imagesvg==0.1',
  'sphinxcontrib-openapi==0.7.0',
  'sphinxcontrib-plantuml==0.24.1',
  'sphinxcontrib-svgbob==0.2.1',
  'sphinxcontrib-redoc==1.6.0',
  'sphinxcontrib-xlsxtable==1.0.0',
  'sphinxcontrib-websupport==1.2.4',
  'sphinxcontrib-youtube==1.2.0',
  'sphinxemoji==0.2.0',
  #'sphinx-needs==1.1.1', ## exclude because depends on big modules such as numpy, matplotlib
  'sphinx-bootstrap-theme==0.8.1',
  'sphinx_rtd_theme==1.1.1',
  'jinja2[i18n]==3.1.2',
  'j2cli==0.3.10',
  'pygments-style-kit==1.0.1',
]
keywords = ['mkdocs', "sphinx", "babel", 'PyInstaller']
dynamic = ["readme", "version"]

[tool.setuptools.dynamic]
readme = {file = ["README.rst"]}

[build-system]
requires = ["setuptools>=63", "setuptools_scm[toml]>=7.0.5"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]
namespaces = false

[tool.setuptools_scm]
local_scheme = "no-local-version"
write_to = "src/docubox/version.py"
write_to_template = """
__version__ = \"{version}\"
"""
tag_regex = "^(?P<prefix>v)?(?P<version>[^\\+]+)(?P<suffix>.*)?$"
